From: <Saved by Blink>
Snapshot-Content-Location: https://chatgpt.com/c/6738ea84-9a28-8012-b098-8f480130ec51
Subject: Image Text Translation
Date: Sun, 17 Nov 2024 06:40:24 -0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----"


------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/html
Content-ID: <frame-7C3429794CA74CACA7BBFE9BF75C52E1@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chatgpt.com/c/6738ea84-9a28-8012-b098-8f480130ec51

<!DOCTYPE html><html data-build=3D"prod-08f98eadd5e13e9e7147eac9a354fa16faf=
13a40" dir=3D"ltr" class=3D"dark" style=3D"color-scheme: dark;"><head><meta=
 http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"><link r=
el=3D"stylesheet" type=3D"text/css" href=3D"cid:css-fc032368-b22b-48d2-bb88=
-0eb08901b073@mhtml.blink" /><meta name=3D"viewport" content=3D"width=3Ddev=
ice-width, initial-scale=3D1"><link rel=3D"preconnect" href=3D"https://cdn.=
oaistatic.com/"><meta name=3D"robots" content=3D"index, follow"><meta name=
=3D"apple-itunes-app" content=3D"app-id=3D6448311069"><link rel=3D"apple-to=
uch-icon" sizes=3D"180x180" href=3D"https://cdn.oaistatic.com/assets/apple-=
touch-icon-mz9nytnj.webp"><link rel=3D"icon" type=3D"image/png" sizes=3D"32=
x32" href=3D"https://cdn.oaistatic.com/assets/favicon-32x32-p4ktpm1x.webp" =
media=3D"(prefers-color-scheme: light)"><link rel=3D"icon" type=3D"image/pn=
g" sizes=3D"32x32" href=3D"https://cdn.oaistatic.com/assets/favicon-dark-32=
x32-gt5kfzyp.webp" media=3D"(prefers-color-scheme: dark)"><link rel=3D"icon=
" type=3D"image/svg+xml" sizes=3D"32x32" href=3D"https://cdn.oaistatic.com/=
assets/favicon-o20kmmos.svg"><title>Image Text Translation</title><meta nam=
e=3D"description" content=3D"ChatGPT helps you get answers, find inspiratio=
n and be more productive. It is free to use and easy to try. Just ask and C=
hatGPT can help with writing, learning, brainstorming and more."><meta name=
=3D"keyword" content=3D"ai chat,ai,chap gpt,chat gbt,chat gpt 3,chat gpt lo=
gin,chat gpt website,chat gpt,chat gtp,chat openai,chat,chatai,chatbot gpt,=
chatg,chatgpt login,chatgpt,gpt chat,open ai,openai chat,openai chatgpt,ope=
nai"><meta property=3D"og:description" content=3D"A conversational AI syste=
m that listens, learns, and challenges"><meta property=3D"og:title" content=
=3D"ChatGPT"><meta property=3D"og:image" content=3D"https://cdn.oaistatic.c=
om/assets/chatgpt-share-og-u7j5uyao.webp"><meta property=3D"og:url" content=
=3D"https://chatgpt.com"><link rel=3D"stylesheet" href=3D"https://cdn.oaist=
atic.com/assets/root-jo2ifv11.css"><link rel=3D"stylesheet" href=3D"https:/=
/cdn.oaistatic.com/assets/conversation-small-o3h1ik6j.css"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/g8fao4zcu8rl4ap4.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/db2yuwmgtlw331km.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/u7imi8dyp3ybk8s0.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/nb1=
9zwwjnu1w9qvt.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/kmzly0tfahf87poc.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/3awmz3clv978tfh5.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/ebqgulhtfje71=
6f3.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://cdn.oaistatic.com/assets/nuho9o392xhbz80e.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/ass=
ets/s9y9foxsyodvojf2.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/esgrmde1rv71b2bn.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/d0x5lx8xixrjk0pv.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/b1tx0o5l=
ec5l1zgg.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/eqmc2le0pqjq22bn.js"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/fzrn137102spawew.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/okjoaa5a857mns87.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/cqi95yj4q81x7ujl.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/n0y=
77d66tghmqc6s.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/l30wv3e9u4mghwbs.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/lpssxu4zr5a0f91e.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/g2tpotr3lhgca=
s9c.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://cdn.oaistatic.com/assets/iej0cupg2dqkmejt.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/ass=
ets/mlg2f29krveebm2t.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/dktctc7f2lfkgdqj.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/ftlpzyflvlw4vun3.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/c4bxzbp1=
808foto4.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/jk8w36bsokizpx57.js"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/o08nmkcxb6lwuon7.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/gx9a2zv27kx5im86.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/cfgvp6y7psx6m6qg.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/d3y=
72ugnrmac5z1v.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/jcdfkkc7iqnya4rn.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/e9lafxuzyeh4418f.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/n61ir5il0l5n2=
i28.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://cdn.oaistatic.com/assets/iyj331i3qpqp1mxd.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/ass=
ets/btnrcomqa6s5ppow.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/nc9n24skvexprne0.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/bt5delkqv3seoxod.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/fds6lwzq=
k7j1vjqc.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/lxzmhhgdalehjxj2.js"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/b5vmhminnfygy5wt.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/oeu2xp5bhn801ov0.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/nv455f1273g8wcar.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/hnm=
zks9ady0s8f6l.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/j3m7mblm9oky51d5.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/fnx51xc2tuy5qjh9.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/kqwdyvkaaavvn=
8k3.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://cdn.oaistatic.com/assets/lq43rd96urau4093.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/ass=
ets/d7i7xmy31eeb8e80.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/d9vdcakeqav3xsi4.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/983a0dy92b3ronpv.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/cgfcahlr=
k4uo2yyg.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/o4vn8qxawxe032d1.js"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/epad03anwnpg1fn2.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/mtaemr2pznqkl4ig.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/dgkb24p1e4wp55v5.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/d25=
5fo2mwxwx9l4j.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/79fim6f3v4hoib63.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/eymyq72jzbpxck1z.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/je7gjg1s5i2f8=
a69.js"></head><body class=3D"" data-new-gr-c-s-check-loaded=3D"14.1207.0" =
data-gr-ext-installed=3D"" data-new-gr-c-s-loaded=3D"14.1207.0"><span data-=
testid=3D"blocking-initial-modals-done" class=3D"hidden"></span><div class=
=3D"relative flex h-full w-full overflow-hidden transition-colors z-0"><div=
 class=3D"z-[21] flex-shrink-0 overflow-x-hidden bg-token-sidebar-surface-p=
rimary max-md:!w-0" style=3D"width:260px"><div class=3D"h-full w-[260px]"><=
div class=3D"flex h-full min-h-0 flex-col"><div class=3D"draggable relative=
 h-full w-full flex-1 items-start border-white/20"><h2 style=3D"position:ab=
solute;border:0;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;=
clip:rect(0, 0, 0, 0);white-space:nowrap;word-wrap:normal">Chat history</h2=
><nav class=3D"flex h-full w-full flex-col px-3" aria-label=3D"Chat history=
"><div class=3D"flex justify-between flex h-[60px] items-center md:h-header=
-height"><span class=3D"flex" data-state=3D"closed"><button aria-label=3D"C=
lose sidebar" data-testid=3D"close-sidebar-button" class=3D"h-10 rounded-lg=
 px-2 text-token-text-secondary focus-visible:outline-0 disabled:text-token=
-text-quaternary focus-visible:bg-token-sidebar-surface-secondary enabled:h=
over:bg-token-sidebar-surface-secondary no-draggable"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-xl-heavy max-md:hidden"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M8.85719 3H15.1428C16.2266 2.99999 17.1007 2.999=
98 17.8086 3.05782C18.5375 3.11737 19.1777 3.24318 19.77 3.54497C20.7108 4.=
02433 21.4757 4.78924 21.955 5.73005C22.2568 6.32234 22.3826 6.96253 22.442=
2 7.69138C22.5 8.39925 22.5 9.27339 22.5 10.3572V13.6428C22.5 14.7266 22.5 =
15.6008 22.4422 16.3086C22.3826 17.0375 22.2568 17.6777 21.955 18.27C21.475=
7 19.2108 20.7108 19.9757 19.77 20.455C19.1777 20.7568 18.5375 20.8826 17.8=
086 20.9422C17.1008 21 16.2266 21 15.1428 21H8.85717C7.77339 21 6.89925 21 =
6.19138 20.9422C5.46253 20.8826 4.82234 20.7568 4.23005 20.455C3.28924 19.9=
757 2.52433 19.2108 2.04497 18.27C1.74318 17.6777 1.61737 17.0375 1.55782 1=
6.3086C1.49998 15.6007 1.49999 14.7266 1.5 13.6428V10.3572C1.49999 9.27341 =
1.49998 8.39926 1.55782 7.69138C1.61737 6.96253 1.74318 6.32234 2.04497 5.7=
3005C2.52433 4.78924 3.28924 4.02433 4.23005 3.54497C4.82234 3.24318 5.4625=
3 3.11737 6.19138 3.05782C6.89926 2.99998 7.77341 2.99999 8.85719 3ZM6.3542=
4 5.05118C5.74907 5.10062 5.40138 5.19279 5.13803 5.32698C4.57354 5.6146 4.=
1146 6.07354 3.82698 6.63803C3.69279 6.90138 3.60062 7.24907 3.55118 7.8542=
4C3.50078 8.47108 3.5 9.26339 3.5 10.4V13.6C3.5 14.7366 3.50078 15.5289 3.5=
5118 16.1458C3.60062 16.7509 3.69279 17.0986 3.82698 17.362C4.1146 17.9265 =
4.57354 18.3854 5.13803 18.673C5.40138 18.8072 5.74907 18.8994 6.35424 18.9=
488C6.97108 18.9992 7.76339 19 8.9 19H9.5V5H8.9C7.76339 5 6.97108 5.00078 6=
.35424 5.05118ZM11.5 5V19H15.1C16.2366 19 17.0289 18.9992 17.6458 18.9488C1=
8.2509 18.8994 18.5986 18.8072 18.862 18.673C19.4265 18.3854 19.8854 17.926=
5 20.173 17.362C20.3072 17.0986 20.3994 16.7509 20.4488 16.1458C20.4992 15.=
5289 20.5 14.7366 20.5 13.6V10.4C20.5 9.26339 20.4992 8.47108 20.4488 7.854=
24C20.3994 7.24907 20.3072 6.90138 20.173 6.63803C19.8854 6.07354 19.4265 5=
.6146 18.862 5.32698C18.5986 5.19279 18.2509 5.10062 17.6458 5.05118C17.028=
9 5.00078 16.2366 5 15.1 5H11.5ZM5 8.5C5 7.94772 5.44772 7.5 6 7.5H7C7.5522=
9 7.5 8 7.94772 8 8.5C8 9.05229 7.55229 9.5 7 9.5H6C5.44772 9.5 5 9.05229 5=
 8.5ZM5 12C5 11.4477 5.44772 11 6 11H7C7.55229 11 8 11.4477 8 12C8 12.5523 =
7.55229 13 7 13H6C5.44772 13 5 12.5523 5 12Z" fill=3D"currentColor"></path>=
</svg><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-xl-heavy md:hidden"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 8C3 7.44772 3.44772 7 =
4 7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20.5523 9 20 9H4C3.44772 9 3 8.=
55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15H14C14.5523 15 15 15.4477 15 16C15=
 16.5523 14.5523 17 14 17H4C3.44772 17 3 16.5523 3 16Z" fill=3D"currentColo=
r"></path></svg></button></span><div class=3D"flex"><span class=3D"flex" da=
ta-state=3D"closed"><button aria-label=3D"=E2=8C=98 K" class=3D"h-10 rounde=
d-lg px-2 text-token-text-secondary focus-visible:outline-0 disabled:text-t=
oken-text-quaternary focus-visible:bg-token-sidebar-surface-secondary enabl=
ed:hover:bg-token-sidebar-surface-secondary"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-xl-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M10.75 4.25C7.16015 4.25 4.25 7.16015 4.25 10.75C4.25 14.3399 7.16015 1=
7.25 10.75 17.25C14.3399 17.25 17.25 14.3399 17.25 10.75C17.25 7.16015 14.3=
399 4.25 10.75 4.25ZM2.25 10.75C2.25 6.05558 6.05558 2.25 10.75 2.25C15.444=
4 2.25 19.25 6.05558 19.25 10.75C19.25 12.7369 18.5683 14.5645 17.426 16.01=
18L21.4571 20.0429C21.8476 20.4334 21.8476 21.0666 21.4571 21.4571C21.0666 =
21.8476 20.4334 21.8476 20.0429 21.4571L16.0118 17.426C14.5645 18.5683 12.7=
369 19.25 10.75 19.25C6.05558 19.25 2.25 15.4444 2.25 10.75Z" fill=3D"curre=
ntColor"></path></svg></button></span><span class=3D"flex" data-state=3D"cl=
osed"><button aria-label=3D"New chat" data-testid=3D"create-new-chat-button=
" class=3D"h-10 rounded-lg px-2 text-token-text-secondary focus-visible:out=
line-0 disabled:text-token-text-quaternary focus-visible:bg-token-sidebar-s=
urface-secondary enabled:hover:bg-token-sidebar-surface-secondary"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentColor" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-xl-heavy"><path d=3D"M15.6729=
 3.91287C16.8918 2.69392 18.8682 2.69392 20.0871 3.91287C21.3061 5.13182 21=
.3061 7.10813 20.0871 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925 15.52=
55 11.3215 15.6785L9.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.29289 =
15.7071C8.07033 15.4845 7.96554 15.1701 8.01005 14.8586L8.32149 12.6785C8.4=
7449 11.6075 8.97072 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.32708=
C18.235 4.88918 17.525 4.88918 17.0871 5.32708L11.1499 11.2643C10.6909 11.7=
233 10.3932 12.3187 10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C11.6812=
 13.6068 12.2767 13.3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.47497 19=
.1108 5.76499 18.6729 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.99963 1=
0.0008 5.00007C9.00227 5.00084 8.29769 5.00827 7.74651 5.06064C7.20685 5.11=
191 6.88488 5.20117 6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.32698 =
6.63799C5.19279 6.90135 5.10062 7.24904 5.05118 7.8542C5.00078 8.47105 5 9.=
26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 16.7509=
 5.19279 17.0986 5.32698 17.3619C5.6146 17.9264 6.07354 18.3854 6.63803 18.=
673C6.90138 18.8072 7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9.26339=
 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 18.8993=
 17.0986 18.8072 17.362 18.673C17.9265 18.3854 18.3854 17.9264 18.673 17.36=
19C18.7988 17.1151 18.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18.9991 =
14.9977 18.9999 13.9992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20.553 1=
3.0004 21.0003 13.4485 20.9999 14.0007C20.9991 14.9789 20.9932 15.7808 20.9=
304 16.4426C20.8664 17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.2107 1=
9.2108 19.9756 18.27 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 20.9421=
C15.6008 21 14.7266 21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.69138 20.=
9421C6.96253 20.8826 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4.02433=
 19.2107 3.54497 18.2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.3086C2.=
99998 15.6007 2.99999 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.99998 8.3=
9922 3.05782 7.69134C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4.02433=
 4.7892 4.78924 4.0243 5.73005 3.54493C6.28633 3.26149 6.88399 3.13358 7.55=
735 3.06961C8.21919 3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2.99964=
 10.9996 3.447 11 3.99929Z" fill=3D"currentColor"></path></svg></button></s=
pan></div></div><div class=3D"flex-col flex-1 transition-opacity duration-5=
00 relative -mr-2 pr-2 overflow-y-auto"><div class=3D"bg-token-sidebar-surf=
ace-primary pt-0"><div tabindex=3D"0"><a class=3D"group flex h-10 items-cen=
ter gap-2.5 rounded-lg bg-token-sidebar-surface-primary font-normal px-2 ho=
ver:bg-token-sidebar-surface-secondary" data-discover=3D"true" href=3D"http=
s://chatgpt.com/"><div class=3D"h-6 w-6 flex-shrink-0"><div class=3D"relati=
ve flex h-full items-center justify-center text-token-text-primary gizmo-sh=
adow-stroke rounded-full bg-token-main-surface-primary"><svg width=3D"41" h=
eight=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"h-2/3 w-2/3" role=3D"img"><text x=3D"-9999" y=3D"-9999"=
>ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 =
37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83=
404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3=
.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7=
249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42=
214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 =
8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.9564=
64 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.54=
49 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29=
.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.7632=
1 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 1=
7.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4=
998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556=
 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.=
115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 =
40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37=
.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.866=
6 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.=
3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.921=
3 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9=
842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 =
35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.=
51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.08=
18 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30=
.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C2=
4.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0=
893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447=
 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5=
.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5=
228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C=
8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4=
979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107=
 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.5=
5289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.055=
6L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 1=
2.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9=
967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 3=
7.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3=
086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047=
 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3=
348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 =
14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.45=
04 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V=
11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.=
1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.1937=
6 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8=
.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3=
055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.976=
3 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C1=
0.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42=
659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 =
3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8=
668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626=
C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17=
.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.998=
5V17.9991Z" fill=3D"currentColor"></path></svg></div></div><div class=3D"gr=
ow overflow-hidden text-ellipsis whitespace-nowrap text-sm text-token-text-=
primary">ChatGPT</div><div class=3D"flex gap-2"><span class=3D"flex items-c=
enter" data-state=3D"closed"><button class=3D"invisible text-token-text-sec=
ondary hover:text-token-text-primary group-hover:visible"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentColor" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M15.6729 3.91287C16.8918 =
2.69392 18.8682 2.69392 20.0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.=
0871 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925 15.5255 11.3215 15.678=
5L9.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.29289 15.7071C8.07033 1=
5.4845 7.96554 15.1701 8.01005 14.8586L8.32149 12.6785C8.47449 11.6075 8.97=
072 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 1=
7.525 4.88918 17.0871 5.32708L11.1499 11.2643C10.6909 11.7233 10.3932 12.31=
87 10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 =
13.3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.=
6729 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.=
00227 5.00084 8.29769 5.00827 7.74651 5.06064C7.20685 5.11191 6.88488 5.201=
17 6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6=
.90135 5.10062 7.24904 5.05118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6=
C5 14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 =
5.32698 17.3619C5.6146 17.9264 6.07354 18.3854 6.63803 18.673C6.90138 18.80=
72 7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C=
14.7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 =
17.362 18.673C17.9265 18.3854 18.3854 17.9264 18.673 17.3619C18.7988 17.115=
1 18.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18.9991 14.9977 18.9999 1=
3.9992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20.553 13.0004 21.0003 13=
.4485 20.9999 14.0007C20.9991 14.9789 20.9932 15.7808 20.9304 16.4426C20.86=
64 17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.2107 19.2108 19.9756 18=
.27 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 20.9421C15.6008 21 14.72=
66 21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.69138 20.9421C6.96253 20.8=
826 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 =
18.2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.3086C2.99998 15.6007 2.9=
9999 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.99998 8.39922 3.05782 7.69=
134C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4=
.0243 5.73005 3.54493C6.28633 3.26149 6.88399 3.13358 7.55735 3.06961C8.219=
19 3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11=
 3.99929Z" fill=3D"currentColor"></path></svg></button></span></div></a></d=
iv></div><div><div tabindex=3D"0"><a class=3D"group flex h-10 items-center =
gap-2.5 rounded-lg bg-token-sidebar-surface-primary font-normal px-2 hover:=
bg-token-sidebar-surface-secondary" data-discover=3D"true" href=3D"https://=
chatgpt.com/g/g-crEQ67IwZ-worksona-aarav-patel-extension-practitioner"><div=
 class=3D"h-6 w-6 flex-shrink-0"><div class=3D"relative flex h-full items-c=
enter justify-center text-token-text-primary gizmo-shadow-stroke rounded-fu=
ll bg-token-main-surface-primary"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
h-2/3 w-2/3 text-gray-400"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd=
" d=3D"M12.5001 3.44354C12.1907 3.26491 11.8095 3.26491 11.5001 3.44354L5.2=
4667 7.05396L12.0147 10.861L18.9699 7.17886L12.5001 3.44354ZM19.6604 9.0762=
9L13.0002 12.6023V20.2681L19.1604 16.7115C19.4698 16.5329 19.6604 16.2027 1=
9.6604 15.8455V9.07629ZM11.0002 20.2682V12.585L4.33984 8.83857V15.8455C4.33=
984 16.2027 4.53044 16.5329 4.83984 16.7115L11.0002 20.2682ZM10.5001 1.7114=
9C11.4283 1.1756 12.5719 1.1756 13.5001 1.71149L20.1604 5.55679C21.0886 6.0=
9269 21.6604 7.08307 21.6604 8.15487V15.8455C21.6604 16.9173 21.0886 17.907=
6 20.1604 18.4435L13.5001 22.2888C12.5719 22.8247 11.4283 22.8247 10.5001 2=
2.2888L3.83984 18.4435C2.91164 17.9076 2.33984 16.9173 2.33984 15.8455V8.15=
487C2.33984 7.08307 2.91164 6.09269 3.83984 5.55679L10.5001 1.71149Z" fill=
=3D"currentColor"></path></svg></div></div><div class=3D"grow overflow-hidd=
en text-ellipsis whitespace-nowrap text-sm text-token-text-primary">Workson=
a - Aarav Patel, Extension Practitioner</div><div class=3D"flex gap-2"><spa=
n class=3D"flex items-center" data-state=3D"closed"><button class=3D"invisi=
ble text-token-text-secondary hover:text-token-text-primary group-hover:vis=
ible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"current=
Color" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M1=
5.6729 3.91287C16.8918 2.69392 18.8682 2.69392 20.0871 3.91287C21.3061 5.13=
182 21.3061 7.10813 20.0871 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925=
 15.5255 11.3215 15.6785L9.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.=
29289 15.7071C8.07033 15.4845 7.96554 15.1701 8.01005 14.8586L8.32149 12.67=
85C8.47449 11.6075 8.97072 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5=
.32708C18.235 4.88918 17.525 4.88918 17.0871 5.32708L11.1499 11.2643C10.690=
9 11.7233 10.3932 12.3187 10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C1=
1.6812 13.6068 12.2767 13.3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.47=
497 19.1108 5.76499 18.6729 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.9=
9963 10.0008 5.00007C9.00227 5.00084 8.29769 5.00827 7.74651 5.06064C7.2068=
5 5.11191 6.88488 5.20117 6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.=
32698 6.63799C5.19279 6.90135 5.10062 7.24904 5.05118 7.8542C5.00078 8.4710=
5 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 1=
6.7509 5.19279 17.0986 5.32698 17.3619C5.6146 17.9264 6.07354 18.3854 6.638=
03 18.673C6.90138 18.8072 7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9=
.26339 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 1=
8.8993 17.0986 18.8072 17.362 18.673C17.9265 18.3854 18.3854 17.9264 18.673=
 17.3619C18.7988 17.1151 18.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18=
.9991 14.9977 18.9999 13.9992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20=
.553 13.0004 21.0003 13.4485 20.9999 14.0007C20.9991 14.9789 20.9932 15.780=
8 20.9304 16.4426C20.8664 17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.=
2107 19.2108 19.9756 18.27 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 2=
0.9421C15.6008 21 14.7266 21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.691=
38 20.9421C6.96253 20.8826 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4=
.02433 19.2107 3.54497 18.2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.3=
086C2.99998 15.6007 2.99999 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.999=
98 8.39922 3.05782 7.69134C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4=
.02433 4.7892 4.78924 4.0243 5.73005 3.54493C6.28633 3.26149 6.88399 3.1335=
8 7.55735 3.06961C8.21919 3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2=
.99964 10.9996 3.447 11 3.99929Z" fill=3D"currentColor"></path></svg></butt=
on></span></div></a></div><div tabindex=3D"0"><a class=3D"group flex h-10 i=
tems-center gap-2.5 rounded-lg bg-token-sidebar-surface-primary font-normal=
 px-2 hover:bg-token-sidebar-surface-secondary" data-discover=3D"true" href=
=3D"https://chatgpt.com/g/g-UbxbpjwKa-worksona-super-visor-agent"><div clas=
s=3D"h-6 w-6 flex-shrink-0"><div class=3D"relative flex h-full items-center=
 justify-center text-token-text-primary gizmo-shadow-stroke rounded-full bg=
-token-main-surface-primary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"h-2/3 w=
-2/3 text-gray-400"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M12.5001 3.44354C12.1907 3.26491 11.8095 3.26491 11.5001 3.44354L5.24667 7.=
05396L12.0147 10.861L18.9699 7.17886L12.5001 3.44354ZM19.6604 9.07629L13.00=
02 12.6023V20.2681L19.1604 16.7115C19.4698 16.5329 19.6604 16.2027 19.6604 =
15.8455V9.07629ZM11.0002 20.2682V12.585L4.33984 8.83857V15.8455C4.33984 16.=
2027 4.53044 16.5329 4.83984 16.7115L11.0002 20.2682ZM10.5001 1.71149C11.42=
83 1.1756 12.5719 1.1756 13.5001 1.71149L20.1604 5.55679C21.0886 6.09269 21=
.6604 7.08307 21.6604 8.15487V15.8455C21.6604 16.9173 21.0886 17.9076 20.16=
04 18.4435L13.5001 22.2888C12.5719 22.8247 11.4283 22.8247 10.5001 22.2888L=
3.83984 18.4435C2.91164 17.9076 2.33984 16.9173 2.33984 15.8455V8.15487C2.3=
3984 7.08307 2.91164 6.09269 3.83984 5.55679L10.5001 1.71149Z" fill=3D"curr=
entColor"></path></svg></div></div><div class=3D"grow overflow-hidden text-=
ellipsis whitespace-nowrap text-sm text-token-text-primary">Worksona - Supe=
r Visor Agent</div><div class=3D"flex gap-2"><span class=3D"flex items-cent=
er" data-state=3D"closed"><button class=3D"invisible text-token-text-second=
ary hover:text-token-text-primary group-hover:visible"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentColor" xmlns=3D"http://www=
.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M15.6729 3.91287C16.8918 2.6=
9392 18.8682 2.69392 20.0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.087=
1 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925 15.5255 11.3215 15.6785L9=
.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.29289 15.7071C8.07033 15.4=
845 7.96554 15.1701 8.01005 14.8586L8.32149 12.6785C8.47449 11.6075 8.97072=
 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 17.5=
25 4.88918 17.0871 5.32708L11.1499 11.2643C10.6909 11.7233 10.3932 12.3187 =
10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 13.=
3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.672=
9 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.002=
27 5.00084 8.29769 5.00827 7.74651 5.06064C7.20685 5.11191 6.88488 5.20117 =
6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6.90=
135 5.10062 7.24904 5.05118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C5 =
14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 5.3=
2698 17.3619C5.6146 17.9264 6.07354 18.3854 6.63803 18.673C6.90138 18.8072 =
7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C14.=
7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 17.=
362 18.673C17.9265 18.3854 18.3854 17.9264 18.673 17.3619C18.7988 17.1151 1=
8.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18.9991 14.9977 18.9999 13.9=
992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20.553 13.0004 21.0003 13.44=
85 20.9999 14.0007C20.9991 14.9789 20.9932 15.7808 20.9304 16.4426C20.8664 =
17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.2107 19.2108 19.9756 18.27=
 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 20.9421C15.6008 21 14.7266 =
21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.69138 20.9421C6.96253 20.8826=
 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 18.=
2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.3086C2.99998 15.6007 2.9999=
9 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.99998 8.39922 3.05782 7.69134=
C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4.02=
43 5.73005 3.54493C6.28633 3.26149 6.88399 3.13358 7.55735 3.06961C8.21919 =
3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11 3.=
99929Z" fill=3D"currentColor"></path></svg></button></span></div></a></div>=
<div tabindex=3D"0"><a class=3D"group flex h-10 items-center gap-2.5 rounde=
d-lg bg-token-sidebar-surface-primary font-normal px-2 hover:bg-token-sideb=
ar-surface-secondary" data-discover=3D"true" href=3D"https://chatgpt.com/g/=
g-Q3vIRgASR-worksona-transcription-services"><div class=3D"h-6 w-6 flex-shr=
ink-0"><div class=3D"gizmo-shadow-stroke overflow-hidden rounded-full"><img=
 class=3D"h-full w-full bg-token-main-surface-secondary" alt=3D"GPT" width=
=3D"80" height=3D"80" src=3D"https://chatgpt.com/backend-api/content?id=3Df=
ile-i8iKVm0DCmTPjkQwAeqgXPPa&amp;gizmo_id=3Dg-Q3vIRgASR&amp;ts=3D481070&amp=
;p=3Dgpp&amp;sig=3D5f042660a310b5ab6da7b5db06b4463cbeb5e182398fb5626f294584=
d366ad56&amp;v=3D0"></div></div><div class=3D"grow overflow-hidden text-ell=
ipsis whitespace-nowrap text-sm text-token-text-primary">Worksona - Transcr=
iption Services</div><div class=3D"flex gap-2"><span class=3D"flex items-ce=
nter" data-state=3D"closed"><button class=3D"invisible text-token-text-seco=
ndary hover:text-token-text-primary group-hover:visible"><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentColor" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M15.6729 3.91287C16.8918 2=
.69392 18.8682 2.69392 20.0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.0=
871 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925 15.5255 11.3215 15.6785=
L9.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.29289 15.7071C8.07033 15=
.4845 7.96554 15.1701 8.01005 14.8586L8.32149 12.6785C8.47449 11.6075 8.970=
72 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 17=
.525 4.88918 17.0871 5.32708L11.1499 11.2643C10.6909 11.7233 10.3932 12.318=
7 10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 1=
3.3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.6=
729 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.0=
0227 5.00084 8.29769 5.00827 7.74651 5.06064C7.20685 5.11191 6.88488 5.2011=
7 6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6.=
90135 5.10062 7.24904 5.05118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C=
5 14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 5=
.32698 17.3619C5.6146 17.9264 6.07354 18.3854 6.63803 18.673C6.90138 18.807=
2 7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C1=
4.7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 1=
7.362 18.673C17.9265 18.3854 18.3854 17.9264 18.673 17.3619C18.7988 17.1151=
 18.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18.9991 14.9977 18.9999 13=
.9992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20.553 13.0004 21.0003 13.=
4485 20.9999 14.0007C20.9991 14.9789 20.9932 15.7808 20.9304 16.4426C20.866=
4 17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.2107 19.2108 19.9756 18.=
27 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 20.9421C15.6008 21 14.726=
6 21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.69138 20.9421C6.96253 20.88=
26 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 1=
8.2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.3086C2.99998 15.6007 2.99=
999 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.99998 8.39922 3.05782 7.691=
34C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4.=
0243 5.73005 3.54493C6.28633 3.26149 6.88399 3.13358 7.55735 3.06961C8.2191=
9 3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11 =
3.99929Z" fill=3D"currentColor"></path></svg></button></span></div></a></di=
v><div tabindex=3D"0"><a class=3D"group flex h-10 items-center gap-2.5 roun=
ded-lg bg-token-sidebar-surface-primary font-normal px-2 hover:bg-token-sid=
ebar-surface-secondary" data-discover=3D"true" href=3D"https://chatgpt.com/=
g/g-XiH0263Bv-worksona-prompt-engineer"><div class=3D"h-6 w-6 flex-shrink-0=
"><div class=3D"relative flex h-full items-center justify-center text-token=
-text-primary gizmo-shadow-stroke rounded-full bg-token-main-surface-primar=
y"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"h-2/3 w-2/3 text-gray-400"><path =
fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12.5001 3.44354C12.1907 3=
.26491 11.8095 3.26491 11.5001 3.44354L5.24667 7.05396L12.0147 10.861L18.96=
99 7.17886L12.5001 3.44354ZM19.6604 9.07629L13.0002 12.6023V20.2681L19.1604=
 16.7115C19.4698 16.5329 19.6604 16.2027 19.6604 15.8455V9.07629ZM11.0002 2=
0.2682V12.585L4.33984 8.83857V15.8455C4.33984 16.2027 4.53044 16.5329 4.839=
84 16.7115L11.0002 20.2682ZM10.5001 1.71149C11.4283 1.1756 12.5719 1.1756 1=
3.5001 1.71149L20.1604 5.55679C21.0886 6.09269 21.6604 7.08307 21.6604 8.15=
487V15.8455C21.6604 16.9173 21.0886 17.9076 20.1604 18.4435L13.5001 22.2888=
C12.5719 22.8247 11.4283 22.8247 10.5001 22.2888L3.83984 18.4435C2.91164 17=
.9076 2.33984 16.9173 2.33984 15.8455V8.15487C2.33984 7.08307 2.91164 6.092=
69 3.83984 5.55679L10.5001 1.71149Z" fill=3D"currentColor"></path></svg></d=
iv></div><div class=3D"grow overflow-hidden text-ellipsis whitespace-nowrap=
 text-sm text-token-text-primary">Worksona - Prompt Engineer</div><div clas=
s=3D"flex gap-2"><span class=3D"flex items-center" data-state=3D"closed"><b=
utton class=3D"invisible text-token-text-secondary hover:text-token-text-pr=
imary group-hover:visible"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"currentColor" xmlns=3D"http://www.w3.org/2000/svg" class=3D"i=
con-md"><path d=3D"M15.6729 3.91287C16.8918 2.69392 18.8682 2.69392 20.0871=
 3.91287C21.3061 5.13182 21.3061 7.10813 20.0871 8.32708L14.1499 14.2643C13=
.3849 15.0293 12.3925 15.5255 11.3215 15.6785L9.14142 15.9899C8.82983 16.03=
44 8.51546 15.9297 8.29289 15.7071C8.07033 15.4845 7.96554 15.1701 8.01005 =
14.8586L8.32149 12.6785C8.47449 11.6075 8.97072 10.615 9.7357 9.85006L15.67=
29 3.91287ZM18.6729 5.32708C18.235 4.88918 17.525 4.88918 17.0871 5.32708L1=
1.1499 11.2643C10.6909 11.7233 10.3932 12.3187 10.3014 12.9613L10.1785 13.8=
215L11.0386 13.6986C11.6812 13.6068 12.2767 13.3091 12.7357 12.8501L18.6729=
 6.91287C19.1108 6.47497 19.1108 5.76499 18.6729 5.32708ZM11 3.99929C11.000=
4 4.55157 10.5531 4.99963 10.0008 5.00007C9.00227 5.00084 8.29769 5.00827 7=
.74651 5.06064C7.20685 5.11191 6.88488 5.20117 6.63803 5.32695C6.07354 5.61=
457 5.6146 6.07351 5.32698 6.63799C5.19279 6.90135 5.10062 7.24904 5.05118 =
7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 5.05=
118 16.1457C5.10062 16.7509 5.19279 17.0986 5.32698 17.3619C5.6146 17.9264 =
6.07354 18.3854 6.63803 18.673C6.90138 18.8072 7.24907 18.8993 7.85424 18.9=
488C8.47108 18.9992 9.26339 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 16.1=
458 18.9488C16.7509 18.8993 17.0986 18.8072 17.362 18.673C17.9265 18.3854 1=
8.3854 17.9264 18.673 17.3619C18.7988 17.1151 18.8881 16.7931 18.9393 16.25=
35C18.9917 15.7023 18.9991 14.9977 18.9999 13.9992C19.0003 13.4469 19.4484 =
12.9995 20.0007 13C20.553 13.0004 21.0003 13.4485 20.9999 14.0007C20.9991 1=
4.9789 20.9932 15.7808 20.9304 16.4426C20.8664 17.116 20.7385 17.7136 20.45=
5 18.2699C19.9757 19.2107 19.2108 19.9756 18.27 20.455C17.6777 20.7568 17.0=
375 20.8826 16.3086 20.9421C15.6008 21 14.7266 21 13.6428 21H10.3572C9.2733=
9 21 8.39925 21 7.69138 20.9421C6.96253 20.8826 6.32234 20.7568 5.73005 20.=
455C4.78924 19.9756 4.02433 19.2107 3.54497 18.2699C3.24318 17.6776 3.11737=
 17.0374 3.05782 16.3086C2.99998 15.6007 2.99999 14.7266 3 13.6428V10.3572C=
2.99999 9.27337 2.99998 8.39922 3.05782 7.69134C3.11737 6.96249 3.24318 6.3=
223 3.54497 5.73001C4.02433 4.7892 4.78924 4.0243 5.73005 3.54493C6.28633 3=
.26149 6.88399 3.13358 7.55735 3.06961C8.21919 3.00673 9.02103 3.00083 9.99=
922 3.00007C10.5515 2.99964 10.9996 3.447 11 3.99929Z" fill=3D"currentColor=
"></path></svg></button></span></div></a></div><div tabindex=3D"0"><a data-=
discover=3D"true" href=3D"https://chatgpt.com/gpts"><button data-testid=3D"=
explore-gpts-button" class=3D"flex h-10 w-full items-center gap-2.5 rounded=
-lg px-2 text-token-text-primary hover:bg-token-sidebar-surface-secondary">=
<div class=3D"flex h-6 w-6 items-center justify-center text-token-text-seco=
ndary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"e=
venodd" clip-rule=3D"evenodd" d=3D"M6.75 4.5C5.50736 4.5 4.5 5.50736 4.5 6.=
75C4.5 7.99264 5.50736 9 6.75 9C7.99264 9 9 7.99264 9 6.75C9 5.50736 7.9926=
4 4.5 6.75 4.5ZM2.5 6.75C2.5 4.40279 4.40279 2.5 6.75 2.5C9.09721 2.5 11 4.=
40279 11 6.75C11 9.09721 9.09721 11 6.75 11C4.40279 11 2.5 9.09721 2.5 6.75=
Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M17.25 4.5C16.0074 4.5 15 5.50736 15 6.75C15 7.99264 16.0074 9 =
17.25 9C18.4926 9 19.5 7.99264 19.5 6.75C19.5 5.50736 18.4926 4.5 17.25 4.5=
ZM13 6.75C13 4.40279 14.9028 2.5 17.25 2.5C19.5972 2.5 21.5 4.40279 21.5 6.=
75C21.5 9.09721 19.5972 11 17.25 11C14.9028 11 13 9.09721 13 6.75Z" fill=3D=
"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M6.75 15C5.50736 15 4.5 16.0074 4.5 17.25C4.5 18.4926 5.50736 19.5 6.75=
 19.5C7.99264 19.5 9 18.4926 9 17.25C9 16.0074 7.99264 15 6.75 15ZM2.5 17.2=
5C2.5 14.9028 4.40279 13 6.75 13C9.09721 13 11 14.9028 11 17.25C11 19.5972 =
9.09721 21.5 6.75 21.5C4.40279 21.5 2.5 19.5972 2.5 17.25Z" fill=3D"current=
Color"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M17.25=
 15C16.0074 15 15 16.0074 15 17.25C15 18.4926 16.0074 19.5 17.25 19.5C18.49=
26 19.5 19.5 18.4926 19.5 17.25C19.5 16.0074 18.4926 15 17.25 15ZM13 17.25C=
13 14.9028 14.9028 13 17.25 13C19.5972 13 21.5 14.9028 21.5 17.25C21.5 19.5=
972 19.5972 21.5 17.25 21.5C14.9028 21.5 13 19.5972 13 17.25Z" fill=3D"curr=
entColor"></path></svg></div><span class=3D"text-sm">Explore GPTs</span></b=
utton></a></div></div><div class=3D"flex flex-col gap-2 text-token-text-pri=
mary text-sm false mt-5 pb-2"><div><div class=3D"relative mt-5 first:mt-0 l=
ast:mb-5"><div class=3D"sticky bg-token-sidebar-surface-primary top-0 z-20"=
><span class=3D"flex h-9 items-center"><h3 class=3D"px-2 text-xs font-semib=
old text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-text-prima=
ry">Today</h3></span></div><ol><li class=3D"relative z-[15]" data-testid=3D=
"history-item-0"><div class=3D"no-draggable group relative rounded-lg activ=
e:opacity-90 bg-token-sidebar-surface-secondary"><a class=3D"flex items-cen=
ter gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6738ea8=
4-9a28-8012-b098-8f480130ec51"><div class=3D"relative grow overflow-hidden =
whitespace-nowrap" dir=3D"auto" title=3D"Cognitive Milestone Framework Deve=
lopment">Cognitive Milestone Framework Development<div class=3D"absolute bo=
ttom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl=
:bg-gradient-to-r from-token-sidebar-surface-secondary w-10 from-60%"></div=
></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 =
ltr:right-0 rtl:left-0 flex"><span class=3D"" data-state=3D"closed"><button=
 class=3D"flex items-center justify-center text-token-text-secondary transi=
tion hover:text-token-text-primary radix-state-open:text-token-text-seconda=
ry" data-testid=3D"history-item-0-options" type=3D"button" id=3D"radix-:r14=
9:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" c=
lip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8=
954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8=
954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 1=
4C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10=
 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z"=
 fill=3D"currentColor"></path></svg></button></span></div></div></li><li cl=
ass=3D"relative" data-testid=3D"history-item-1"><div class=3D"no-draggable =
group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-=
secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" =
href=3D"https://chatgpt.com/c/6739fd19-a3b4-8012-91a1-c3f262eac13f"><div cl=
ass=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=
=3D"Time Counter Simulation">Time Counter Simulation<div class=3D"absolute =
bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 r=
tl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-s=
urface-primary can-hover:group-hover:from-token-sidebar-surface-secondary w=
-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div=
></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 =
ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" =
data-state=3D"closed"><button class=3D"flex items-center justify-center tex=
t-token-text-secondary transition hover:text-token-text-primary radix-state=
-open:text-token-text-secondary" data-testid=3D"history-item-1-options" typ=
e=3D"button" id=3D"radix-:rrr:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.895=
43 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3=
 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 1=
2C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954=
 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C1=
7.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></li><li class=3D"relative" data-testid=3D"history-item-2"=
><div class=3D"no-draggable group relative rounded-lg active:opacity-90 hov=
er:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 =
p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6739f27c-c2b0-801=
2-809f-8ba38846f88e"><div class=3D"relative grow overflow-hidden whitespace=
-nowrap" dir=3D"auto" title=3D"Portco KPI Simulation Framework">Portco KPI =
Simulation Framework<div class=3D"absolute bottom-0 top-0 to-transparent lt=
r:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-s=
idebar-surface-primary from-token-sidebar-surface-primary can-hover:group-h=
over:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover=
:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absolut=
e bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden ca=
n-hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"flex items-center justify-center text-token-text-secondary transitio=
n hover:text-token-text-primary radix-state-open:text-token-text-secondary"=
 data-testid=3D"history-item-2-options" type=3D"button" id=3D"radix-:rnb:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-=
rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 =
7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 =
10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10=
.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 =
10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fil=
l=3D"currentColor"></path></svg></button></span></div></div></li></ol></div=
><div class=3D"relative mt-5 first:mt-0 last:mb-5"><div class=3D"sticky bg-=
token-sidebar-surface-primary top-0 z-20"><span class=3D"flex h-9 items-cen=
ter"><h3 class=3D"px-2 text-xs font-semibold text-ellipsis overflow-hidden =
break-all pt-3 pb-2 text-token-text-primary">Yesterday</h3></span></div><ol=
><li class=3D"relative" data-testid=3D"history-item-0"><div class=3D"no-dra=
ggable group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-s=
urface-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D=
"true" href=3D"https://chatgpt.com/c/6738cecd-9ed0-8012-b55b-97ecae335fc2">=
<div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto"=
 title=3D"Purnell Energy Services Report">Purnell Energy Services Report<di=
v class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradie=
nt-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary =
from-token-sidebar-surface-primary can-hover:group-hover:from-token-sidebar=
-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-h=
over:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-=
center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:fle=
x"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cente=
r justify-center text-token-text-secondary transition hover:text-token-text=
-primary radix-state-open:text-token-text-secondary" data-testid=3D"history=
-item-0-options" type=3D"button" id=3D"radix-:rnf:" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 =
14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.104=
6 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 =
12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.104=
6 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></pa=
th></svg></button></span></div></div></li><li class=3D"relative" data-testi=
d=3D"history-item-1"><div class=3D"no-draggable group relative rounded-lg a=
ctive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex=
 items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com=
/c/6738c7b4-9c50-8012-89d3-0bfb07f2b569"><div class=3D"relative grow overfl=
ow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Portfolio Table Format">=
Portfolio Table Format<div class=3D"absolute bottom-0 top-0 to-transparent =
ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token=
-sidebar-surface-primary from-token-sidebar-surface-primary can-hover:group=
-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hov=
er:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absol=
ute bottom-0 top-0 flex items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0"><=
div class=3D"h-2 w-2 rounded-full bg-blue-selection"></div></div></div></li=
><li class=3D"relative" data-testid=3D"history-item-2"><div class=3D"no-dra=
ggable group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-s=
urface-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D=
"true" href=3D"https://chatgpt.com/c/6738bf6e-728c-8012-bcf3-40a22a7d4be4">=
<div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto"=
 title=3D"Company Data Table">Company Data Table<div class=3D"absolute bott=
om-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:b=
g-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surfa=
ce-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 f=
rom-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></d=
iv></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:=
right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data=
-state=3D"closed"><button class=3D"flex items-center justify-center text-to=
ken-text-secondary transition hover:text-token-text-primary radix-state-ope=
n:text-token-text-secondary" data-testid=3D"history-item-2-options" type=3D=
"button" id=3D"radix-:rnh:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 1=
0 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.=
1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14=
 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.=
8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.89=
54 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span=
></div></div></li><li class=3D"relative" data-testid=3D"history-item-3"><di=
v class=3D"no-draggable group relative rounded-lg active:opacity-90 hover:b=
g-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2"=
 data-discover=3D"true" href=3D"https://chatgpt.com/c/6738b235-0328-8012-ae=
5d-541badae419c"><div class=3D"relative grow overflow-hidden whitespace-now=
rap" dir=3D"auto" title=3D"Coconut Software Table Creation">Coconut Softwar=
e Table Creation<div class=3D"absolute bottom-0 top-0 to-transparent ltr:ri=
ght-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideb=
ar-surface-primary from-token-sidebar-surface-primary can-hover:group-hover=
:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-1=
0 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absolute bo=
ttom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-ho=
ver:group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-secondary transition h=
over:text-token-text-primary radix-state-open:text-token-text-secondary" da=
ta-testid=3D"history-item-3-options" type=3D"button" id=3D"radix-:rnj:" ari=
a-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 1=
2C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.=
8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.89=
54 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.=
8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></li><li class=
=3D"relative" data-testid=3D"history-item-4"><div class=3D"no-draggable gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" hre=
f=3D"https://chatgpt.com/c/6738b985-2d44-8012-a5cd-f095a352603e"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
MIMs Company Overview">MIMs Company Overview<div class=3D"absolute bottom-0=
 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gr=
adient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-p=
rimary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-=
0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div><=
/a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:righ=
t-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"flex items-center justify-center text-token-=
text-secondary transition hover:text-token-text-primary radix-state-open:te=
xt-token-text-secondary" data-testid=3D"history-item-4-options" type=3D"but=
ton" id=3D"radix-:rnl:" aria-haspopup=3D"menu" aria-expanded=3D"false" data=
-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 =
10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046=
 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.=
1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954=
 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 1=
4 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></d=
iv></div></li><li class=3D"relative" data-testid=3D"history-item-5"><div cl=
ass=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-to=
ken-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" dat=
a-discover=3D"true" href=3D"https://chatgpt.com/c/6738ae58-9404-8012-ad5c-1=
24a38e51b67"><div class=3D"relative grow overflow-hidden whitespace-nowrap"=
 dir=3D"auto" title=3D"Acerta Analytics Summary">Acerta Analytics Summary<d=
iv class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradi=
ent-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary=
 from-token-sidebar-surface-primary can-hover:group-hover:from-token-sideba=
r-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-=
hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items=
-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:fl=
ex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cent=
er justify-center text-token-text-secondary transition hover:text-token-tex=
t-primary radix-state-open:text-token-text-secondary" data-testid=3D"histor=
y-item-5-options" type=3D"button" id=3D"radix-:rnn:" aria-haspopup=3D"menu"=
 aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457=
 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.10=
46 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10=
 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.10=
46 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></p=
ath></svg></button></span></div></div></li><li class=3D"relative" data-test=
id=3D"history-item-6"><div class=3D"no-draggable group relative rounded-lg =
active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"fle=
x items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.co=
m/c/6738ad85-abfc-8012-b616-ea863a287258"><div class=3D"relative grow overf=
low-hidden whitespace-nowrap" dir=3D"auto" title=3D"Markdown Content Extrac=
tion">Markdown Content Extraction<div class=3D"absolute bottom-0 top-0 to-t=
ransparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r=
 from-token-sidebar-surface-primary from-token-sidebar-surface-primary can-=
hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hove=
r:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div cla=
ss=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:lef=
t-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=3D"close=
d"><button class=3D"flex items-center justify-center text-token-text-second=
ary transition hover:text-token-text-primary radix-state-open:text-token-te=
xt-secondary" data-testid=3D"history-item-6-options" type=3D"button" id=3D"=
radix-:rnp:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"e=
venodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 =
10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 1=
2C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.104=
6 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C2=
0.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.104=
6 17 12Z" fill=3D"currentColor"></path></svg></button></span></div></div></=
li><li class=3D"relative" data-testid=3D"history-item-7"><div class=3D"no-d=
raggable group relative rounded-lg active:opacity-90 hover:bg-token-sidebar=
-surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=
=3D"true" href=3D"https://chatgpt.com/c/6738a44f-3a34-8012-b726-cb762e57cd4=
f"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"au=
to" title=3D"Populate empty cells">Populate empty cells<div class=3D"absolu=
te bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-=
0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideba=
r-surface-primary can-hover:group-hover:from-token-sidebar-surface-secondar=
y w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></=
div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr=
-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex items-center justify-center =
text-token-text-secondary transition hover:text-token-text-primary radix-st=
ate-open:text-token-text-secondary" data-testid=3D"history-item-7-options" =
type=3D"button" id=3D"radix-:rnr:" aria-haspopup=3D"menu" aria-expanded=3D"=
false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.=
89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 1=
4 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 1=
4 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8=
954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 1=
4C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button=
></span></div></div></li><li class=3D"relative" data-testid=3D"history-item=
-8"><div class=3D"no-draggable group relative rounded-lg active:opacity-90 =
hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap=
-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6733ca1f-b604-=
8012-bd58-37637f831e2a"><div class=3D"relative grow overflow-hidden whitesp=
ace-nowrap" dir=3D"auto" title=3D"StandupVC table building">StandupVC table=
 building<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 l=
tr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surf=
ace-primary from-token-sidebar-surface-primary can-hover:group-hover:from-t=
oken-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-h=
over:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:gro=
up-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 items-center justify-center text-token-text-secondary transition hover:tex=
t-token-text-primary radix-state-open:text-token-text-secondary" data-testi=
d=3D"history-item-8-options" type=3D"button" id=3D"radix-:rnt:" aria-haspop=
up=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"eve=
nodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1=
046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 =
12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10=
 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 =
12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></li></ol></div><div class=
=3D"relative mt-5 first:mt-0 last:mb-5"><div class=3D"sticky bg-token-sideb=
ar-surface-primary top-0 z-20"><span class=3D"flex h-9 items-center"><h3 cl=
ass=3D"px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all p=
t-3 pb-2 text-token-text-primary">Previous 7 Days</h3></span></div><ol><li =
class=3D"relative" data-testid=3D"history-item-0"><div class=3D"no-draggabl=
e group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surfac=
e-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true=
" href=3D"https://chatgpt.com/c/6737d82c-1f8c-8012-a129-00872d2ec434"><div =
class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" titl=
e=3D"Column Data Organization">Column Data Organization<div class=3D"absolu=
te bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-=
0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideba=
r-surface-primary can-hover:group-hover:from-token-sidebar-surface-secondar=
y w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></=
div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr=
-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex items-center justify-center =
text-token-text-secondary transition hover:text-token-text-primary radix-st=
ate-open:text-token-text-secondary" data-testid=3D"history-item-0-options" =
type=3D"button" id=3D"radix-:rnv:" aria-haspopup=3D"menu" aria-expanded=3D"=
false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.=
89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 1=
4 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 1=
4 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8=
954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 1=
4C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button=
></span></div></div></li><li class=3D"relative" data-testid=3D"history-item=
-1"><div class=3D"no-draggable group relative rounded-lg active:opacity-90 =
hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap=
-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6737d6de-96f4-=
8012-8480-e7da5dc16713"><div class=3D"relative grow overflow-hidden whitesp=
ace-nowrap" dir=3D"auto" title=3D"Company Info Structuring">Company Info St=
ructuring<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 l=
tr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surf=
ace-primary from-token-sidebar-surface-primary can-hover:group-hover:from-t=
oken-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-h=
over:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:gro=
up-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 items-center justify-center text-token-text-secondary transition hover:tex=
t-token-text-primary radix-state-open:text-token-text-secondary" data-testi=
d=3D"history-item-1-options" type=3D"button" id=3D"radix-:ro1:" aria-haspop=
up=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"eve=
nodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1=
046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 =
12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10=
 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 =
12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></li><li class=3D"relative=
" data-testid=3D"history-item-2"><div class=3D"no-draggable group relative =
rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a c=
lass=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https:/=
/chatgpt.com/c/6737cbf4-aa14-8012-b177-2c2d86f2e11c"><div class=3D"relative=
 grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Pipeline Con=
struction Summary">Pipeline Construction Summary<div class=3D"absolute bott=
om-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:b=
g-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surfa=
ce-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 f=
rom-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></d=
iv></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:=
right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data=
-state=3D"closed"><button class=3D"flex items-center justify-center text-to=
ken-text-secondary transition hover:text-token-text-primary radix-state-ope=
n:text-token-text-secondary" data-testid=3D"history-item-2-options" type=3D=
"button" id=3D"radix-:ro3:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 1=
0 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.=
1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14=
 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.=
8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.89=
54 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span=
></div></div></li><li class=3D"relative" data-testid=3D"history-item-3"><di=
v class=3D"no-draggable group relative rounded-lg active:opacity-90 hover:b=
g-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2"=
 data-discover=3D"true" href=3D"https://chatgpt.com/c/6737cb95-b6b4-8012-86=
9d-e1fa53435216"><div class=3D"relative grow overflow-hidden whitespace-now=
rap" dir=3D"auto" title=3D"Oil &amp; Gas Industry Analysis">Oil &amp; Gas I=
ndustry Analysis<div class=3D"absolute bottom-0 top-0 to-transparent ltr:ri=
ght-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideb=
ar-surface-primary from-token-sidebar-surface-primary can-hover:group-hover=
:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-1=
0 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absolute bo=
ttom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-ho=
ver:group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-secondary transition h=
over:text-token-text-primary radix-state-open:text-token-text-secondary" da=
ta-testid=3D"history-item-3-options" type=3D"button" id=3D"radix-:ro5:" ari=
a-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 1=
2C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.=
8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.89=
54 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.=
8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></li><li class=
=3D"relative" data-testid=3D"history-item-4"><div class=3D"no-draggable gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" hre=
f=3D"https://chatgpt.com/c/67379568-53f8-8012-a9e8-383cbbdd7a77"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
Analysis Task Completion">Analysis Task Completion<div class=3D"absolute bo=
ttom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl=
:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-sur=
face-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8=
 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div><=
/div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 lt=
r:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"flex items-center justify-center text-=
token-text-secondary transition hover:text-token-text-primary radix-state-o=
pen:text-token-text-secondary" data-testid=3D"history-item-4-options" type=
=3D"button" id=3D"radix-:ro7:" aria-haspopup=3D"menu" aria-expanded=3D"fals=
e" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.8954=
3 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 =
13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12=
C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 =
17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17=
.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></s=
pan></div></div></li><li class=3D"relative" data-testid=3D"history-item-5">=
<div class=3D"no-draggable group relative rounded-lg active:opacity-90 hove=
r:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p=
-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6737946f-eb28-8012=
-a563-4611a770b5d6"><div class=3D"relative grow overflow-hidden whitespace-=
nowrap" dir=3D"auto" title=3D"Agent Title Update">Agent Title Update<div cl=
ass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-t=
o-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from=
-token-sidebar-surface-primary can-hover:group-hover:from-token-sidebar-sur=
face-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover=
:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-cent=
er gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex items-center ju=
stify-center text-token-text-secondary transition hover:text-token-text-pri=
mary radix-state-open:text-token-text-secondary" data-testid=3D"history-ite=
m-5-options" type=3D"button" id=3D"radix-:ro9:" aria-haspopup=3D"menu" aria=
-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12=
C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5=
 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10=
 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM=
17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20=
.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path><=
/svg></button></span></div></div></li><li class=3D"relative" data-testid=3D=
"history-item-6"><div class=3D"no-draggable group relative rounded-lg activ=
e:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex ite=
ms-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6=
7378fa9-3f84-8012-a039-c79519e2572c"><div class=3D"relative grow overflow-h=
idden whitespace-nowrap" dir=3D"auto" title=3D"Types of Analysis">Types of =
Analysis<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 lt=
r:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfa=
ce-primary from-token-sidebar-surface-primary can-hover:group-hover:from-to=
ken-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-ho=
ver:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 t=
op-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:grou=
p-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
items-center justify-center text-token-text-secondary transition hover:text=
-token-text-primary radix-state-open:text-token-text-secondary" data-testid=
=3D"history-item-6-options" type=3D"button" id=3D"radix-:rob:" aria-haspopu=
p=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.10=
46 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 1=
2 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 =
13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 1=
2C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"current=
Color"></path></svg></button></span></div></div></li><li class=3D"relative"=
 data-testid=3D"history-item-7"><div class=3D"no-draggable group relative r=
ounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a cl=
ass=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://=
chatgpt.com/c/67379109-f41c-8012-8e17-6d5f78c8c9ad"><div class=3D"relative =
grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"What is a Lis=
ticle">What is a Listicle<div class=3D"absolute bottom-0 top-0 to-transpare=
nt ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-to=
ken-sidebar-surface-primary from-token-sidebar-surface-primary can-hover:gr=
oup-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-=
hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"ab=
solute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidd=
en can-hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex items-center justify-center text-token-text-secondary tran=
sition hover:text-token-text-primary radix-state-open:text-token-text-secon=
dary" data-testid=3D"history-item-7-options" type=3D"button" id=3D"radix-:r=
od:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.=
8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.=
8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 =
14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 1=
0 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z=
" fill=3D"currentColor"></path></svg></button></span></div></div></li><li c=
lass=3D"relative" data-testid=3D"history-item-8"><div class=3D"no-draggable=
 group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface=
-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true"=
 href=3D"https://chatgpt.com/c/67340150-9a1c-8012-af0d-1552fb646499"><div c=
lass=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=
=3D"AI Collaboration and Decision-Making">AI Collaboration and Decision-Mak=
ing<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-=
gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-pr=
imary from-token-sidebar-surface-primary can-hover:group-hover:from-token-s=
idebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:g=
roup-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 =
items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hov=
er:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items=
-center justify-center text-token-text-secondary transition hover:text-toke=
n-text-primary radix-state-open:text-token-text-secondary" data-testid=3D"h=
istory-item-8-options" type=3D"button" id=3D"radix-:rof:" aria-haspopup=3D"=
menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" heigh=
t=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.=
10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C=
13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.10=
46 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 =
13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor=
"></path></svg></button></span></div></div></li><li class=3D"relative" data=
-testid=3D"history-item-9"><div class=3D"no-draggable group relative rounde=
d-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=
=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://cha=
tgpt.com/c/6733fb5f-ee84-8012-be4d-d7cd9adfa3ad"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"SCRUB Framework =
for Transcripts">SCRUB Framework for Transcripts<div class=3D"absolute bott=
om-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:b=
g-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surfa=
ce-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 f=
rom-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></d=
iv></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:=
right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data=
-state=3D"closed"><button class=3D"flex items-center justify-center text-to=
ken-text-secondary transition hover:text-token-text-primary radix-state-ope=
n:text-token-text-secondary" data-testid=3D"history-item-9-options" type=3D=
"button" id=3D"radix-:roh:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 1=
0 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.=
1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14=
 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.=
8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.89=
54 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span=
></div></div></li><li class=3D"relative" data-testid=3D"history-item-10"><d=
iv class=3D"no-draggable group relative rounded-lg active:opacity-90 hover:=
bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2=
" data-discover=3D"true" href=3D"https://chatgpt.com/c/6733ff33-9f70-8012-b=
c9e-1af54f80c9d8"><div class=3D"relative grow overflow-hidden whitespace-no=
wrap" dir=3D"auto" title=3D"AI Consulting Collaboration">AI Consulting Coll=
aboration<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 l=
tr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surf=
ace-primary from-token-sidebar-surface-primary can-hover:group-hover:from-t=
oken-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-h=
over:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:gro=
up-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 items-center justify-center text-token-text-secondary transition hover:tex=
t-token-text-primary radix-state-open:text-token-text-secondary" data-testi=
d=3D"history-item-10-options" type=3D"button" id=3D"radix-:roj:" aria-haspo=
pup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.=
1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10=
 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 1=
0 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21=
 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"curre=
ntColor"></path></svg></button></span></div></div></li><li class=3D"relativ=
e" data-testid=3D"history-item-11"><div class=3D"no-draggable group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 class=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https=
://chatgpt.com/c/6733fe03-a1f0-8012-b861-cff496ce4a62"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"AI Decisio=
n-Making Collaboration">AI Decision-Making Collaboration<div class=3D"absol=
ute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left=
-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideb=
ar-surface-primary can-hover:group-hover:from-token-sidebar-surface-seconda=
ry w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"><=
/div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 p=
r-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-cent=
er text-token-text-secondary transition hover:text-token-text-primary radix=
-state-open:text-token-text-secondary" data-testid=3D"history-item-11-optio=
ns" type=3D"button" id=3D"radix-:rol:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D=
"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"ico=
n-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.895=
4 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.895=
43 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.89=
54 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 =
10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 =
19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></bu=
tton></span></div></div></li><li class=3D"relative" data-testid=3D"history-=
item-12"><div class=3D"no-draggable group relative rounded-lg active:opacit=
y-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-cente=
r gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6733f3d4-=
a5b8-8012-aa14-013bab7f6474"><div class=3D"relative grow overflow-hidden wh=
itespace-nowrap" dir=3D"auto" title=3D"AI Consulting Collaboration Summary"=
>AI Consulting Collaboration Summary<div class=3D"absolute bottom-0 top-0 t=
o-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-t=
o-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary c=
an-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-h=
over:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div =
class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:=
left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"flex items-center justify-center text-token-text-sec=
ondary transition hover:text-token-text-primary radix-state-open:text-token=
-text-secondary" data-testid=3D"history-item-12-options" type=3D"button" id=
=3D"radix-:ron:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.1=
0457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12Z=
M10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 1=
3.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19=
 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 1=
3.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></li><li class=3D"relative" data-testid=3D"history-item-13"><div class=
=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-token=
-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-d=
iscover=3D"true" href=3D"https://chatgpt.com/c/6733b3ad-369c-8012-b141-96f3=
0671071a"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto" title=3D"Carol Wilder Summary">Carol Wilder Summary<div class=3D=
"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rt=
l:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token=
-sidebar-surface-primary can-hover:group-hover:from-token-sidebar-surface-s=
econdary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-=
60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap=
-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-=
center text-token-text-secondary transition hover:text-token-text-primary r=
adix-state-open:text-token-text-secondary" data-testid=3D"history-item-13-o=
ptions" type=3D"button" id=3D"radix-:rop:" aria-haspopup=3D"menu" aria-expa=
nded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10=
.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3=
.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 1=
0.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12=
C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046=
 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg>=
</button></span></div></div></li><li class=3D"relative" data-testid=3D"hist=
ory-item-14"><div class=3D"no-draggable group relative rounded-lg active:op=
acity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-c=
enter gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6733a=
eaf-1c00-8012-b518-23c5077f1e39"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto" title=3D"Persona Development Summary">Per=
sona Development Summary<div class=3D"absolute bottom-0 top-0 to-transparen=
t ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-tok=
en-sidebar-surface-primary from-token-sidebar-surface-primary can-hover:gro=
up-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-h=
over:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"abs=
olute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidde=
n can-hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"flex items-center justify-center text-token-text-secondary trans=
ition hover:text-token-text-primary radix-state-open:text-token-text-second=
ary" data-testid=3D"history-item-14-options" type=3D"button" id=3D"radix-:r=
or:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.=
8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.=
8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 =
14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 1=
0 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z=
" fill=3D"currentColor"></path></svg></button></span></div></div></li><li c=
lass=3D"relative" data-testid=3D"history-item-15"><div class=3D"no-draggabl=
e group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surfac=
e-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true=
" href=3D"https://chatgpt.com/c/6733ae38-eaac-8012-a81c-da87e3b589dc"><div =
class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" titl=
e=3D"Persona Creation Summary">Persona Creation Summary<div class=3D"absolu=
te bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-=
0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideba=
r-surface-primary can-hover:group-hover:from-token-sidebar-surface-secondar=
y w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></=
div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr=
-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex items-center justify-center =
text-token-text-secondary transition hover:text-token-text-primary radix-st=
ate-open:text-token-text-secondary" data-testid=3D"history-item-15-options"=
 type=3D"button" id=3D"radix-:rot:" aria-haspopup=3D"menu" aria-expanded=3D=
"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3=
.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 =
14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 =
14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.=
8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 =
14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" data-testid=3D"history-ite=
m-16"><div class=3D"no-draggable group relative rounded-lg active:opacity-9=
0 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center g=
ap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/6733ade0-ada=
0-8012-a5fd-1c55f5b3874e"><div class=3D"relative grow overflow-hidden white=
space-nowrap" dir=3D"auto" title=3D"Karen Olsson Persona">Karen Olsson Pers=
ona<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-=
gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-pr=
imary from-token-sidebar-surface-primary can-hover:group-hover:from-token-s=
idebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:g=
roup-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 =
items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hov=
er:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items=
-center justify-center text-token-text-secondary transition hover:text-toke=
n-text-primary radix-state-open:text-token-text-secondary" data-testid=3D"h=
istory-item-16-options" type=3D"button" id=3D"radix-:rov:" aria-haspopup=3D=
"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6=
.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10=
C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1=
046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21=
 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColo=
r"></path></svg></button></span></div></div></li><li class=3D"relative" dat=
a-testid=3D"history-item-17"><div class=3D"no-draggable group relative roun=
ded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=
=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://cha=
tgpt.com/c/6733ad55-a430-8012-8819-6abc9b4ada1d"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Persona Creation=
 Summary">Persona Creation Summary<div class=3D"absolute bottom-0 top-0 to-=
transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-=
r from-token-sidebar-surface-primary from-token-sidebar-surface-primary can=
-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hov=
er:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div cl=
ass=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:le=
ft-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex items-center justify-center text-token-text-secon=
dary transition hover:text-token-text-primary radix-state-open:text-token-t=
ext-secondary" data-testid=3D"history-item-17-options" type=3D"button" id=
=3D"radix-:rp2:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.1=
0457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12Z=
M10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 1=
3.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19=
 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 1=
3.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></li><li class=3D"relative" data-testid=3D"history-item-18"><div class=
=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-token=
-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-d=
iscover=3D"true" href=3D"https://chatgpt.com/c/6733abdc-9874-8012-8cb4-a473=
7586b5fa"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto" title=3D"David Olsson Profile">David Olsson Profile<div class=3D=
"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rt=
l:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token=
-sidebar-surface-primary can-hover:group-hover:from-token-sidebar-surface-s=
econdary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-=
60%"></div></div></a><div class=3D"absolute bottom-0 top-0 flex items-cente=
r gap-1.5 pr-2 ltr:right-0 rtl:left-0"><div class=3D"h-2 w-2 rounded-full b=
g-blue-selection"></div></div></div></li><li class=3D"relative" data-testid=
=3D"history-item-19"><div class=3D"no-draggable group relative rounded-lg a=
ctive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex=
 items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com=
/g/g-RLYu8wG8w-worksona-interviewer/c/67339277-4444-8012-bb19-e4446b3e808e"=
><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto=
" title=3D"Worksona Officiate - Founder Agency">Worksona Officiate - Founde=
r Agency<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 lt=
r:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfa=
ce-primary from-token-sidebar-surface-primary can-hover:group-hover:from-to=
ken-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-ho=
ver:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 t=
op-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:grou=
p-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
items-center justify-center text-token-text-secondary transition hover:text=
-token-text-primary radix-state-open:text-token-text-secondary" data-testid=
=3D"history-item-19-options" type=3D"button" id=3D"radix-:rp5:" aria-haspop=
up=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"eve=
nodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1=
046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 =
12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10=
 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 =
12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></li><li class=3D"relative=
" data-testid=3D"history-item-20"><div class=3D"no-draggable group relative=
 rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a =
class=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https:=
//chatgpt.com/c/673366e2-665c-8012-8664-46c5bc584296"><div class=3D"relativ=
e grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"AimQC Tech =
Strategy">AimQC Tech Strategy<div class=3D"absolute bottom-0 top-0 to-trans=
parent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r fro=
m-token-sidebar-surface-primary from-token-sidebar-surface-primary can-hove=
r:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover:gr=
oup-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=
=3D"absolute bottom-0 top-0 flex items-center gap-1.5 pr-2 ltr:right-0 rtl:=
left-0"><div class=3D"h-2 w-2 rounded-full bg-blue-selection"></div></div><=
/div></li><li class=3D"relative" data-testid=3D"history-item-21"><div class=
=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-token=
-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-d=
iscover=3D"true" href=3D"https://chatgpt.com/c/67336143-a730-8012-8bdf-49d9=
b1284820"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto" title=3D"Worksona Product Overview">Worksona Product Overview<di=
v class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradie=
nt-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary =
from-token-sidebar-surface-primary can-hover:group-hover:from-token-sidebar=
-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-h=
over:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-=
center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:fle=
x"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cente=
r justify-center text-token-text-secondary transition hover:text-token-text=
-primary radix-state-open:text-token-text-secondary" data-testid=3D"history=
-item-21-options" type=3D"button" id=3D"radix-:rp8:" aria-haspopup=3D"menu"=
 aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457=
 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.10=
46 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10=
 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.10=
46 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></p=
ath></svg></button></span></div></div></li><li class=3D"relative" data-test=
id=3D"history-item-22"><div class=3D"no-draggable group relative rounded-lg=
 active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"fl=
ex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.c=
om/c/67335b55-2d20-8012-9ff7-7a6eeb729589"><div class=3D"relative grow over=
flow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Strategy Framework Ove=
rview">Strategy Framework Overview<div class=3D"absolute bottom-0 top-0 to-=
transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-=
r from-token-sidebar-surface-primary from-token-sidebar-surface-primary can=
-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hov=
er:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div cl=
ass=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:le=
ft-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex items-center justify-center text-token-text-secon=
dary transition hover:text-token-text-primary radix-state-open:text-token-t=
ext-secondary" data-testid=3D"history-item-22-options" type=3D"button" id=
=3D"radix-:rpb:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.1=
0457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12Z=
M10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 1=
3.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19=
 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 1=
3.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></li><li class=3D"relative" data-testid=3D"history-item-23"><div class=
=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-token=
-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-d=
iscover=3D"true" href=3D"https://chatgpt.com/c/67335b4c-9de0-8012-b780-9b6f=
e8dd4cb2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto" title=3D"Strategy Framework Creation">Strategy Framework Creatio=
n<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gr=
adient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-prim=
ary from-token-sidebar-surface-primary can-hover:group-hover:from-token-sid=
ebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:gro=
up-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 fl=
ex items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0"><div class=3D"h-2 w-2 =
rounded-full bg-blue-selection"></div></div></div></li><li class=3D"relativ=
e" data-testid=3D"history-item-24"><div class=3D"no-draggable group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 class=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https=
://chatgpt.com/c/6731332f-c0dc-8012-9dab-342390eac8fa"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Drag and D=
rop File Share">Drag and Drop File Share<div class=3D"absolute bottom-0 top=
-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradie=
nt-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-prima=
ry can-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% c=
an-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><=
div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 =
rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-secondary transition hover:text-token-text-primary radix-state-open:text=
-token-text-secondary" data-testid=3D"history-item-24-options" type=3D"butt=
on" id=3D"radix-:rpe:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-=
state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 1=
0C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 =
3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1=
046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 =
10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14=
 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></di=
v></div></li><li class=3D"relative" data-testid=3D"history-item-25"><div cl=
ass=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-to=
ken-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" dat=
a-discover=3D"true" href=3D"https://chatgpt.com/c/673233e6-8928-8012-8e56-c=
cffc75bf0f9"><div class=3D"relative grow overflow-hidden whitespace-nowrap"=
 dir=3D"auto" title=3D"Habit Loops Discussion">Habit Loops Discussion<div c=
lass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-=
to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary fro=
m-token-sidebar-surface-primary can-hover:group-hover:from-token-sidebar-su=
rface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hove=
r:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-cen=
ter gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex items-center j=
ustify-center text-token-text-secondary transition hover:text-token-text-pr=
imary radix-state-open:text-token-text-secondary" data-testid=3D"history-it=
em-25-options" type=3D"button" id=3D"radix-:rph:" aria-haspopup=3D"menu" ar=
ia-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 =
12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14=
 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 =
10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12=
ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 =
20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path=
></svg></button></span></div></div></li><li class=3D"relative" data-testid=
=3D"history-item-26"><div class=3D"no-draggable group relative rounded-lg a=
ctive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex=
 items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com=
/c/673217b2-a810-8012-b3b4-59b06c4a31c3"><div class=3D"relative grow overfl=
ow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Understanding Habit Loop=
s">Understanding Habit Loops<div class=3D"absolute bottom-0 top-0 to-transp=
arent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from=
-token-sidebar-surface-primary from-token-sidebar-surface-primary can-hover=
:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover:gro=
up-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D=
"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 h=
idden can-hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex items-center justify-center text-token-text-secondary t=
ransition hover:text-token-text-primary radix-state-open:text-token-text-se=
condary" data-testid=3D"history-item-26-options" type=3D"button" id=3D"radi=
x-:rpk:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"close=
d"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7=
 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10=
 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14=
 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.10=
46 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17=
 12Z" fill=3D"currentColor"></path></svg></button></span></div></div></li><=
li class=3D"relative" data-testid=3D"history-item-27"><div class=3D"no-drag=
gable group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-su=
rface-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"=
true" href=3D"https://chatgpt.com/c/67311d61-ae40-8012-9569-2513e3cf2ef5"><=
div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" =
title=3D"Transcribed - Habit Strategy and Reporting">Transcribed - Habit St=
rategy and Reporting<div class=3D"absolute bottom-0 top-0 to-transparent lt=
r:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-s=
idebar-surface-primary from-token-sidebar-surface-primary can-hover:group-h=
over:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover=
:w-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absolut=
e bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden ca=
n-hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"flex items-center justify-center text-token-text-secondary transitio=
n hover:text-token-text-primary radix-state-open:text-token-text-secondary"=
 data-testid=3D"history-item-27-options" type=3D"button" id=3D"radix-:rpn:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954=
 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954=
 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C1=
0.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21=
 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fi=
ll=3D"currentColor"></path></svg></button></span></div></div></li><li class=
=3D"relative" data-testid=3D"history-item-28"><div class=3D"no-draggable gr=
oup relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-se=
condary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" hr=
ef=3D"https://chatgpt.com/c/6730d4c0-8134-8012-aef6-7fbbafe50944"><div clas=
s=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D=
"Worksona Habits Overview">Worksona Habits Overview<div class=3D"absolute b=
ottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rt=
l:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-su=
rface-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-=
8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div>=
</div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 l=
tr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"flex items-center justify-center text=
-token-text-secondary transition hover:text-token-text-primary radix-state-=
open:text-token-text-secondary" data-testid=3D"history-item-28-options" typ=
e=3D"button" id=3D"radix-:rpq:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.895=
43 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3=
 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 1=
2C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954=
 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C1=
7.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></li><li class=3D"relative" data-testid=3D"history-item-29=
"><div class=3D"no-draggable group relative rounded-lg active:opacity-90 ho=
ver:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2=
 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/g/g-RLYu8wG8w-work=
sona-interviewer/c/672e341e-68d8-8012-b424-be2531ce5899"><div class=3D"rela=
tive grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Conversa=
tion Introduction Summary">Conversation Introduction Summary<div class=3D"a=
bsolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:=
left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-s=
idebar-surface-primary can-hover:group-hover:from-token-sidebar-surface-sec=
ondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60=
%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1=
.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-ce=
nter text-token-text-secondary transition hover:text-token-text-primary rad=
ix-state-open:text-token-text-secondary" data-testid=3D"history-item-29-opt=
ions" type=3D"button" id=3D"radix-:rpt:" aria-haspopup=3D"menu" aria-expand=
ed=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.=
8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.=
89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10=
.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C=
17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 =
14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></li></ol></div><div class=3D"relative mt-5 firs=
t:mt-0 last:mb-5"><div class=3D"sticky bg-token-sidebar-surface-primary top=
-0 z-20"><span class=3D"flex h-9 items-center"><h3 class=3D"px-2 text-xs fo=
nt-semibold text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-te=
xt-primary">Previous 30 Days</h3></span></div><ol><li class=3D"relative" da=
ta-testid=3D"history-item-0"><div class=3D"no-draggable group relative roun=
ded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=
=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://cha=
tgpt.com/c/672ee57f-2134-8012-9cf0-85ddaeffc0b3"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Major System Mne=
monics Explained">Major System Mnemonics Explained<div class=3D"absolute bo=
ttom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl=
:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-sur=
face-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8=
 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div><=
/div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 lt=
r:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"flex items-center justify-center text-=
token-text-secondary transition hover:text-token-text-primary radix-state-o=
pen:text-token-text-secondary" data-testid=3D"history-item-0-options" type=
=3D"button" id=3D"radix-:rq0:" aria-haspopup=3D"menu" aria-expanded=3D"fals=
e" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.8954=
3 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 =
13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12=
C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 =
17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17=
.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></s=
pan></div></div></li><li class=3D"relative" data-testid=3D"history-item-1">=
<div class=3D"no-draggable group relative rounded-lg active:opacity-90 hove=
r:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p=
-2" data-discover=3D"true" href=3D"https://chatgpt.com/g/g-RLYu8wG8w-workso=
na-interviewer/c/672e33d5-6bc8-8012-8105-a1c1f4d656ed"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Landing Pa=
ge Discussion Guide">Landing Page Discussion Guide<div class=3D"absolute bo=
ttom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl=
:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-sur=
face-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8=
 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div><=
/div></a><div class=3D"absolute bottom-0 top-0 flex items-center gap-1.5 pr=
-2 ltr:right-0 rtl:left-0"><div class=3D"h-2 w-2 rounded-full bg-blue-selec=
tion"></div></div></div></li><li class=3D"relative" data-testid=3D"history-=
item-2"><div class=3D"no-draggable group relative rounded-lg active:opacity=
-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center=
 gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/g/g-RLYu8wG8=
w-worksona-interviewer/c/672e3374-e158-8012-b681-437c0003668d"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
Landing Page Discussion Guide">Landing Page Discussion Guide<div class=3D"a=
bsolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:=
left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-s=
idebar-surface-primary can-hover:group-hover:from-token-sidebar-surface-sec=
ondary w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60=
%"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1=
.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-ce=
nter text-token-text-secondary transition hover:text-token-text-primary rad=
ix-state-open:text-token-text-secondary" data-testid=3D"history-item-2-opti=
ons" type=3D"button" id=3D"radix-:rq3:" aria-haspopup=3D"menu" aria-expande=
d=3D"false" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.=
8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.=
89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10=
.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C=
17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 =
14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></li><li class=3D"relative" data-testid=3D"histo=
ry-item-3"><div class=3D"no-draggable group relative rounded-lg active:opac=
ity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-cen=
ter gap-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/672e29d=
4-5c50-8012-9f13-79da37314051"><div class=3D"relative grow overflow-hidden =
whitespace-nowrap" dir=3D"auto" title=3D"Effective Problem Statement Techni=
ques">Effective Problem Statement Techniques<div class=3D"absolute bottom-0=
 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gr=
adient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-p=
rimary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-=
0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div><=
/a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:righ=
t-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"flex items-center justify-center text-token-=
text-secondary transition hover:text-token-text-primary radix-state-open:te=
xt-token-text-secondary" data-testid=3D"history-item-3-options" type=3D"but=
ton" id=3D"radix-:rq6:" aria-haspopup=3D"menu" aria-expanded=3D"false" data=
-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 =
10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046=
 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.=
1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954=
 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 1=
4 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></d=
iv></div></li><li class=3D"relative" data-testid=3D"history-item-4"><div cl=
ass=3D"no-draggable group relative rounded-lg active:opacity-90 hover:bg-to=
ken-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2" dat=
a-discover=3D"true" href=3D"https://chatgpt.com/c/672e2348-557c-8012-8ca3-a=
a576e15f728"><div class=3D"relative grow overflow-hidden whitespace-nowrap"=
 dir=3D"auto" title=3D"Hero Section Best Practices">Hero Section Best Pract=
ices<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg=
-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-p=
rimary from-token-sidebar-surface-primary can-hover:group-hover:from-token-=
sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:=
group-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0=
 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-ho=
ver:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex item=
s-center justify-center text-token-text-secondary transition hover:text-tok=
en-text-primary radix-state-open:text-token-text-secondary" data-testid=3D"=
history-item-4-options" type=3D"button" id=3D"radix-:rq9:" aria-haspopup=3D=
"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6=
.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10=
C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1=
046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21=
 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColo=
r"></path></svg></button></span></div></div></li><li class=3D"relative" dat=
a-testid=3D"history-item-5"><div class=3D"no-draggable group relative round=
ed-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=
=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://cha=
tgpt.com/c/672cf282-402c-8012-a339-cc26b013df71"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Meta-Agent for W=
eb Copy">Meta-Agent for Web Copy<div class=3D"absolute bottom-0 top-0 to-tr=
ansparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r =
from-token-sidebar-surface-primary from-token-sidebar-surface-primary can-h=
over:group-hover:from-token-sidebar-surface-secondary w-8 from-0% can-hover=
:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a><div clas=
s=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left=
-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center justify-center text-token-text-seconda=
ry transition hover:text-token-text-primary radix-state-open:text-token-tex=
t-secondary" data-testid=3D"history-item-5-options" type=3D"button" id=3D"r=
adix-:rqc:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"cl=
osed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"ev=
enodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 1=
0 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12=
C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046=
 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20=
.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046=
 17 12Z" fill=3D"currentColor"></path></svg></button></span></div></div></l=
i><li class=3D"relative" data-testid=3D"history-item-6"><div class=3D"no-dr=
aggable group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-=
surface-secondary"><a class=3D"flex items-center gap-2 p-2" data-discover=
=3D"true" href=3D"https://chatgpt.com/c/672cff02-20cc-8012-ba50-9c9cf8f71fb=
a"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"au=
to" title=3D"Purnell Energy Services Report">Purnell Energy Services Report=
<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gra=
dient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-prima=
ry from-token-sidebar-surface-primary can-hover:group-hover:from-token-side=
bar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 can-hover:grou=
p-hover:from-60%"></div></div></a><div class=3D"absolute bottom-0 top-0 ite=
ms-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:=
flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-ce=
nter justify-center text-token-text-secondary transition hover:text-token-t=
ext-primary radix-state-open:text-token-text-secondary" data-testid=3D"hist=
ory-item-6-options" type=3D"button" id=3D"radix-:rqf:" aria-haspopup=3D"men=
u" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.1=
0457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C1=
3.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.104=
6 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 1=
3.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"=
></path></svg></button></span></div></div></li><li class=3D"relative" data-=
testid=3D"history-item-7"><div class=3D"no-draggable group relative rounded=
-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a class=3D=
"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"https://chatgp=
t.com/c/672cfd10-bad0-8012-99a1-242afccad253"><div class=3D"relative grow o=
verflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Purnell Energy Serv=
ices Report">Purnell Energy Services Report<div class=3D"absolute bottom-0 =
top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gra=
dient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-pr=
imary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0=
% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></=
a><div class=3D"absolute bottom-0 top-0 flex items-center gap-1.5 pr-2 ltr:=
right-0 rtl:left-0"><div class=3D"h-2 w-2 rounded-full bg-blue-selection"><=
/div></div></div></li><li class=3D"relative" data-testid=3D"history-item-8"=
><div class=3D"no-draggable group relative rounded-lg active:opacity-90 hov=
er:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 =
p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/672cc335-7118-801=
2-bbf2-86c0ce692512"><div class=3D"relative grow overflow-hidden whitespace=
-nowrap" dir=3D"auto" title=3D"Enhancing Direction and Design">Enhancing Di=
rection and Design<div class=3D"absolute bottom-0 top-0 to-transparent ltr:=
right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sid=
ebar-surface-primary from-token-sidebar-surface-primary can-hover:group-hov=
er:from-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w=
-10 can-hover:group-hover:from-60%"></div></div></a><div class=3D"absolute =
bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-=
hover:group-hover:flex"><span class=3D"" data-state=3D"closed"><button clas=
s=3D"flex items-center justify-center text-token-text-secondary transition =
hover:text-token-text-primary radix-state-open:text-token-text-secondary" d=
ata-testid=3D"history-item-8-options" type=3D"button" id=3D"radix-:rqi:" ar=
ia-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 =
12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10=
.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8=
954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10=
.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></li><li class=
=3D"relative" data-testid=3D"history-item-9"><div class=3D"no-draggable gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" hre=
f=3D"https://chatgpt.com/c/672cc08c-f058-8012-8efb-9f9b31c68f2a"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
DTC Landing Page Framework">DTC Landing Page Framework<div class=3D"absolut=
e bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0=
 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar=
-surface-primary can-hover:group-hover:from-token-sidebar-surface-secondary=
 w-8 from-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></d=
iv></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-=
2 ltr:right-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"=
" data-state=3D"closed"><button class=3D"flex items-center justify-center t=
ext-token-text-secondary transition hover:text-token-text-primary radix-sta=
te-open:text-token-text-secondary" data-testid=3D"history-item-9-options" t=
ype=3D"button" id=3D"radix-:rql:" aria-haspopup=3D"menu" aria-expanded=3D"f=
alse" data-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 =
24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.8=
9543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14=
 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14=
 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.89=
54 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14=
C17.8954 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button>=
</span></div></div></li><li class=3D"relative" data-testid=3D"history-item-=
10"><div class=3D"no-draggable group relative rounded-lg active:opacity-90 =
hover:bg-token-sidebar-surface-secondary"><a class=3D"flex items-center gap=
-2 p-2" data-discover=3D"true" href=3D"https://chatgpt.com/c/672cc051-8434-=
8012-af40-801365fb174e"><div class=3D"relative grow overflow-hidden whitesp=
ace-nowrap" dir=3D"auto" title=3D"DTC Landing Page Framework">DTC Landing P=
age Framework<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right=
-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-=
surface-primary from-token-sidebar-surface-primary can-hover:group-hover:fr=
om-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 c=
an-hover:group-hover:from-60%"></div></div></a><div class=3D"absolute botto=
m-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover=
:group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex items-center justify-center text-token-text-secondary transition hover=
:text-token-text-primary radix-state-open:text-token-text-secondary" data-t=
estid=3D"history-item-10-options" type=3D"button" id=3D"radix-:rqo:" aria-h=
aspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12=
C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8=
954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.895=
4 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8=
954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D=
"currentColor"></path></svg></button></span></div></div></li><li class=3D"r=
elative" data-testid=3D"history-item-11"><div class=3D"no-draggable group r=
elative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-seconda=
ry"><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D=
"https://chatgpt.com/c/672cbe63-a5f0-8012-95ae-cfb5510fd29a"><div class=3D"=
relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"DTC =
Landing Page Updates">DTC Landing Page Updates<div class=3D"absolute bottom=
-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-=
gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface=
-primary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 fro=
m-0% can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div=
></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:ri=
ght-0 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex items-center justify-center text-toke=
n-text-secondary transition hover:text-token-text-primary radix-state-open:=
text-token-text-secondary" data-testid=3D"history-item-11-options" type=3D"=
button" id=3D"radix-:rqr:" aria-haspopup=3D"menu" aria-expanded=3D"false" d=
ata-state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path =
fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10=
 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1=
046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 =
13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8=
954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.895=
4 14 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span>=
</div></div></li><li class=3D"relative" data-testid=3D"history-item-12"><di=
v class=3D"no-draggable group relative rounded-lg active:opacity-90 hover:b=
g-token-sidebar-surface-secondary"><a class=3D"flex items-center gap-2 p-2"=
 data-discover=3D"true" href=3D"https://chatgpt.com/c/672be66b-ca74-8012-b5=
00-f6515f6ee91a"><div class=3D"relative grow overflow-hidden whitespace-now=
rap" dir=3D"auto" title=3D"Vivid Machines Company Report">Vivid Machines Co=
mpany Report<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-=
0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-s=
urface-primary from-token-sidebar-surface-primary can-hover:group-hover:fro=
m-token-sidebar-surface-secondary w-8 from-0% can-hover:group-hover:w-10 ca=
n-hover:group-hover:from-60%"></div></div></a><div class=3D"absolute bottom=
-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden can-hover:=
group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"f=
lex items-center justify-center text-token-text-secondary transition hover:=
text-token-text-primary radix-state-open:text-token-text-secondary" data-te=
stid=3D"history-item-12-options" type=3D"button" id=3D"radix-:rqu:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 =
13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954=
 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 1=
4 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954=
 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D"cu=
rrentColor"></path></svg></button></span></div></div></li><li class=3D"rela=
tive" data-testid=3D"history-item-13"><div class=3D"no-draggable group rela=
tive rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"=
><a class=3D"flex items-center gap-2 p-2" data-discover=3D"true" href=3D"ht=
tps://chatgpt.com/c/672be5d0-98b0-8012-850c-dfd895916b09"><div class=3D"rel=
ative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"TealBoo=
k Company Report">TealBook Company Report<div class=3D"absolute bottom-0 to=
p-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradi=
ent-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-prim=
ary can-hover:group-hover:from-token-sidebar-surface-secondary w-8 from-0% =
can-hover:group-hover:w-10 can-hover:group-hover:from-60%"></div></div></a>=
<div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0=
 rtl:left-0 hidden can-hover:group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-secondary transition hover:text-token-text-primary radix-state-open:text=
-token-text-secondary" data-testid=3D"history-item-13-options" type=3D"butt=
on" id=3D"radix-:rr1:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-=
state=3D"closed"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 1=
0C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 =
3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1=
046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 =
10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14=
 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></di=
v></div></li></ol></div></div></div></div><div class=3D"flex flex-col py-2 =
empty:hidden dark:border-white/20"><a class=3D"group flex gap-2 p-2.5 text-=
sm cursor-pointer focus:ring-0 radix-disabled:pointer-events-none radix-dis=
abled:opacity-50 group items-center hover:bg-token-sidebar-surface-secondar=
y rounded-lg"><span class=3D"flex w-full flex-row flex-wrap-reverse justify=
-between"><span class=3D"flex items-center gap-2"><span class=3D"flex h-7 w=
-7 items-center justify-center rounded-full border border-token-border-ligh=
t"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-sm shrink-0"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.4998 7.5C11.4998 5.01472 13.514=
5 3 15.9998 3C18.4851 3 20.4998 5.01472 20.4998 7.5C20.4998 9.98528 18.4851=
 12 15.9998 12C13.5145 12 11.4998 9.98528 11.4998 7.5ZM15.9998 5C14.6191 5 =
13.4998 6.11929 13.4998 7.5C13.4998 8.88071 14.6191 10 15.9998 10C17.3805 1=
0 18.4998 8.88071 18.4998 7.5C18.4998 6.11929 17.3805 5 15.9998 5ZM2.49978 =
8C2.49978 5.79086 4.29064 4 6.49978 4C8.70892 4 10.4998 5.79086 10.4998 8C1=
0.4998 10.2091 8.70892 12 6.49978 12C4.29064 12 2.49978 10.2091 2.49978 8ZM=
6.49978 6C5.39521 6 4.49978 6.89543 4.49978 8C4.49978 9.10457 5.39521 10 6.=
49978 10C7.60435 10 8.49978 9.10457 8.49978 8C8.49978 6.89543 7.60435 6 6.4=
9978 6ZM11.4364 14.5606C12.8874 13.385 14.7721 12.887 16.5742 13.0211C17.12=
5 13.0621 17.5382 13.5418 17.4972 14.0926C17.4563 14.6433 16.9765 15.0566 1=
6.4258 15.0156C15.0708 14.9148 13.7054 15.2963 12.6955 16.1145C11.7087 16.9=
141 10.9998 18.1781 10.9998 20C10.9998 20.5523 10.5521 21 9.99978 21C9.4474=
9 21 8.99978 20.5523 8.99978 20C8.99978 17.5992 9.96238 15.7549 11.4364 14.=
5606ZM2.63451 13.949C4.15498 12.9883 6.07556 12.765 7.77119 13.2432C8.30275=
 13.3931 8.61214 13.9455 8.46224 14.477C8.31234 15.0086 7.75992 15.318 7.22=
836 15.1681C6.04081 14.8332 4.7115 15.0024 3.70288 15.6398C2.73131 16.2537 =
2 17.3348 2 19C2 19.5523 1.55228 20 1 20C0.447715 20 0 19.5523 0 19C0 16.65=
59 1.07699 14.9332 2.63451 13.949ZM20.4997 14.9956C21.052 14.9956 21.4997 1=
5.4432 21.4998 15.9955L21.4999 17.4956H23C23.5523 17.4956 24 17.9433 24 18.=
4956C24 19.0479 23.5523 19.4956 23 19.4956H21.5V20.9956C21.5 21.5279 21.052=
3 21.9756 20.5 21.9956C19.9477 21.9756 19.5 21.5279 19.5 20.9956V19.4956H17=
.9998C17.4475 19.4756 16.9998 19.0479 16.9998 18.4956C16.9998 17.9433 17.44=
75 17.4756 17.9998 17.4956H19.4999L19.4998 15.9957C19.4997 15.4434 19.9474 =
14.9957 20.4997 14.9956Z" fill=3D"currentColor"></path></svg></span>Invite =
members</span></span></a><div class=3D"flex w-full items-center md:hidden">=
<div class=3D"max-w-[100%] grow"><div class=3D"group relative" data-headles=
sui-state=3D""><button class=3D"flex w-full max-w-[100%] items-center gap-2=
 rounded-lg text-sm group-ui-open:bg-token-sidebar-surface-secondary p-2 ho=
ver:bg-token-sidebar-surface-secondary" data-testid=3D"accounts-profile-but=
ton" id=3D"headlessui-menu-button-:rt:" type=3D"button" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-headlessui-state=3D""><div class=3D"flex-s=
hrink-0" style=3D"view-transition-name: var(--vt-profile-avatar-sidebar);">=
<div class=3D"flex items-center justify-center overflow-hidden rounded-full=
"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 36 36" fill=3D"n=
one" width=3D"32" height=3D"32"><circle cx=3D"18" cy=3D"18" r=3D"18" fill=
=3D"#3c46ff"></circle><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"m7.358 14.641 5.056-5.055A2 2 0 0 1 13.828 9h8.343a2 2 0 0 1 1.414.586l=
5.056 5.055a2 2 0 0 1 .055 2.771l-9.226 9.996a2 2 0 0 1-2.94 0l-9.227-9.996=
a2 2 0 0 1 .055-2.77Zm6.86-1.939-.426 1.281a2.07 2.07 0 0 1-1.31 1.31l-1.28=
.426a.296.296 0 0 0 0 .561l1.28.428a2.07 2.07 0 0 1 1.31 1.309l.427 1.28c.0=
9.27.471.27.56 0l.428-1.28a2.07 2.07 0 0 1 1.309-1.31l1.281-.427a.296.296 0=
 0 0 0-.56l-1.281-.428a2.07 2.07 0 0 1-1.309-1.309l-.427-1.28a.296.296 0 0 =
0-.561 0z" fill=3D"#fff"></path></svg></div></div><div class=3D"relative -t=
op-px grow -space-y-px truncate text-start text-token-text-primary"><div di=
r=3D"auto">David Olsson</div><div class=3D"truncate text-xs text-token-text=
-secondary" dir=3D"auto">Atomic 47 Labs</div></div></button></div></div></d=
iv></div></nav></div></div></div></div><div class=3D"relative flex h-full m=
ax-w-full flex-1 flex-col overflow-hidden"><div class=3D"draggable sticky t=
op-0 z-10 flex min-h-[60px] items-center justify-center border-transparent =
bg-token-main-surface-primary pl-0 md:hidden"><div class=3D"no-draggable ab=
solute bottom-0 left-0 top-0 ml-3 inline-flex items-center justify-center">=
<button type=3D"button" class=3D"inline-flex rounded-md hover:text-token-te=
xt-primary focus:outline-none focus:ring-2 focus:ring-inset focus:ring-whit=
e active:opacity-50" data-testid=3D"open-sidebar-button"><span class=3D"sr-=
only">Open sidebar</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-lg mx-=
2 text-token-text-secondary"><path fill-rule=3D"evenodd" clip-rule=3D"eveno=
dd" d=3D"M3 8C3 7.44772 3.44772 7 4 7H20C20.5523 7 21 7.44772 21 8C21 8.552=
28 20.5523 9 20 9H4C3.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15=
H14C14.5523 15 15 15.4477 15 16C15 16.5523 14.5523 17 14 17H4C3.44772 17 3 =
16.5523 3 16Z" fill=3D"currentColor"></path></svg></button></div><div class=
=3D"no-draggable"><button aria-label=3D"Model selector, current model is 4o=
" type=3D"button" id=3D"radix-:r21:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" data-testid=3D"model-switcher-dropdown-but=
ton" class=3D"group flex cursor-pointer items-center gap-1 rounded-lg py-1.=
5 px-3 text-lg hover:bg-token-main-surface-secondary radix-state-open:bg-to=
ken-main-surface-secondary font-semibold text-token-text-secondary overflow=
-hidden whitespace-nowrap"><div class=3D"text-token-text-secondary">ChatGPT=
 <span class=3D"text-token-text-secondary">4o</span></div><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md text-token-text-tertiary"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.3165=
8 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.316=
6 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L1=
2.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 =
11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.2=
9289Z" fill=3D"currentColor"></path></svg></button></div><div class=3D"no-d=
raggable absolute bottom-0 right-0 top-0 mr-3 inline-flex items-center just=
ify-center"><span class=3D"flex" data-state=3D"closed"><button aria-label=
=3D"New chat" class=3D"h-10 rounded-lg px-2 text-token-text-secondary focus=
-visible:outline-0 disabled:text-token-text-quaternary focus-visible:bg-tok=
en-sidebar-surface-secondary enabled:hover:bg-token-sidebar-surface-seconda=
ry"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentCo=
lor" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-xl-heavy"><path d=
=3D"M15.6729 3.91287C16.8918 2.69392 18.8682 2.69392 20.0871 3.91287C21.306=
1 5.13182 21.3061 7.10813 20.0871 8.32708L14.1499 14.2643C13.3849 15.0293 1=
2.3925 15.5255 11.3215 15.6785L9.14142 15.9899C8.82983 16.0344 8.51546 15.9=
297 8.29289 15.7071C8.07033 15.4845 7.96554 15.1701 8.01005 14.8586L8.32149=
 12.6785C8.47449 11.6075 8.97072 10.615 9.7357 9.85006L15.6729 3.91287ZM18.=
6729 5.32708C18.235 4.88918 17.525 4.88918 17.0871 5.32708L11.1499 11.2643C=
10.6909 11.7233 10.3932 12.3187 10.3014 12.9613L10.1785 13.8215L11.0386 13.=
6986C11.6812 13.6068 12.2767 13.3091 12.7357 12.8501L18.6729 6.91287C19.110=
8 6.47497 19.1108 5.76499 18.6729 5.32708ZM11 3.99929C11.0004 4.55157 10.55=
31 4.99963 10.0008 5.00007C9.00227 5.00084 8.29769 5.00827 7.74651 5.06064C=
7.20685 5.11191 6.88488 5.20117 6.63803 5.32695C6.07354 5.61457 5.6146 6.07=
351 5.32698 6.63799C5.19279 6.90135 5.10062 7.24904 5.05118 7.8542C5.00078 =
8.47105 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 5.05118 16.1457C5.1=
0062 16.7509 5.19279 17.0986 5.32698 17.3619C5.6146 17.9264 6.07354 18.3854=
 6.63803 18.673C6.90138 18.8072 7.24907 18.8993 7.85424 18.9488C8.47108 18.=
9992 9.26339 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 16.1458 18.9488C16.=
7509 18.8993 17.0986 18.8072 17.362 18.673C17.9265 18.3854 18.3854 17.9264 =
18.673 17.3619C18.7988 17.1151 18.8881 16.7931 18.9393 16.2535C18.9917 15.7=
023 18.9991 14.9977 18.9999 13.9992C19.0003 13.4469 19.4484 12.9995 20.0007=
 13C20.553 13.0004 21.0003 13.4485 20.9999 14.0007C20.9991 14.9789 20.9932 =
15.7808 20.9304 16.4426C20.8664 17.116 20.7385 17.7136 20.455 18.2699C19.97=
57 19.2107 19.2108 19.9756 18.27 20.455C17.6777 20.7568 17.0375 20.8826 16.=
3086 20.9421C15.6008 21 14.7266 21 13.6428 21H10.3572C9.27339 21 8.39925 21=
 7.69138 20.9421C6.96253 20.8826 6.32234 20.7568 5.73005 20.455C4.78924 19.=
9756 4.02433 19.2107 3.54497 18.2699C3.24318 17.6776 3.11737 17.0374 3.0578=
2 16.3086C2.99998 15.6007 2.99999 14.7266 3 13.6428V10.3572C2.99999 9.27337=
 2.99998 8.39922 3.05782 7.69134C3.11737 6.96249 3.24318 6.3223 3.54497 5.7=
3001C4.02433 4.7892 4.78924 4.0243 5.73005 3.54493C6.28633 3.26149 6.88399 =
3.13358 7.55735 3.06961C8.21919 3.00673 9.02103 3.00083 9.99922 3.00007C10.=
5515 2.99964 10.9996 3.447 11 3.99929Z" fill=3D"currentColor"></path></svg>=
</button></span></div></div><div class=3D"no-draggable flex w-full items-ce=
nter justify-center bg-token-main-surface-primary md:hidden"></div><main cl=
ass=3D"relative h-full w-full flex-1 overflow-auto transition-width"><div r=
ole=3D"presentation" class=3D"composer-parent flex h-full flex-col focus-vi=
sible:outline-0" tabindex=3D"0"><div class=3D"flex-1 overflow-hidden"><div =
class=3D"h-full"><div class=3D"react-scroll-to-bottom--css-uxycy-79elbk h-f=
ull"><div class=3D"react-scroll-to-bottom--css-uxycy-1n7m0yu"><div class=3D=
"flex flex-col text-sm md:pb-9"><div class=3D"draggable no-draggable-childr=
en sticky top-0 p-3 mb-1.5 flex items-center justify-between z-10 h-header-=
height font-semibold bg-token-main-surface-primary max-md:hidden"><div clas=
s=3D"absolute start-1/2 ltr:-translate-x-1/2 rtl:translate-x-1/2"></div><di=
v class=3D"flex items-center gap-0 overflow-hidden"><button aria-label=3D"M=
odel selector, current model is 4o" type=3D"button" id=3D"radix-:rvb:" aria=
-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" data-testi=
d=3D"model-switcher-dropdown-button" class=3D"group flex cursor-pointer ite=
ms-center gap-1 rounded-lg py-1.5 px-3 text-lg hover:bg-token-main-surface-=
secondary radix-state-open:bg-token-main-surface-secondary font-semibold te=
xt-token-text-secondary overflow-hidden whitespace-nowrap"><div class=3D"te=
xt-token-text-secondary">ChatGPT <span class=3D"text-token-text-secondary">=
4o</span></div><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md text-token-=
text-tertiary"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29=
289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2=
929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342=
 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17=
 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 1=
0.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg=
></button></div><div class=3D"gap-2 flex items-center pr-1 leading-[0]"><sp=
an class=3D"" data-state=3D"closed"><button data-testid=3D"share-chat-butto=
n" class=3D"h-10 rounded-lg px-2 text-token-text-secondary focus-visible:ou=
tline-0 disabled:text-token-text-quaternary focus-visible:bg-token-main-sur=
face-secondary enabled:hover:bg-token-main-surface-secondary" style=3D"view=
-transition-name: var(--vt_share_chat_compact_button);"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-xl-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11.2929 3.29289C11.6834 2.90237 12.3166 2.90237 12.7071 3.2=
9289L16.7071 7.29289C17.0976 7.68342 17.0976 8.31658 16.7071 8.70711C16.316=
6 9.09763 15.6834 9.09763 15.2929 8.70711L13 6.41421V15C13 15.5523 12.5523 =
16 12 16C11.4477 16 11 15.5523 11 15V6.41421L8.70711 8.70711C8.31658 9.0976=
3 7.68342 9.09763 7.29289 8.70711C6.90237 8.31658 6.90237 7.68342 7.29289 7=
.29289L11.2929 3.29289ZM4 14C4.55228 14 5 14.4477 5 15V18C5 18.5523 5.44772=
 19 6 19H18C18.5523 19 19 18.5523 19 18V15C19 14.4477 19.4477 14 20 14C20.5=
523 14 21 14.4477 21 15V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.65=
69 3 18V15C3 14.4477 3.44772 14 4 14Z" fill=3D"currentColor"></path></svg><=
/button></span><button aria-label=3D"Open Profile Menu" data-testid=3D"prof=
ile-button" class=3D"flex h-10 w-10 items-center justify-center rounded-ful=
l hover:bg-token-main-surface-secondary focus-visible:bg-token-main-surface=
-secondary focus-visible:outline-0" type=3D"button" id=3D"radix-:rve:" aria=
-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><div class=
=3D"flex items-center justify-center overflow-hidden rounded-full"><svg xml=
ns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 36 36" fill=3D"none" width=
=3D"32" height=3D"32"><circle cx=3D"18" cy=3D"18" r=3D"18" fill=3D"#3c46ff"=
></circle><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"m7.358 14.=
641 5.056-5.055A2 2 0 0 1 13.828 9h8.343a2 2 0 0 1 1.414.586l5.056 5.055a2 =
2 0 0 1 .055 2.771l-9.226 9.996a2 2 0 0 1-2.94 0l-9.227-9.996a2 2 0 0 1 .05=
5-2.77Zm6.86-1.939-.426 1.281a2.07 2.07 0 0 1-1.31 1.31l-1.28.426a.296.296 =
0 0 0 0 .561l1.28.428a2.07 2.07 0 0 1 1.31 1.309l.427 1.28c.09.27.471.27.56=
 0l.428-1.28a2.07 2.07 0 0 1 1.309-1.31l1.281-.427a.296.296 0 0 0 0-.56l-1.=
281-.428a2.07 2.07 0 0 1-1.309-1.309l-.427-1.28a.296.296 0 0 0-.561 0z" fil=
l=3D"#fff"></path></svg></div></button></div></div><div class=3D""></div><d=
iv class=3D""></div><article class=3D"w-full scroll-mb-[var(--thread-traili=
ng-height,150px)] text-token-text-primary focus-visible:outline-2 focus-vis=
ible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-2=
" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div cla=
ss=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-=
5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:m=
ax-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversatio=
n-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 =
md:gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-messa=
ge-author-role=3D"user" data-message-id=3D"bbb214b4-0ce6-43bb-b434-6432025c=
858f" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items=
-end gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5"><div c=
lass=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start">=
<div class=3D"flex w-[70%] flex-row items-center justify-end gap-1"><div cl=
ass=3D"overflow-hidden rounded-lg w-full h-full max-w-96 max-h-64"><div cla=
ss=3D"relative flex h-auto w-full max-w-lg items-center justify-center over=
flow-hidden bg-token-main-surface-secondary text-token-text-tertiary"><butt=
on type=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-co=
ntrols=3D"radix-:r13t:" data-state=3D"closed" class=3D"overflow-hidden roun=
ded-lg w-full h-full max-w-96 max-h-64"><img alt=3D"Uploaded image" width=
=3D"1536" height=3D"1196" class=3D"max-w-full object-cover object-center ov=
erflow-hidden rounded-lg w-full h-full max-w-96 max-h-64 transition-opacity=
 duration-300 opacity-100" src=3D"https://files.oaiusercontent.com/file-JKj=
MuUg7Lso7fL05wfgFzNZL?se=3D2024-11-17T14%3A44%3A25Z&amp;sp=3Dr&amp;sv=3D202=
4-08-04&amp;sr=3Db&amp;rscc=3Dmax-age%3D299%2C%20immutable%2C%20private&amp=
;rscd=3Dattachment%3B%20filename%3D1000004246.jpg&amp;sig=3D4Nrst487vyzeZ2/=
aDLybCRquu0bnVzOOUFeZ2LUUYZk%3D"></button></div></div></div><div class=3D"r=
elative max-w-[70%] rounded-3xl bg-token-message-surface px-5 py-2.5 rounde=
d-tr-lg"><div class=3D"whitespace-pre-wrap">Can you translate text in an im=
age I share?
If you need more information, ask me a follow up question or ask me to uplo=
ad a file or image.</div></div></div></div><div class=3D"my-2 mr-4 flex fle=
x-row justify-end gap-1 text-xs text-token-text-secondary"></div></div></di=
v></div></div></div></article><article class=3D"w-full scroll-mb-[var(--thr=
ead-trailing-height,150px)] text-token-text-primary focus-visible:outline-2=
 focus-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversat=
ion-turn-3" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said=
:</h6><div class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 =
lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5=
 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"fle=
x-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0"><div =
class=3D"gizmo-bot-avatar flex h-8 w-8 items-center justify-center overflow=
-hidden rounded-full"><div class=3D"relative p-1 rounded-sm flex items-cent=
er justify-center bg-token-main-surface-primary text-token-text-primary h-8=
 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex max-w-full flex-col flex-grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"84d337b0-9520-4c03-96de-8e71201d0ffb=
" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items-end=
 gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:pr=
ose-invert dark"><p>Yes, I can transcribe the text from the image you provi=
ded. Here is the transcription:</p><hr><p><strong>[remember, remember]</str=
ong></p><p><strong>What the AGENTS need to learn/achieve</strong></p><p><st=
rong>The Cognitive Skills:</strong></p><ul><li><strong>REMEMBER</strong></l=
i><li><strong>UNDERSTAND</strong></li><li><strong>APPLY</strong></li><li><s=
trong>ANALYZE</strong></li><li><strong>EVALUATE</strong></li><li><strong>CR=
EATE (decide)</strong></li></ul><p><strong>AMNESIAC WALLS</strong></p><p><s=
trong>The milestone achievements</strong><br>to the 1st "breakthrough."</p>=
<hr><p><strong>An analogy: memetic diagram</strong><br>[remember, remember]=
</p><hr><p>Given all the options the agent has (the choices),<br>do they <s=
trong>"remember"</strong><br>a previously "similar" scene/image/word?</p><h=
r><p><strong>I don=E2=80=99t know =E2=86=92 I don=E2=80=99t know</strong></=
p><hr><p><strong>You don=E2=80=99t remember =E2=89=A1 You remember</strong>=
<br>[remember remember]</p><hr><p><strong>Cognitive or meta-</strong><br><s=
trong>The meta-skills to acquire</strong><br>(Oct. 25, '24)</p><hr><p><stro=
ng>Can they remember their pathway, their experience?</strong></p><hr><p>Le=
t me know if you need anything clarified or further organized!</p></div></d=
iv></div></div><div class=3D"mb-2 flex gap-3 empty:hidden -ml-2"><div class=
=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surf=
ace-primary md:absolute md:sr-only"><div class=3D"flex items-center"><span =
class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-tex=
t-secondary hover:bg-token-main-surface-secondary" aria-label=3D"Read aloud=
" data-testid=3D"voice-play-turn-action-button"><span class=3D"flex h-[30px=
] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129=
 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15=
C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.=
1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C=
10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81=
069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.3431=
5 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.0931=
3 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.=
0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.869=
5 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C2=
0.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98=
627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.799=
4 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.=
4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.560=
4C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 1=
4.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.49=
96 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 =
15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span=
><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-to=
ken-text-secondary hover:bg-token-main-surface-secondary" aria-label=3D"Cop=
y" data-testid=3D"copy-turn-action-button"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg></span></button></span><span class=3D"hidden"></span><span clas=
s=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:rvi:" ari=
a-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"=
cursor-pointer h-[30px] rounded-md px-1 text-token-text-secondary hover:bg-=
token-main-surface-secondary"><div class=3D"flex items-center pb-0"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M3.06957 10.8763C3.6233=
1 6.43564 7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C18.011=
8 3.44772 18.4595 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C20.0118=
 8.55228 19.5641 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 14.447=
7 7 15 7H16.9571C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5=
.0542 11.1237C4.98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39011 11.92=
4 3.00123 11.4243 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.9988 1=
2.5757 20.9304 13.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.60762 =
20.1535 5.99999 18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44771 21=
 3.99999 20.5523 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 15H8.9999=
9C9.55228 15 9.99999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.99999 =
17H7.04285C8.32433 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.3283 18.9=
458 12.8763C19.0141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D"curre=
ntColor"></path></svg><span class=3D"overflow-hidden text-clip whitespace-n=
owrap text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px; will-cha=
nge: opacity;">4o</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.6834=
2 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.683=
4 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 1=
8.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 =
11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.6=
8342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></div></button></=
span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div>=
</div></article><article class=3D"w-full scroll-mb-[var(--thread-trailing-h=
eight,150px)] text-token-text-primary focus-visible:outline-2 focus-visible=
:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-4" da=
ta-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=
=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"=
><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max=
-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-=
turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md=
:gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-message=
-author-role=3D"user" data-message-id=3D"bbb210b8-6faa-4cad-8f62-4e7c99b210=
76" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items-e=
nd gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5"><div cla=
ss=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><d=
iv class=3D"relative max-w-[70%] rounded-3xl bg-token-message-surface px-5 =
py-2.5"><div class=3D"whitespace-pre-wrap">Summarize and theorize and make =
that practical </div><div class=3D"absolute bottom-0 right-full top-0 -mr-3=
.5 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:block"><span cl=
ass=3D"" data-state=3D"closed"><button aria-label=3D"Edit message" class=3D=
"flex h-9 w-9 items-center justify-center rounded-full text-token-text-seco=
ndary transition hover:bg-token-main-surface-tertiary"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.=
4784 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.6135 18.800=
7C10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.9864C3.84585 2=
1.0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 20.1542 3.01=
362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 12.3865L13.=
2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 14.8121 5.7=
7567 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.75719 17.828=
6 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 =
5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.=
2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg=
></button></span></div></div></div></div></div></div></div></div></div></ar=
ticle><article class=3D"w-full scroll-mb-[var(--thread-trailing-height,150p=
x)] text-token-text-primary focus-visible:outline-2 focus-visible:outline-o=
ffset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-5" data-scroll-=
anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"m-au=
to text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div cl=
ass=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl l=
g:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col=
 relative items-end"><div><div class=3D"pt-0"><div class=3D"gizmo-bot-avata=
r flex h-8 w-8 items-center justify-center overflow-hidden rounded-full"><d=
iv class=3D"relative p-1 rounded-sm flex items-center justify-center bg-tok=
en-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" =
height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Ch=
atGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.=
9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404=
 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85=
078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249=
 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214=
C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3=
414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 =
14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 =
3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.72=
56 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 3=
6.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0=
786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998=
C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35=
.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115=
 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.=
0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.88=
49C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 3=
6.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.381=
3 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 2=
0.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842=
 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.=
6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.513=
97 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 =
5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.90=
2C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7=
321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893=
 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34=
.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17=
156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228=
 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4=
8312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979=
C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28=
.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.5528=
9 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L2=
2.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4=
787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967=
 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4=
832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086=
 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30=
.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348=
 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.=
9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 =
10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.=
9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.104=
8 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 2=
8.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40=
939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055=
 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 1=
0.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8=
107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659=
 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3=
5876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668=
 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14=
.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.99=
91L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V1=
7.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col =
agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w=
-full flex-col flex-grow"><div data-message-author-role=3D"assistant" data-=
message-id=3D"f085c29e-7678-474c-83d1-25877bfe45c4" dir=3D"auto" class=3D"m=
in-h-8 text-message flex w-full flex-col items-end gap-2 whitespace-normal =
break-words [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div =
class=3D"markdown prose w-full break-words dark:prose-invert dark"><h3>Summ=
ary</h3><p>The document outlines a framework for cognitive and meta-cogniti=
ve skills that "agents" (possibly human, AI, or other systems) need to achi=
eve milestones and breakthroughs in learning or decision-making. It emphasi=
zes:</p><ol><li><strong>Core Cognitive Skills</strong>: The progression fro=
m remembering =E2=86=92 understanding =E2=86=92 applying =E2=86=92 analyzin=
g =E2=86=92 evaluating =E2=86=92 creating.</li><li><strong>Amnesiac Walls</=
strong>: These represent obstacles in learning or recalling experiences tha=
t hinder the agent's ability to achieve breakthroughs.</li><li><strong>Mile=
stones to Breakthroughs</strong>: Success depends on developing these cogni=
tive skills and acquiring meta-skills (e.g., self-reflection, pattern recog=
nition).</li><li><strong>Key Question</strong>: Does the agent have the abi=
lity to recognize and "remember" similar patterns or experiences? This memo=
ry is tied to learning and decision-making.</li><li><strong>Meta-Skills and=
 Pathways</strong>: Can agents retrace their steps, recall their learning j=
ourney, and learn from past experiences?</li></ol><h3>Theoretical Interpret=
ation</h3><p>This diagram suggests a model for improving learning and probl=
em-solving through structured cognitive processes and memory. It highlights=
 a cyclical relationship between forgetting and remembering, where the act =
of "remembering" isn't just about recall but also involves recognizing patt=
erns and using prior experiences to make decisions.</p><p>The diagram also =
implies the importance of meta-skills, such as:</p><ul><li><strong>Self-awa=
reness</strong>: Knowing what you don't know.</li><li><strong>Pattern recog=
nition</strong>: Identifying similarities in past experiences.</li><li><str=
ong>Decision-making</strong>: Moving from evaluation to action.</li></ul><h=
r><h3>Practical Application</h3><p>To make this framework actionable in rea=
l-world scenarios, consider these steps:</p><ol><li><p><strong>Build a Lear=
ning Progression</strong>:</p><ul><li>Design a structured learning environm=
ent where tasks progress from memorization to creation (e.g., Bloom's taxon=
omy).</li><li>Evaluate whether agents (human learners or AI systems) are ad=
vancing from "amnesiac walls" to breakthroughs.</li></ul></li><li><p><stron=
g>Memory Integration</strong>:</p><ul><li>Develop tools (e.g., journaling f=
or humans or database logs for AI) to help agents record their learning pat=
hways.</li><li>Enable recall systems to suggest "similar past experiences" =
when facing new problems.</li></ul></li><li><p><strong>Simulate Decision Pa=
ths</strong>:</p><ul><li>For humans: Use reflective exercises like retrospe=
ctives or decision-mapping.</li><li>For AI: Build algorithms to analyze dec=
ision paths and refine them based on past outcomes.</li></ul></li><li><p><s=
trong>Meta-Skill Training</strong>:</p><ul><li>Train humans to "think about=
 thinking" (meta-cognition), focusing on identifying gaps in knowledge and =
revisiting what they=E2=80=99ve learned.</li><li>For AI: Incorporate feedba=
ck loops where systems evaluate their own performance against desired outco=
mes.</li></ul></li><li><p><strong>Overcome Amnesiac Walls</strong>:</p><ul>=
<li>Implement strategies to help agents persist through challenges, like sp=
aced repetition (for memory) or scenario simulations (for analysis and crea=
tivity).</li></ul></li><li><p><strong>Test for Breakthroughs</strong>:</p><=
ul><li>Use metrics like innovative outputs, pattern recognition, and the ab=
ility to adapt to new tasks as indicators of achieving milestones.</li></ul=
></li></ol><hr><h3>Example Use Cases</h3><ol><li><p><strong>Education</stro=
ng>: Teachers can structure lessons to guide students from remembering fact=
s to creating new ideas, focusing on identifying and breaking through "amne=
siac walls" (e.g., difficult concepts).</p></li><li><p><strong>AI Developme=
nt</strong>: Engineers can design algorithms that mimic this cognitive prog=
ression, enabling AI to recognize patterns from past data and adapt to nove=
l scenarios.</p></li><li><p><strong>Workplace Problem-Solving</strong>: Tea=
ms can use reflection and retrospectives to document processes and ensure t=
hey "remember" successful approaches to similar challenges.</p></li></ol><p=
>This framework bridges theory with practice by emphasizing the role of mem=
ory, structured learning, and meta-skills in achieving breakthroughs.</p></=
div></div></div></div><div class=3D"mb-2 flex gap-3 empty:hidden -ml-2"><di=
v class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-ma=
in-surface-primary md:absolute md:sr-only"><div class=3D"flex items-center"=
><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-to=
ken-text-secondary hover:bg-token-main-surface-secondary" aria-label=3D"Rea=
d aloud" data-testid=3D"voice-play-turn-action-button"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C=
6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.0=
0005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2=
629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3=
.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.4=
03 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319=
 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019=
 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9=
996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185=
 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16=
.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.60=
64 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665Z=
M15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18=
593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385=
 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15=
.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.000=
1C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8=
.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button=
></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg =
text-token-text-secondary hover:bg-token-main-surface-secondary" aria-label=
=3D"Copy" data-testid=3D"copy-turn-action-button"><span class=3D"flex h-[30=
px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg></span></button></span><span class=3D"hidden"></span><spa=
n class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:rvo=
:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" cla=
ss=3D"cursor-pointer h-[30px] rounded-md px-1 text-token-text-secondary hov=
er:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M3.06957 10.8763C=
3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C=
18.0118 3.44772 18.4595 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C2=
0.0118 8.55228 19.5641 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 =
14.4477 7 15 7H16.9571C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.6=
7174 5.0542 11.1237C4.98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39011=
 11.924 3.00123 11.4243 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.=
9988 12.5757 20.9304 13.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.=
60762 20.1535 5.99999 18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44=
771 21 3.99999 20.5523 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 15H=
8.99999C9.55228 15 9.99999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.=
99999 17H7.04285C8.32433 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.328=
3 18.9458 12.8763C19.0141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D=
"currentColor"></path></svg><span class=3D"overflow-hidden text-clip whites=
pace-nowrap text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px; wi=
ll-change: opacity;">4o</span><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-s=
m"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C=
5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C=
17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.=
3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.73=
48 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.902=
37 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></div></but=
ton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div>=
</div></div></article><article class=3D"w-full scroll-mb-[var(--thread-trai=
ling-height,150px)] text-token-text-primary focus-visible:outline-2 focus-v=
isible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn=
-6" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div c=
lass=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md=
:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-=
1 md:gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-mes=
sage-author-role=3D"user" data-message-id=3D"bbb215c5-90f3-49ca-a9b4-f9c0a9=
ae228f" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col ite=
ms-end gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5"><div=
 class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start=
"><div class=3D"relative max-w-[70%] rounded-3xl bg-token-message-surface p=
x-5 py-2.5"><div class=3D"whitespace-pre-wrap">Make this a habitual framewo=
rk for knowledge workers and provide it as a code Repo for humans, breaking=
 out functions, creating a readme. And designing the structure and. Meta st=
ructure and sample code for humans. </div><div class=3D"absolute bottom-0 r=
ight-full top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&=
amp;]:block"><span class=3D"" data-state=3D"closed"><button aria-label=3D"E=
dit message" class=3D"flex h-9 w-9 items-center justify-center rounded-full=
 text-token-text-secondary transition hover:bg-token-main-surface-tertiary"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52=
167 19.7071 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 =
11.7069L11.6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.1=
6441 20.9864C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.478=
8 2.96053 20.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.12=
34 5.19932 12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.24=
28 5.87846 14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 =
18.1216 9.75719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14=
.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.707=
12C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"curr=
entColor"></path></svg></button></span></div></div></div></div></div></div>=
</div></div></div></article><article class=3D"w-full scroll-mb-[var(--threa=
d-trailing-height,150px)] text-token-text-primary focus-visible:outline-2 f=
ocus-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversatio=
n-turn-7" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:<=
/h6><div class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg=
:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 l=
g:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-=
shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0"><div cl=
ass=3D"gizmo-bot-avatar flex h-8 w-8 items-center justify-center overflow-h=
idden rounded-full"><div class=3D"relative p-1 rounded-sm flex items-center=
 justify-center bg-token-main-surface-primary text-token-text-primary h-8 w=
-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D=
"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.52=
41 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8=
.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.909=
8 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21=
.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1=
.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.300=
85 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.=
02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20=
.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182=
 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.=
8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.149=
2C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 4=
0.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1=
704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547=
 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.83=
71 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 =
16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17=
.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019=
 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.=
2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359=
C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.19=
46 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849Z=
M6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26=
.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.123=
3 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.73=
1 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 2=
9.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8=
643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064=
ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 1=
0.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.26=
38 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 =
26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1=
307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 =
4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.=
6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.633=
3 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L3=
3.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.42=
44 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 2=
8.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6=
047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 =
20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.24=
64 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26=
.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.27=
12L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C=
16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.5=
3903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.204=
4 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 3=
5.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.=
9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.809=
8 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5=
.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2=
649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 =
22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86=
356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424=
 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25=
.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></d=
iv></div></div></div><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><d=
iv class=3D"flex max-w-full flex-col flex-grow"><div data-message-author-ro=
le=3D"assistant" data-message-id=3D"b02143c0-a307-4350-be35-b27b6b8890ef" d=
ir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items-end ga=
p-2 whitespace-normal break-words [.text-message+&amp;]:mt-5" data-message-=
model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden=
 first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose=
-invert dark"><h3>Habitual Framework for Knowledge Workers: "Cognitive Mile=
stone Framework (CMF)"</h3><p>The <strong>Cognitive Milestone Framework (CM=
F)</strong> is designed to help knowledge workers systematically enhance th=
eir cognitive and meta-cognitive skills through structured practices, routi=
nes, and tools. Below is the structure for the repository, including a fram=
ework design, a README, function breakdowns, and sample "code for humans" t=
o adopt these practices.</p><hr><h3>Repository Structure</h3><pre class=3D"=
!overflow-visible"><div class=3D"contain-inline-size rounded-md border-[0.5=
px] border-token-border-medium relative bg-token-sidebar-surface-primary da=
rk:bg-gray-950"><div class=3D"flex items-center text-token-text-secondary p=
x-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token-sideba=
r-surface-primary dark:bg-token-main-surface-secondary select-none">bash</d=
iv><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolute bott=
om-0 right-2 flex h-9 items-center"><div class=3D"flex items-center rounded=
 bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-text-se=
condary dark:bg-token-main-surface-secondary"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div></d=
iv></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"!whi=
tespace-pre hljs language-bash">Cognitive-Milestone-Framework/
=E2=94=82
=E2=94=9C=E2=94=80=E2=94=80 README.md                     <span class=3D"hl=
js-comment"># Overview and instructions</span>
=E2=94=9C=E2=94=80=E2=94=80 framework/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 remember.md               <span cla=
ss=3D"hljs-comment"># Tools and exercises for memory</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 understand.md             <span cla=
ss=3D"hljs-comment"># Strategies for deeper comprehension</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 apply.md                  <span cla=
ss=3D"hljs-comment"># Ways to put knowledge into practice</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 analyze.md                <span cla=
ss=3D"hljs-comment"># Techniques for critical thinking</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 evaluate.md               <span cla=
ss=3D"hljs-comment"># Methods for assessing results</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 create.md                 <span cla=
ss=3D"hljs-comment"># Systems for ideation and decision-making</span>
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 meta-skills.md            <span cla=
ss=3D"hljs-comment"># Guidance on self-reflection and pathways</span>
=E2=94=82
=E2=94=9C=E2=94=80=E2=94=80 routines/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 daily_routine.md          <span cla=
ss=3D"hljs-comment"># Daily habits for cognitive development</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 weekly_reflection.md      <span cla=
ss=3D"hljs-comment"># Weekly retrospective structure</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 decision_making.md        <span cla=
ss=3D"hljs-comment"># Tools for structured decision pathways</span>
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 milestone_tracking.md     <span cla=
ss=3D"hljs-comment"># Templates for milestone progress tracking</span>
=E2=94=82
=E2=94=9C=E2=94=80=E2=94=80 samples/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 reflective_journal.md     <span cla=
ss=3D"hljs-comment"># Example reflection entries</span>
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 decision_log.md           <span cla=
ss=3D"hljs-comment"># Example of a decision-tracking log</span>
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 problem_solving.md        <span cla=
ss=3D"hljs-comment"># Sample problem-solving exercises</span>
=E2=94=82
=E2=94=94=E2=94=80=E2=94=80 scripts/
    =E2=94=9C=E2=94=80=E2=94=80 milestone_tracker.py      <span class=3D"hl=
js-comment"># Python script for tracking milestones</span>
    =E2=94=94=E2=94=80=E2=94=80 habit_reminder.py         <span class=3D"hl=
js-comment"># Script to schedule habit reminders</span>
</code></div></div></pre><hr><h3>README.md</h3><pre class=3D"!overflow-visi=
ble"><div class=3D"contain-inline-size rounded-md border-[0.5px] border-tok=
en-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950=
"><div class=3D"flex items-center text-token-text-secondary px-4 py-2 text-=
xs font-sans justify-between rounded-t-md h-9 bg-token-sidebar-surface-prim=
ary dark:bg-token-main-surface-secondary select-none">markdown</div><div cl=
ass=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolute bottom-0 right=
-2 flex h-9 items-center"><div class=3D"flex items-center rounded bg-token-=
sidebar-surface-primary px-2 font-sans text-xs text-token-text-secondary da=
rk:bg-token-main-surface-secondary"><span class=3D"" data-state=3D"closed">=
<button class=3D"flex gap-1 items-center select-none py-1"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C2=
2 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2=
 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 1=
7 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.447=
72 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 =
5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg>Copy code</button></span></div></div></div><=
div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pr=
e hljs language-markdown"><span class=3D"hljs-section"># Cognitive Mileston=
e Framework (CMF)</span>

<span class=3D"hljs-section">## Overview</span>

The <span class=3D"hljs-strong">**Cognitive Milestone Framework (CMF)**</sp=
an> is a practical system to help knowledge workers develop cognitive skill=
s and meta-skills needed for breakthroughs in their work. Inspired by Bloom=
's taxonomy, this framework enables individuals to progress from memory-bas=
ed learning to creative decision-making.

<span class=3D"hljs-section">## Key Features:</span>
<span class=3D"hljs-bullet">1.</span> <span class=3D"hljs-strong">**Cogniti=
ve Skill Modules**</span>: Learn and practice remembering, understanding, a=
pplying, analyzing, evaluating, and creating.
<span class=3D"hljs-bullet">2.</span> <span class=3D"hljs-strong">**Meta-Sk=
ills Development**</span>: Reflect on learning pathways and develop self-aw=
areness.
<span class=3D"hljs-bullet">3.</span> <span class=3D"hljs-strong">**Habitua=
l Routines**</span>: Daily, weekly, and milestone-tracking practices for co=
nsistency.
<span class=3D"hljs-bullet">4.</span> <span class=3D"hljs-strong">**Sample =
Logs and Scripts**</span>: Templates and Python scripts to automate and doc=
ument progress.

---

<span class=3D"hljs-section">## Framework Workflow</span>

<span class=3D"hljs-bullet">1.</span> <span class=3D"hljs-strong">**Daily R=
outines**</span>:
<span class=3D"hljs-bullet">   -</span> Start the day with memory and under=
standing exercises.
<span class=3D"hljs-bullet">   -</span> End the day by reflecting on lesson=
s learned.

<span class=3D"hljs-bullet">2.</span> <span class=3D"hljs-strong">**Weekly =
Reflection**</span>:
<span class=3D"hljs-bullet">   -</span> Analyze your week=E2=80=99s activit=
ies, evaluate outcomes, and set creative goals.

<span class=3D"hljs-bullet">3.</span> <span class=3D"hljs-strong">**Milesto=
ne Tracking**</span>:
<span class=3D"hljs-bullet">   -</span> Break long-term goals into mileston=
es aligned with cognitive skill levels.

---

<span class=3D"hljs-section">## Getting Started</span>

<span class=3D"hljs-bullet">1.</span> <span class=3D"hljs-strong">**Clone t=
he Repository**</span>:
   <span class=3D"hljs-code">```bash
   git clone https://github.com/your-username/Cognitive-Milestone-Framework=
.git
   cd Cognitive-Milestone-Framework
</span></code></div></div></pre><ol start=3D"2"><li><p><strong>Explore Modu=
les</strong>:
Navigate through the framework folder to start practicing individual skills=
.</p></li><li><p><strong>Automate Routines</strong>:
Use Python scripts in the <code>scripts/</code> directory to set reminders =
and track milestones.</p></li><li><p><strong>Customize Templates</strong>:
Modify templates in the <code>samples/</code> folder to suit your needs.</p=
></li></ol><hr><h2>Contributing</h2><p>We welcome contributions to improve =
the framework. Please submit pull requests or file issues.</p><pre class=3D=
"!overflow-visible"><div class=3D"contain-inline-size rounded-md border-[0.=
5px] border-token-border-medium relative bg-token-sidebar-surface-primary d=
ark:bg-gray-950"><div class=3D"flex items-center text-token-text-secondary =
px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token-sideb=
ar-surface-primary dark:bg-token-main-surface-secondary select-none">markdo=
wn</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolute=
 bottom-0 right-2 flex h-9 items-center"><div class=3D"flex items-center ro=
unded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-te=
xt-secondary dark:bg-token-main-surface-secondary"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.=
34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22=
H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569=
 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 =
4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5=
523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 =
14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div>=
</div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"!=
whitespace-pre hljs language-markdown">
---

<span class=3D"hljs-section">### Framework Breakdown</span>

<span class=3D"hljs-section">#### 1. Remember (`framework/remember.md`)</sp=
an>

<span class=3D"hljs-strong">**Purpose**</span>: Strengthen memory recall.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Daily Pr=
actice**</span>:
<span class=3D"hljs-bullet">  -</span> Use spaced repetition (tools: Anki, =
Memrise).
<span class=3D"hljs-bullet">  -</span> Create flashcards summarizing key id=
eas.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "What did I learn today? Can I recal=
l key points from memory?"

<span class=3D"hljs-section">#### 2. Understand (`framework/understand.md`)=
</span>

<span class=3D"hljs-strong">**Purpose**</span>: Develop comprehension.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Techniqu=
es**</span>:
<span class=3D"hljs-bullet">  -</span> Use the Feynman technique: Explain c=
oncepts in simple terms.
<span class=3D"hljs-bullet">  -</span> Diagram complex ideas to visualize r=
elationships.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "Do I understand the 'why' behind wh=
at I=E2=80=99m learning?"

<span class=3D"hljs-section">#### 3. Apply (`framework/apply.md`)</span>

<span class=3D"hljs-strong">**Purpose**</span>: Practice using knowledge.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Exercise=
s**</span>:
<span class=3D"hljs-bullet">  -</span> Solve real-world problems using lear=
ned concepts.
<span class=3D"hljs-bullet">  -</span> Teach others to solidify understandi=
ng.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "How did I use this knowledge today?=
 What was the outcome?"

<span class=3D"hljs-section">#### 4. Analyze (`framework/analyze.md`)</span=
>

<span class=3D"hljs-strong">**Purpose**</span>: Break down problems critica=
lly.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Techniqu=
es**</span>:
<span class=3D"hljs-bullet">  -</span> Conduct root cause analysis (e.g., 5=
 Whys).
<span class=3D"hljs-bullet">  -</span> Compare different approaches to solv=
ing problems.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "What patterns or gaps do I notice i=
n this situation?"

<span class=3D"hljs-section">#### 5. Evaluate (`framework/evaluate.md`)</sp=
an>

<span class=3D"hljs-strong">**Purpose**</span>: Assess decisions and outcom=
es.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Methods*=
*</span>:
<span class=3D"hljs-bullet">  -</span> Conduct SWOT (Strengths, Weaknesses,=
 Opportunities, Threats) analyses.
<span class=3D"hljs-bullet">  -</span> Use decision matrices to weigh trade=
-offs.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "What worked, what didn=E2=80=99t, a=
nd why?"

<span class=3D"hljs-section">#### 6. Create (`framework/create.md`)</span>

<span class=3D"hljs-strong">**Purpose**</span>: Innovate and make decisions=
.

<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Exercise=
s**</span>:
<span class=3D"hljs-bullet">  -</span> Brainstorm solutions without constra=
ints.
<span class=3D"hljs-bullet">  -</span> Use mind-mapping tools for ideation.
<span class=3D"hljs-bullet">-</span> <span class=3D"hljs-strong">**Reflecti=
on Prompt**</span>:
<span class=3D"hljs-bullet">  -</span> "What new ideas or decisions emerged=
 from today=E2=80=99s work?"

---

<span class=3D"hljs-section">### Sample Code for Humans</span>

<span class=3D"hljs-section">#### Daily Routine (`routines/daily<span class=
=3D"hljs-emphasis">_routine.md`)

```markdown
<span class=3D"hljs-strong">**Morning Routine:**</span>
1. Spend 10 minutes reviewing key lessons (REMEMBER).
2. Spend 15 minutes exploring why concepts are meaningful (UNDERSTAND).

<span class=3D"hljs-strong">**Evening Routine:**</span>
1. Reflect on how you applied knowledge during the day (APPLY).
2. Identify patterns or challenges encountered (ANALYZE).
</span></span></code></div></div></pre><h4>Decision Log Template (<code>sam=
ples/decision_log.md</code>)</h4><pre class=3D"!overflow-visible"><div clas=
s=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-medi=
um relative bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=
=3D"flex items-center text-token-text-secondary px-4 py-2 text-xs font-sans=
 justify-between rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-=
token-main-surface-secondary select-none">markdown</div><div class=3D"stick=
y top-9 md:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 =
items-center"><div class=3D"flex items-center rounded bg-token-sidebar-surf=
ace-primary px-2 font-sans text-xs text-token-text-secondary dark:bg-token-=
main-surface-secondary"><span class=3D"" data-state=3D"closed"><button clas=
s=3D"flex gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy code</button></span></div></div></div><div class=3D"o=
verflow-y-auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs languag=
e-markdown"><span class=3D"hljs-strong">**Date**</span>: YYYY-MM-DD
<span class=3D"hljs-strong">**Decision**</span>: [Description of the decisi=
on made]
<span class=3D"hljs-strong">**Options Considered**</span>:
<span class=3D"hljs-bullet">1.</span> Option A
<span class=3D"hljs-bullet">2.</span> Option B
<span class=3D"hljs-bullet">3.</span> Option C
<span class=3D"hljs-strong">**Evaluation Criteria**</span>:
<span class=3D"hljs-bullet">-</span> Pros and Cons of each option.
<span class=3D"hljs-strong">**Final Decision**</span>: [Chosen option and w=
hy]
<span class=3D"hljs-strong">**Outcome**</span>: [Results of the decision]
</code></div></div></pre><hr><h3>Python Scripts (<code>scripts/</code>)</h3=
><h4>Milestone Tracker (<code>milestone_tracker.py</code>)</h4><pre class=
=3D"!overflow-visible"><div class=3D"contain-inline-size rounded-md border-=
[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primar=
y dark:bg-gray-950"><div class=3D"flex items-center text-token-text-seconda=
ry px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token-si=
debar-surface-primary dark:bg-token-main-surface-secondary select-none">pyt=
hon</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolut=
e bottom-0 right-2 flex h-9 items-center"><div class=3D"flex items-center r=
ounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-t=
ext-secondary dark:bg-token-main-surface-secondary"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></d=
iv></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> json

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>=
):
    data =3D {<span class=3D"hljs-string">"milestone"</span>: milestone, <s=
pan class=3D"hljs-string">"status"</span>: status}
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"milestones.json"</span>, <span cla=
ss=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> file:
        json.dump(data, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Milestone logged: <span class=3D"hljs-subst">{milestone}</span> - <span c=
lass=3D"hljs-subst">{status}</span>"</span>)

<span class=3D"hljs-comment"># Example Usage</span>
log_milestone(<span class=3D"hljs-string">"Complete weekly analysis"</span>=
, <span class=3D"hljs-string">"In Progress"</span>)
</code></div></div></pre><h4>Habit Reminder (<code>habit_reminder.py</code>=
)</h4><pre class=3D"!overflow-visible"><div class=3D"contain-inline-size ro=
unded-md border-[0.5px] border-token-border-medium relative bg-token-sideba=
r-surface-primary dark:bg-gray-950"><div class=3D"flex items-center text-to=
ken-text-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none">python</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div =
class=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=3D"fle=
x items-center rounded bg-token-sidebar-surface-primary px-2 font-sans text=
-xs text-token-text-secondary dark:bg-token-main-surface-secondary"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center se=
lect-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H=
19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.656=
9 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7=
V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C2=
0 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44=
772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 =
9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</bu=
tton></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr=
"><code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-=
keyword">from</span> datetime <span class=3D"hljs-keyword">import</span> da=
tetime, timedelta
<span class=3D"hljs-keyword">import</span> time

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">schedule_reminder</span>(<span class=3D"hljs-params">task, delay_minutes<=
/span>):
    now =3D datetime.now()
    reminder_time =3D now + timedelta(minutes=3Ddelay_minutes)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reminder set for: <span class=3D"hljs-subst">{reminder_time.strftime(<spa=
n class=3D"hljs-string">'%H:%M:%S'</span>)}</span>"</span>)
    time.sleep(delay_minutes * <span class=3D"hljs-number">60</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Time to: <span class=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example Usage</span>
schedule_reminder(<span class=3D"hljs-string">"Reflect on today's learning"=
</span>, <span class=3D"hljs-number">10</span>)
</code></div></div></pre><hr><p>This repository serves as a practical guide=
 and toolkit for knowledge workers to develop and habitualize their cogniti=
ve skills for enhanced productivity and innovation. Let me know if you'd li=
ke the repo structure packaged or expanded further!</p></div></div></div></=
div><div class=3D"mb-2 flex gap-3 empty:hidden -ml-2"><div class=3D"items-c=
enter justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary=
 md:absolute md:sr-only"><div class=3D"flex items-center"><span class=3D"" =
data-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary=
 hover:bg-token-main-surface-secondary" aria-label=3D"Read aloud" data-test=
id=3D"voice-play-turn-action-button"><span class=3D"flex h-[30px] w-[30px] =
items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C1=
1 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.=
25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 =
3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.458=
8C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.5=
9714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331=
L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4=
 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.=
27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.999=
6 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 2=
0.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9=
444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149=
 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C1=
6.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.537=
9 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 1=
6.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.7=
66 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 =
16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.9=
0049Z" fill=3D"currentColor"></path></svg></span></button></span><span clas=
s=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-se=
condary hover:bg-token-main-surface-secondary" aria-label=3D"Copy" data-tes=
tid=3D"copy-turn-action-button"><span class=3D"flex h-[30px] w-[30px] items=
-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.=
34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17=
V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.=
34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5=
523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.4=
4772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523=
 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>=
</span></button></span><span class=3D"hidden"></span><span class=3D"" data-=
state=3D"closed"><button type=3D"button" id=3D"radix-:r104:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter h-[30px] rounded-md px-1 text-token-text-secondary hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md"><path d=3D"M3.06957 10.8763C3.62331 6.43564 =
7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 =
18.4595 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 1=
9.5641 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H1=
6.9571C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1=
237C4.98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39011 11.924 3.00123 =
11.4243 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.9988 12.5757 20.=
9304 13.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.=
99999 18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44771 21 3.99999 2=
0.5523 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 =
15 9.99999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.99999 17H7.04285=
C8.32433 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.3283 18.9458 12.876=
3C19.0141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D"currentColor"><=
/path></svg><span class=3D"overflow-hidden text-clip whitespace-nowrap text=
-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px; will-change: opaci=
ty;">4o</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 =
6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 =
18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.=
7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16=
.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.292=
89 9.29289Z" fill=3D"currentColor"></path></svg></div></button></span></div=
></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></ar=
ticle><article class=3D"w-full scroll-mb-[var(--thread-trailing-height,150p=
x)] text-token-text-primary focus-visible:outline-2 focus-visible:outline-o=
ffset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-8" data-scroll-=
anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"m-auto t=
ext-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex max-w-full flex-col flex-grow"><div data-message-author-rol=
e=3D"user" data-message-id=3D"bbb214a8-1020-4d16-8995-a7114d8381dc" dir=3D"=
auto" class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 wh=
itespace-normal break-words [.text-message+&amp;]:mt-5"><div class=3D"flex =
w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D=
"relative max-w-[70%] rounded-3xl bg-token-message-surface px-5 py-2.5"><di=
v class=3D"whitespace-pre-wrap">Crest a jupyter notebook that brings this a=
ll together to make it functional and explain it with use case examples. </=
div><div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt=
-1 [.group\/conversation-turn:hover_&amp;]:block"><span class=3D"" data-sta=
te=3D"closed"><button aria-label=3D"Edit message" class=3D"flex h-9 w-9 ite=
ms-center justify-center rounded-full text-token-text-secondary transition =
hover:bg-token-main-surface-tertiary"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.292=
9 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4784 6.06414 21=
.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.6135 18.8007C10.8766 19.53=
76 9.92793 20.0258 8.89999 20.1971L4.16441 20.9864C3.84585 21.0395 3.52127 =
20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 20.1542 3.01362 19.8356L3.8=
0288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 12.3865L13.2929 4.29291ZM1=
3 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 14.8121 5.77567 15.4288L5.=
21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.75719 17.8286 10.1993 17.38=
65L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973=
 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18=
.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg></button></spa=
n></div></div></div></div></div></div></div></div></div></article><article =
class=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)] text-token-=
text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" d=
ir=3D"auto" data-testid=3D"conversation-turn-9" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"m-auto text-base py=
-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto =
flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem]=
 xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items=
-end"><div><div class=3D"pt-0"><div class=3D"gizmo-bot-avatar flex h-8 w-8 =
items-center justify-center overflow-hidden rounded-full"><div class=3D"rel=
ative p-1 rounded-sm flex items-center justify-center bg-token-main-surface=
-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" v=
iewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><pa=
th d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37=
.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676=
 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7=
893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.30=
58 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.6762=
4 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17=
505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.49890=
5 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2=
.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0=
892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 =
37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.=
3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.505=
4 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 3=
3.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.072=
8 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39=
.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8=
874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 3=
6.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.49=
64 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 2=
1.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.986=
7 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37=
.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19=
742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244=
L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902=
 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.=
7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.101=
2L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 3=
3.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.5=
5279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.607=
1V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.=
64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.508=
9 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28=
.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.038=
62 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L=
25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.=
4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017=
 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.=
3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.171=
7 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32=
.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698=
 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.=
8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206=
 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11=
.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.12=
07 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C=
29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.5=
3945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.24=
24 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C=
10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.=
2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.8226=
4C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.=
93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.902=
4 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 1=
4.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4=
978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=
=3D"currentColor"></path></svg></div></div></div></div></div><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><=
div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l flex-grow"><span class=3D"first:mt-0 relative h-8 text-token-text-seconda=
ry hover:text-token-text-primary my-1.5"><div class=3D"group absolute left-=
0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button class=3D"" style=3D"opacit=
y: 1; will-change: auto;"><div class=3D"flex items-center justify-start gap=
-1"><span>Analyzed</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 7C12.2652 7 12.519=
6 7.10536 12.7071 7.29289L18.7071 13.2929C19.0976 13.6834 19.0976 14.3166 1=
8.7071 14.7071C18.3166 15.0976 17.6834 15.0976 17.2929 14.7071L12 9.41421L6=
.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5.29289 14.7071C4.90237 14.3=
166 4.90237 13.6834 5.29289 13.2929L11.2929 7.29289C11.4804 7.10536 11.7348=
 7 12 7Z" fill=3D"currentColor"></path></svg></div></button></div></span><d=
iv class=3D"overflow-hidden" style=3D"opacity: 1; height: auto; will-change=
: auto; transform: none;"><div class=3D"mb-3 mt-0.5 overflow-hidden rounded=
-xl bg-black"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert dark markdown prose w-full break-words dark:prose-invert dark"><pre cl=
ass=3D"!overflow-visible"><div class=3D"contain-inline-size rounded-md bord=
er-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-pri=
mary dark:bg-gray-950"><div class=3D"flex items-center text-token-text-seco=
ndary px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token=
-sidebar-surface-primary dark:bg-token-main-surface-secondary select-none">=
python</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"abso=
lute bottom-0 right-2 flex h-9 items-center"><div class=3D"flex items-cente=
r rounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-toke=
n-text-secondary dark:bg-token-main-surface-secondary"><div class=3D"mr-2 f=
lex items-center gap-2 border-r border-token-border-medium pr-2"><label for=
=3D"ada-always-show">Always show details</label><button type=3D"button" rol=
e=3D"switch" aria-checked=3D"true" data-state=3D"checked" value=3D"on" id=
=3D"ada-always-show" aria-label=3D"Toggle to always expand detail view for =
code analysis on" class=3D"focus-visible:outline-none focus-visible:ring-2 =
focus-visible:ring-token-text-secondary focus-visible:ring-offset-2 focus-v=
isible:radix-state-checked:ring-black focus-visible:dark:ring-token-main-su=
rface-primary focus-visible:dark:radix-state-checked:ring-green-600 cursor-=
pointer bg-gray-200 radix-state-checked:bg-black dark:border dark:border-to=
ken-border-medium dark:bg-transparent relative shrink-0 rounded-full dark:r=
adix-state-checked:border-green-600 dark:radix-state-checked:bg-green-600 h=
-[19px] w-[30px]"><span data-state=3D"checked" class=3D"flex items-center j=
ustify-center rounded-full transition-transform duration-100 will-change-tr=
ansform ltr:translate-x-0.5 rtl:-translate-x-0.5 bg-white h-[15px] w-[15px]=
 ltr:radix-state-checked:translate-x-[13px] rtl:radix-state-checked:transla=
te-x-[-13px]"></span></button></div><span class=3D"" data-state=3D"closed">=
<button class=3D"flex gap-1 items-center select-none py-1"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C2=
2 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2=
 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 1=
7 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.447=
72 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 =
5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg>Copy code</button></span></div></div></div><=
div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pr=
e hljs language-python"><span class=3D"hljs-keyword">from</span> datetime <=
span class=3D"hljs-keyword">import</span> datetime, timedelta
<span class=3D"hljs-keyword">import</span> json

<span class=3D"hljs-comment"># Importing necessary libraries for a Jupyter =
Notebook framework</span>

<span class=3D"hljs-comment"># Notebook Title</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"# C=
ognitive Milestone Framework (CMF)"</span>)

<span class=3D"hljs-comment"># Introduction</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## Introduction
The **Cognitive Milestone Framework (CMF)** is a systematic guide for knowl=
edge workers to develop key cognitive skills,=20
track milestones, and improve decision-making. This notebook combines theor=
etical concepts with functional tools to=20
help you integrate CMF into your daily workflow.

### Objectives
- Strengthen memory and understanding through daily practices.
- Analyze and evaluate tasks critically.
- Track milestones and build habits for long-term success.
- Automate reminders and decision logs for enhanced productivity.
"""</span>)

<span class=3D"hljs-comment"># Section 1: Setting up Cognitive Skills Track=
er</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 1. Cognitive Skills Tracker
Use this section to log daily tasks and associate them with specific cognit=
ive skills (e.g., REMEMBER, UNDERSTAND, etc.).

**Example Use Case**:=20
Log your progress on a project, categorize tasks by cognitive skill, and re=
flect on patterns in your learning process.
"""</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_skill_task</span>(<span class=3D"hljs-params">skill, task</span>):
    <span class=3D"hljs-string">"""Log a cognitive skill and associated tas=
k into a JSON file."""</span>
    log_entry =3D {
        <span class=3D"hljs-string">"skill"</span>: skill,
        <span class=3D"hljs-string">"task"</span>: task,
        <span class=3D"hljs-string">"date"</span>: datetime.now().strftime(=
<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"cognitive_skills_log.json"</span>,=
 <span class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</s=
pan> file:
        json.dump(log_entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Task logged under <span class=3D"hljs-subst">{skill}</span>: <span class=
=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Logging a sample task</span>
log_skill_task(<span class=3D"hljs-string">"REMEMBER"</span>, <span class=
=3D"hljs-string">"Reviewed project requirements and memorized key objective=
s."</span>)

<span class=3D"hljs-comment"># Section 2: Milestone Tracker</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 2. Milestone Tracker
Track your long-term milestones and progress in achieving breakthroughs.

**Example Use Case**:
Set a milestone to complete a significant deliverable (e.g., writing a repo=
rt) and update the status regularly.
"""</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>=
):
    <span class=3D"hljs-string">"""Log a milestone and its status into a JS=
ON file."""</span>
    data =3D {<span class=3D"hljs-string">"milestone"</span>: milestone, <s=
pan class=3D"hljs-string">"status"</span>: status, <span class=3D"hljs-stri=
ng">"timestamp"</span>: datetime.now().strftime(<span class=3D"hljs-string"=
>"%Y-%m-%d %H:%M:%S"</span>)}
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"milestones.json"</span>, <span cla=
ss=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> file:
        json.dump(data, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Milestone logged: <span class=3D"hljs-subst">{milestone}</span> - <span c=
lass=3D"hljs-subst">{status}</span>"</span>)

<span class=3D"hljs-comment"># Logging a sample milestone</span>
log_milestone(<span class=3D"hljs-string">"Complete first draft of research=
 report"</span>, <span class=3D"hljs-string">"In Progress"</span>)

<span class=3D"hljs-comment"># Section 3: Habit Reminder System</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 3. Habit Reminder System
Set reminders for important routines and habits to stay on track.

**Example Use Case**:
Schedule a daily reflection session to review the day's achievements and pl=
an the next day's tasks.
"""</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">schedule_reminder</span>(<span class=3D"hljs-params">task, delay_minutes<=
/span>):
    <span class=3D"hljs-string">"""Set a reminder for a specific task after=
 a delay in minutes."""</span>
    now =3D datetime.now()
    reminder_time =3D now + timedelta(minutes=3Ddelay_minutes)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reminder set for: <span class=3D"hljs-subst">{reminder_time.strftime(<spa=
n class=3D"hljs-string">'%H:%M:%S'</span>)}</span>"</span>)
    time.sleep(delay_minutes * <span class=3D"hljs-number">60</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Time to: <span class=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># For demonstration, we'll skip execution of t=
ime.sleep in this notebook.</span>

<span class=3D"hljs-comment"># Section 4: Reflection and Decision Logs</spa=
n>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 4. Reflection and Decision Logs
Maintain logs of key reflections and decisions to build a record of learnin=
g and growth.

**Example Use Case**:
Log the pros and cons of a decision, the chosen option, and its outcome.
"""</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_reflection</span>(<span class=3D"hljs-params">reflection</span>):
    <span class=3D"hljs-string">"""Log a reflection entry into a JSON file.=
"""</span>
    entry =3D {
        <span class=3D"hljs-string">"reflection"</span>: reflection,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"reflection_logs.json"</span>, <spa=
n class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> =
file:
        json.dump(entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reflection logged: <span class=3D"hljs-subst">{reflection}</span>"</span>=
)

<span class=3D"hljs-comment"># Logging a sample reflection</span>
log_reflection(<span class=3D"hljs-string">"Analyzed the outcomes of my pro=
ject and identified key areas for improvement."</span>)

<span class=3D"hljs-comment"># Section 5: Combining It All</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 5. Combining It All: Daily Workflow
Integrate all functions into a cohesive daily workflow.

### Example Workflow:
1. **Morning**:
   - Use the Habit Reminder System to schedule learning activities.
   - Log tasks under cognitive skills (e.g., remember and understand).

2. **Mid-Day**:
   - Use the milestone tracker to assess progress on significant goals.

3. **Evening**:
   - Reflect on the day's activities and log key decisions.
   - Update milestones and set habits for the next day.
"""</span>)

<span class=3D"hljs-comment"># Sample Workflow Code</span>

<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
### Workflow Sample Code:
# Morning Task
log_skill_task("UNDERSTAND", "Read and summarized key concepts from a book.=
")

# Mid-Day Milestone Check
log_milestone("Submit project proposal", "Completed")

# Evening Reflection
log_reflection("Reflected on today's tasks and identified improvement areas=
.")
"""</span>)

<span class=3D"hljs-comment"># Section 6: Summary</span>
<span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">"""
## 6. Summary
This notebook provides a structured framework to enhance your cognitive and=
 decision-making skills. By using these tools:
- You can systematically track and improve your learning habits.
- Maintain a clear record of progress and reflections.
- Build consistency through habit reminders.

**Next Steps**:
1. Start by logging your first task or reflection.
2. Set a milestone for the week.
3. Use the habit reminder system to build daily practices.

Happy learning and growing!
"""</span>)
</code></div></div></pre></div><div class=3D"bg-gray-700 p-4 text-xs"><div =
class=3D"mb-1 text-gray-400">STDOUT/STDERR</div><div class=3D"prose flex fl=
ex-col-reverse text-white"><pre class=3D"shrink-0"><span class=3D""># Cogni=
tive Milestone Framework (CMF)

## Introduction
The **Cognitive Milestone Framework (CMF)** is a systematic guide for knowl=
edge workers to develop key cognitive skills,=20
track milestones, and improve decision-making. This notebook combines theor=
etical concepts with functional tools to=20
help you integrate CMF into your daily workflow.

### Objectives
- Strengthen memory and understanding through daily practices.
- Analyze and evaluate tasks critically.
- Track milestones and build habits for long-term success.
- Automate reminders and decision logs for enhanced productivity.


## 1. Cognitive Skills Tracker
Use this section to log daily tasks and associate them with specific cognit=
ive skills (e.g., REMEMBER, UNDERSTAND, etc.).

**Example Use Case**:=20
Log your progress on a project, categorize tasks by cognitive skill, and re=
flect on patterns in your learning process.

Task logged under REMEMBER: Reviewed project requirements and memorized key=
 objectives.

## 2. Milestone Tracker
Track your long-term milestones and progress in achieving breakthroughs.

**Example Use Case**:
Set a milestone to complete a significant deliverable (e.g., writing a repo=
rt) and update the status regularly.

Milestone logged: Complete first draft of research report - In Progress

## 3. Habit Reminder System
Set reminders for important routines and habits to stay on track.

**Example Use Case**:
Schedule a daily reflection session to review the day's achievements and pl=
an the next day's tasks.


## 4. Reflection and Decision Logs
Maintain logs of key reflections and decisions to build a record of learnin=
g and growth.

**Example Use Case**:
Log the pros and cons of a decision, the chosen option, and its outcome.

Reflection logged: Analyzed the outcomes of my project and identified key a=
reas for improvement.

## 5. Combining It All: Daily Workflow
Integrate all functions into a cohesive daily workflow.

### Example Workflow:
1. **Morning**:
   - Use the Habit Reminder System to schedule learning activities.
   - Log tasks under cognitive skills (e.g., remember and understand).

2. **Mid-Day**:
   - Use the milestone tracker to assess progress on significant goals.

3. **Evening**:
   - Reflect on the day's activities and log key decisions.
   - Update milestones and set habits for the next day.


### Workflow Sample Code:
# Morning Task
log_skill_task("UNDERSTAND", "Read and summarized key concepts from a book.=
")

# Mid-Day Milestone Check
log_milestone("Submit project proposal", "Completed")

# Evening Reflection
log_reflection("Reflected on today's tasks and identified improvement areas=
.")


## 6. Summary
This notebook provides a structured framework to enhance your cognitive and=
 decision-making skills. By using these tools:
- You can systematically track and improve your learning habits.
- Maintain a clear record of progress and reflections.
- Build consistency through habit reminders.

**Next Steps**:
1. Start by logging your first task or reflection.
2. Set a milestone for the week.
3. Use the habit reminder system to build daily practices.

Happy learning and growing!

</span></pre></div></div></div></div><div data-message-author-role=3D"assis=
tant" data-message-id=3D"e70490a8-93af-45c0-bcf2-d8d95a0db8cd" dir=3D"auto"=
 class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 whitesp=
ace-normal break-words [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert da=
rk"><p>This notebook is a complete <strong>Cognitive Milestone Framework (C=
MF)</strong> for knowledge workers, integrating practical tools and workflo=
ws to develop and track cognitive skills. It provides a step-by-step system=
 to:</p><ol><li><strong>Log Tasks by Cognitive Skills</strong>: Use functio=
ns to track daily learning and skill application.</li><li><strong>Track Mil=
estones</strong>: Define and monitor significant milestones with automated =
logging.</li><li><strong>Reflect and Evaluate</strong>: Maintain structured=
 logs for decision-making and learning reflections.</li><li><strong>Automat=
e Habits</strong>: Schedule reminders for daily habits to stay consistent w=
ith routines.</li></ol><p>You can now use this framework interactively in y=
our Jupyter environment to organize and optimize your learning and producti=
vity. Let me know if you'd like the files packaged into a complete reposito=
ry or additional customization! =E2=80=8B<span class=3D"" data-state=3D"clo=
sed"><button><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 19 15=
" fill=3D"none" class=3D"-mt-0.5 ml-0.5 inline-block text-token-link hover:=
text-token-link-hover" width=3D"19" height=3D"15"><path d=3D"M4.42 0.75H2.8=
625H2.75C1.64543 0.75 0.75 1.64543 0.75 2.75V11.65C0.75 12.7546 1.64543 13.=
65 2.75 13.65H2.8625C2.8625 13.65 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.=
00751 13.65 4.42 13.65M13.98 13.65H15.5375H15.65C16.7546 13.65 17.65 12.754=
6 17.65 11.65V2.75C17.65 1.64543 16.7546 0.75 15.65 0.75H15.5375H13.98" str=
oke=3D"currentColor" stroke-width=3D"1.5" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path><path d=3D"M5.55283 4.21963C5.25993 3.92674 4.7850=
6 3.92674 4.49217 4.21963C4.19927 4.51252 4.19927 4.9874 4.49217 5.28029L6.=
36184 7.14996L4.49217 9.01963C4.19927 9.31252 4.19927 9.7874 4.49217 10.080=
3C4.78506 10.3732 5.25993 10.3732 5.55283 10.0803L7.95283 7.68029C8.24572 7=
.3874 8.24572 6.91252 7.95283 6.61963L5.55283 4.21963Z" fill=3D"currentColo=
r" stroke=3D"currentColor" stroke-width=3D"0.2" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M9.77753 8.75003C9.3357 8.75003 8=
.97753 9.10821 8.97753 9.55003C8.97753 9.99186 9.3357 10.35 9.77753 10.35H1=
3.2775C13.7194 10.35 14.0775 9.99186 14.0775 9.55003C14.0775 9.10821 13.719=
4 8.75003 13.2775 8.75003H9.77753Z" fill=3D"currentColor" stroke=3D"current=
Color" stroke-width=3D"0.1"></path></svg></button></span>=E2=80=8B</p></div=
></div></div></div><div class=3D"mb-2 flex gap-3 empty:hidden -ml-2"><div c=
lass=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-=
surface-primary md:absolute md:sr-only"><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary" aria-label=3D"Read a=
loud" data-testid=3D"voice-play-turn-action-button"><span class=3D"flex h-[=
30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.=
49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.000=
05V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.262=
9L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.0=
6701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403=
 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2=
.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6=
.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.999=
6 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 2=
0.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1=
962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064=
 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM1=
5.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.1859=
3 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 1=
5.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4=
632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C=
16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.2=
3218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button><=
/span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary" aria-label=
=3D"Copy" data-testid=3D"copy-turn-action-button"><span class=3D"flex h-[30=
px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg></span></button></span><span class=3D"hidden"></span><spa=
n class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r10=
b:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" cl=
ass=3D"cursor-pointer h-[30px] rounded-md px-1 text-token-text-secondary ho=
ver:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M3.06957 10.87=
63C3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439=
V4C18.0118 3.44772 18.4595 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V=
8C20.0118 8.55228 19.5641 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.447=
72 14.4477 7 15 7H16.9571C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 =
7.67174 5.0542 11.1237C4.98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39=
011 11.924 3.00123 11.4243 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 =
20.9988 12.5757 20.9304 13.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21=
 7.60762 20.1535 5.99999 18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4=
.44771 21 3.99999 20.5523 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 =
15H8.99999C9.55228 15 9.99999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17=
 8.99999 17H7.04285C8.32433 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.=
3283 18.9458 12.8763C19.0141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=
=3D"currentColor"></path></svg><span class=3D"overflow-hidden text-clip whi=
tespace-nowrap text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;=
 will-change: opacity;">4o</span><svg width=3D"24" height=3D"24" viewBox=3D=
"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"ico=
n-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.292=
89C5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.292=
89C17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 =
10.3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11=
.7348 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.=
90237 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></div></=
button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></d=
iv></div></div></article><article class=3D"w-full scroll-mb-[var(--thread-t=
railing-height,150px)] text-token-text-primary focus-visible:outline-2 focu=
s-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-t=
urn-10" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><d=
iv class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 =
xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-=
6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col =
gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data=
-message-author-role=3D"user" data-message-id=3D"bbb2187d-782a-4208-9910-20=
6b7f64a3cf" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col=
 items-end gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[70%] rounded-3xl bg-token-message-surfa=
ce px-5 py-2.5"><div class=3D"whitespace-pre-wrap">Display the notebook in =
a code block </div><div class=3D"absolute bottom-0 right-full top-0 -mr-3.5=
 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:block"><span clas=
s=3D"" data-state=3D"closed"><button aria-label=3D"Edit message" class=3D"f=
lex h-9 w-9 items-center justify-center rounded-full text-token-text-second=
ary transition hover:bg-token-main-surface-tertiary"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.47=
84 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.6135 18.8007C=
10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.9864C3.84585 21.=
0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 20.1542 3.0136=
2 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 12.3865L13.29=
29 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 14.8121 5.775=
67 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.75719 17.8286 =
10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.=
70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.28=
31 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)=
] text-token-text-primary focus-visible:outline-2 focus-visible:outline-off=
set-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-11" data-scroll-a=
nchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"m-aut=
o text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col =
relative items-end"><div><div class=3D"pt-0"><div class=3D"gizmo-bot-avatar=
 flex h-8 w-8 items-center justify-center overflow-hidden rounded-full"><di=
v class=3D"relative p-1 rounded-sm flex items-center justify-center bg-toke=
n-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" h=
eight=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Cha=
tGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9=
886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 =
33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.850=
78C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 =
0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C=
10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.34=
14 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 1=
4.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3=
.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.725=
6 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36=
.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.07=
86 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C=
24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.=
5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 =
30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0=
789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.884=
9C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36=
.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813=
 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20=
.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 =
21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6=
841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5139=
7 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5=
.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902=
C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.73=
21 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 =
24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.=
4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.171=
56 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 =
8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48=
312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C=
15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.=
516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289=
 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22=
.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.47=
87C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 =
17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.48=
32 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 =
33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.=
3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 =
32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9=
142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 1=
0.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9=
982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048=
 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28=
.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.409=
39 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 =
15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10=
.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.81=
07 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 =
15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35=
876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 =
4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.=
3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.999=
1L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17=
.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><d=
iv class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col a=
gent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-=
full flex-col flex-grow"><div data-message-author-role=3D"assistant" data-m=
essage-id=3D"96625ade-e1e9-4ff7-a9b8-a9efdc87fdb2" dir=3D"auto" class=3D"mi=
n-h-8 text-message flex w-full flex-col items-end gap-2 whitespace-normal b=
reak-words [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><=
div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div c=
lass=3D"markdown prose w-full break-words dark:prose-invert dark"><pre clas=
s=3D"!overflow-visible"><div class=3D"contain-inline-size rounded-md border=
-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-prima=
ry dark:bg-gray-950"><div class=3D"flex items-center text-token-text-second=
ary px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token-s=
idebar-surface-primary dark:bg-token-main-surface-secondary select-none">py=
thon</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolu=
te bottom-0 right-2 flex h-9 items-center"><div class=3D"flex items-center =
rounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-=
text-secondary dark:bg-token-main-surface-secondary"><span class=3D"" data-=
state=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></d=
iv></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-comment"># Co=
gnitive Milestone Framework (CMF)</span>

<span class=3D"hljs-comment">## Introduction</span>
<span class=3D"hljs-string">"""
The Cognitive Milestone Framework (CMF) is a systematic guide for knowledge=
 workers to develop key cognitive skills,=20
track milestones, and improve decision-making. This notebook combines theor=
etical concepts with functional tools to=20
help you integrate CMF into your daily workflow.

Objectives:
- Strengthen memory and understanding through daily practices.
- Analyze and evaluate tasks critically.
- Track milestones and build habits for long-term success.
- Automate reminders and decision logs for enhanced productivity.
"""</span>

<span class=3D"hljs-comment"># Section 1: Cognitive Skills Tracker</span>
<span class=3D"hljs-string">"""
## 1. Cognitive Skills Tracker
Use this section to log daily tasks and associate them with specific cognit=
ive skills (e.g., REMEMBER, UNDERSTAND, etc.).

Example Use Case:=20
Log your progress on a project, categorize tasks by cognitive skill, and re=
flect on patterns in your learning process.
"""</span>

<span class=3D"hljs-keyword">import</span> json
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime, timedelta
<span class=3D"hljs-keyword">import</span> time

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_skill_task</span>(<span class=3D"hljs-params">skill, task</span>):
    <span class=3D"hljs-string">"""Log a cognitive skill and associated tas=
k into a JSON file."""</span>
    log_entry =3D {
        <span class=3D"hljs-string">"skill"</span>: skill,
        <span class=3D"hljs-string">"task"</span>: task,
        <span class=3D"hljs-string">"date"</span>: datetime.now().strftime(=
<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"cognitive_skills_log.json"</span>,=
 <span class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</s=
pan> file:
        json.dump(log_entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Task logged under <span class=3D"hljs-subst">{skill}</span>: <span class=
=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a task</span>
log_skill_task(<span class=3D"hljs-string">"REMEMBER"</span>, <span class=
=3D"hljs-string">"Reviewed project requirements and memorized key objective=
s."</span>)

<span class=3D"hljs-comment"># Section 2: Milestone Tracker</span>
<span class=3D"hljs-string">"""
## 2. Milestone Tracker
Track your long-term milestones and progress in achieving breakthroughs.

Example Use Case:
Set a milestone to complete a significant deliverable (e.g., writing a repo=
rt) and update the status regularly.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>=
):
    <span class=3D"hljs-string">"""Log a milestone and its status into a JS=
ON file."""</span>
    data =3D {<span class=3D"hljs-string">"milestone"</span>: milestone, <s=
pan class=3D"hljs-string">"status"</span>: status, <span class=3D"hljs-stri=
ng">"timestamp"</span>: datetime.now().strftime(<span class=3D"hljs-string"=
>"%Y-%m-%d %H:%M:%S"</span>)}
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"milestones.json"</span>, <span cla=
ss=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> file:
        json.dump(data, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Milestone logged: <span class=3D"hljs-subst">{milestone}</span> - <span c=
lass=3D"hljs-subst">{status}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a milestone</span>
log_milestone(<span class=3D"hljs-string">"Complete first draft of research=
 report"</span>, <span class=3D"hljs-string">"In Progress"</span>)

<span class=3D"hljs-comment"># Section 3: Habit Reminder System</span>
<span class=3D"hljs-string">"""
## 3. Habit Reminder System
Set reminders for important routines and habits to stay on track.

Example Use Case:
Schedule a daily reflection session to review the day's achievements and pl=
an the next day's tasks.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">schedule_reminder</span>(<span class=3D"hljs-params">task, delay_minutes<=
/span>):
    <span class=3D"hljs-string">"""Set a reminder for a specific task after=
 a delay in minutes."""</span>
    now =3D datetime.now()
    reminder_time =3D now + timedelta(minutes=3Ddelay_minutes)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reminder set for: <span class=3D"hljs-subst">{reminder_time.strftime(<spa=
n class=3D"hljs-string">'%H:%M:%S'</span>)}</span>"</span>)
    time.sleep(delay_minutes * <span class=3D"hljs-number">60</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Time to: <span class=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Scheduling a reminder (commented ou=
t to avoid delay in notebook)</span>
<span class=3D"hljs-comment"># schedule_reminder("Reflect on today's learni=
ng", 10)</span>

<span class=3D"hljs-comment"># Section 4: Reflection and Decision Logs</spa=
n>
<span class=3D"hljs-string">"""
## 4. Reflection and Decision Logs
Maintain logs of key reflections and decisions to build a record of learnin=
g and growth.

Example Use Case:
Log the pros and cons of a decision, the chosen option, and its outcome.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_reflection</span>(<span class=3D"hljs-params">reflection</span>):
    <span class=3D"hljs-string">"""Log a reflection entry into a JSON file.=
"""</span>
    entry =3D {
        <span class=3D"hljs-string">"reflection"</span>: reflection,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"reflection_logs.json"</span>, <spa=
n class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> =
file:
        json.dump(entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reflection logged: <span class=3D"hljs-subst">{reflection}</span>"</span>=
)

<span class=3D"hljs-comment"># Example: Logging a reflection</span>
log_reflection(<span class=3D"hljs-string">"Analyzed the outcomes of my pro=
ject and identified key areas for improvement."</span>)

<span class=3D"hljs-comment"># Section 5: Combining It All</span>
<span class=3D"hljs-string">"""
## 5. Combining It All: Daily Workflow
Integrate all functions into a cohesive daily workflow.

Example Workflow:
1. **Morning**:
   - Use the Habit Reminder System to schedule learning activities.
   - Log tasks under cognitive skills (e.g., remember and understand).

2. **Mid-Day**:
   - Use the milestone tracker to assess progress on significant goals.

3. **Evening**:
   - Reflect on the day's activities and log key decisions.
   - Update milestones and set habits for the next day.

### Workflow Sample Code:
# Morning Task
log_skill_task("UNDERSTAND", "Read and summarized key concepts from a book.=
")

# Mid-Day Milestone Check
log_milestone("Submit project proposal", "Completed")

# Evening Reflection
log_reflection("Reflected on today's tasks and identified improvement areas=
.")
"""</span>

<span class=3D"hljs-comment"># Section 6: Summary</span>
<span class=3D"hljs-string">"""
## 6. Summary
This notebook provides a structured framework to enhance your cognitive and=
 decision-making skills. By using these tools:
- You can systematically track and improve your learning habits.
- Maintain a clear record of progress and reflections.
- Build consistency through habit reminders.

Next Steps:
1. Start by logging your first task or reflection.
2. Set a milestone for the week.
3. Use the habit reminder system to build daily practices.

Happy learning and growing!
"""</span>
</code></div></div></pre></div></div></div></div><div class=3D"mb-2 flex ga=
p-3 empty:hidden -ml-2"><div class=3D"items-center justify-start rounded-xl=
 p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:sr-only"><div =
class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button =
class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-s=
econdary" aria-label=3D"Read aloud" data-testid=3D"voice-play-turn-action-b=
utton"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1=
621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44=
772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6=
.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 1=
1 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0=
902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.=
6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.067=
01ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 =
8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7=
323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896=
 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12=
.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.83=
12 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 1=
7.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3=
127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539=
 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.=
4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.3006=
3C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"><=
/path></svg></span></button></span><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary" aria-label=3D"Copy" data-testid=3D"copy-turn-action-button=
"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3=
.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 2=
2H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.656=
9 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523=
 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.=
5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9=
 14 9H5Z" fill=3D"currentColor"></path></svg></span></button></span><span c=
lass=3D"hidden"></span><span class=3D"" data-state=3D"closed"><button type=
=3D"button" id=3D"radix-:r10i:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed" class=3D"cursor-pointer h-[30px] rounded-md px-1 =
text-token-text-secondary hover:bg-token-main-surface-secondary"><div class=
=3D"flex items-center pb-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 =
24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"=
><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.40=
28 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.4595 3 19.0118 3C19.5641 3 =
20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641 9 19.0118 9H15C14.4477 =
9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571C15.6757 5.76379 13.9101=
 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.98586 11.6718 4.48619 12=
.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.4243 3.06957 10.8763ZM20.06=
18 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 13.1237C20.3767 17.5644 1=
6.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 18.7559V20C5.99999 20.55=
23 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523 3.99999 20V16C3.99999 1=
5.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.99999 15.4477 9.99999 16C=
9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.32433 18.2362 10.0899 19 12=
 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0141 12.3282 19.5138 11.9=
393 20.0618 12.0077Z" fill=3D"currentColor"></path></svg><span class=3D"ove=
rflow-hidden text-clip whitespace-nowrap text-sm" style=3D"opacity: 0; padd=
ing-left: 0px; width: 0px; will-change: opacity;">4o</span><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711 9.2928=
9L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071 9.2928=
9C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12.5196 1=
6.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5.29289 =
10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"currentCo=
lor"></path></svg></div></button></span></div></div></div><div class=3D"pr-=
2 lg:pr-0"></div></div></div></div></div></article><article class=3D"w-full=
 scroll-mb-[var(--thread-trailing-height,150px)] text-token-text-primary fo=
cus-visible:outline-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" dat=
a-testid=3D"conversation-turn-12" data-scroll-anchor=3D"false"><h5 class=3D=
"sr-only">You said:</h5><div class=3D"m-auto text-base py-[18px] px-3 md:px=
-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 =
text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fle=
x-col flex-grow"><div data-message-author-role=3D"user" data-message-id=3D"=
bbb2104b-6e2f-47e8-a26d-01b908ca7ec0" dir=3D"auto" class=3D"min-h-8 text-me=
ssage flex w-full flex-col items-end gap-2 whitespace-normal break-words [.=
text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hi=
dden items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-=
3xl bg-token-message-surface px-5 py-2.5"><div class=3D"whitespace-pre-wrap=
">Make the code functional in the notebook </div><div class=3D"absolute bot=
tom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation-turn:=
hover_&amp;]:block"><span class=3D"" data-state=3D"closed"><button aria-lab=
el=3D"Edit message" class=3D"flex h-9 w-9 items-center justify-center round=
ed-full text-token-text-secondary transition hover:bg-token-main-surface-te=
rtiary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.935=
9 2.52167 19.7071 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7071L18=
.7073 11.7069L11.6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999 20.19=
71L4.16441 20.9864C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.06454 =
20.4788 2.96053 20.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243=
 13.1234 5.19932 12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714=
 14.2428 5.87846 14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2244C9.=
18795 18.1216 9.75719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5=
858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929=
 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div></di=
v></div></div></div></div></article><article class=3D"w-full scroll-mb-[var=
(--thread-trailing-height,150px)] text-token-text-primary focus-visible:out=
line-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"con=
versation-turn-13" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatG=
PT said:</h6><div class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full m=
d:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base m=
d:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=
=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0=
"><div class=3D"gizmo-bot-avatar flex h-8 w-8 items-center justify-center o=
verflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm flex ite=
ms-center justify-center bg-token-main-surface-primary text-token-text-prim=
ary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><=
text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9=
808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076=
 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.629=
41 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1=
.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 =
14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47=
815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 1=
1.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.=
944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.902=
6 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 3=
4.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.97=
89 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 =
21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.=
5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.816=
7 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8=
458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544=
 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 3=
6.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.100=
3 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26=
.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.965=
6 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.=
375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978=
 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5=
.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.84=
08 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7=
248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C=
24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.=
7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.3922=
7 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C=
8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25=
334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404=
L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.=
5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135=
 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.=
29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.48=
72 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 =
12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3=
194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 =
35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.=
5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328=
 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0=
128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 1=
0.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7=
963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837=
 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25=
.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.780=
77 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 =
12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10=
.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.92=
54 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C=
12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.9=
9464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427=
 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.=
5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.717=
5L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L2=
0.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg>=
</div></div></div></div></div><div class=3D"group/conversation-turn relativ=
e flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:=
gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-message-=
author-role=3D"assistant" data-message-id=3D"91dc8013-f731-4240-9bc0-d69a95=
144ad4" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col ite=
ms-end gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5" data=
-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden first:pt-[3px]"><div class=3D"markdown prose w-full break-words d=
ark:prose-invert dark"><p>Here is the complete, functional Jupyter Notebook=
 code that brings together the <strong>Cognitive Milestone Framework (CMF)<=
/strong>. You can run this code directly in a Jupyter Notebook environment =
to use the framework.</p><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-comment"># Cognitive Milestone Framework (CMF)</span>

<span class=3D"hljs-comment">## Introduction</span>
<span class=3D"hljs-string">"""
The Cognitive Milestone Framework (CMF) is a systematic guide for knowledge=
 workers to develop key cognitive skills,=20
track milestones, and improve decision-making. This notebook combines theor=
etical concepts with functional tools to=20
help you integrate CMF into your daily workflow.

Objectives:
- Strengthen memory and understanding through daily practices.
- Analyze and evaluate tasks critically.
- Track milestones and build habits for long-term success.
- Automate reminders and decision logs for enhanced productivity.
"""</span>

<span class=3D"hljs-comment"># Import necessary libraries</span>
<span class=3D"hljs-keyword">import</span> json
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime, timedelta
<span class=3D"hljs-keyword">import</span> time

<span class=3D"hljs-comment"># Section 1: Cognitive Skills Tracker</span>
<span class=3D"hljs-string">"""
## 1. Cognitive Skills Tracker
Use this section to log daily tasks and associate them with specific cognit=
ive skills (e.g., REMEMBER, UNDERSTAND, etc.).

Example Use Case:=20
Log your progress on a project, categorize tasks by cognitive skill, and re=
flect on patterns in your learning process.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_skill_task</span>(<span class=3D"hljs-params">skill, task</span>):
    <span class=3D"hljs-string">"""Log a cognitive skill and associated tas=
k into a JSON file."""</span>
    log_entry =3D {
        <span class=3D"hljs-string">"skill"</span>: skill,
        <span class=3D"hljs-string">"task"</span>: task,
        <span class=3D"hljs-string">"date"</span>: datetime.now().strftime(=
<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"cognitive_skills_log.json"</span>,=
 <span class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</s=
pan> file:
        json.dump(log_entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Task logged under <span class=3D"hljs-subst">{skill}</span>: <span class=
=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a task</span>
log_skill_task(<span class=3D"hljs-string">"REMEMBER"</span>, <span class=
=3D"hljs-string">"Reviewed project requirements and memorized key objective=
s."</span>)

<span class=3D"hljs-comment"># Section 2: Milestone Tracker</span>
<span class=3D"hljs-string">"""
## 2. Milestone Tracker
Track your long-term milestones and progress in achieving breakthroughs.

Example Use Case:
Set a milestone to complete a significant deliverable (e.g., writing a repo=
rt) and update the status regularly.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>=
):
    <span class=3D"hljs-string">"""Log a milestone and its status into a JS=
ON file."""</span>
    data =3D {<span class=3D"hljs-string">"milestone"</span>: milestone, <s=
pan class=3D"hljs-string">"status"</span>: status, <span class=3D"hljs-stri=
ng">"timestamp"</span>: datetime.now().strftime(<span class=3D"hljs-string"=
>"%Y-%m-%d %H:%M:%S"</span>)}
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"milestones.json"</span>, <span cla=
ss=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> file:
        json.dump(data, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Milestone logged: <span class=3D"hljs-subst">{milestone}</span> - <span c=
lass=3D"hljs-subst">{status}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a milestone</span>
log_milestone(<span class=3D"hljs-string">"Complete first draft of research=
 report"</span>, <span class=3D"hljs-string">"In Progress"</span>)

<span class=3D"hljs-comment"># Section 3: Habit Reminder System</span>
<span class=3D"hljs-string">"""
## 3. Habit Reminder System
Set reminders for important routines and habits to stay on track.

Example Use Case:
Schedule a daily reflection session to review the day's achievements and pl=
an the next day's tasks.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">schedule_reminder</span>(<span class=3D"hljs-params">task, delay_minutes<=
/span>):
    <span class=3D"hljs-string">"""Set a reminder for a specific task after=
 a delay in minutes."""</span>
    now =3D datetime.now()
    reminder_time =3D now + timedelta(minutes=3Ddelay_minutes)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reminder set for: <span class=3D"hljs-subst">{reminder_time.strftime(<spa=
n class=3D"hljs-string">'%H:%M:%S'</span>)}</span>"</span>)
    time.sleep(delay_minutes * <span class=3D"hljs-number">60</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Time to: <span class=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Scheduling a reminder (commented ou=
t to avoid delay in notebook)</span>
<span class=3D"hljs-comment"># schedule_reminder("Reflect on today's learni=
ng", 10)</span>

<span class=3D"hljs-comment"># Section 4: Reflection and Decision Logs</spa=
n>
<span class=3D"hljs-string">"""
## 4. Reflection and Decision Logs
Maintain logs of key reflections and decisions to build a record of learnin=
g and growth.

Example Use Case:
Log the pros and cons of a decision, the chosen option, and its outcome.
"""</span>

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_reflection</span>(<span class=3D"hljs-params">reflection</span>):
    <span class=3D"hljs-string">"""Log a reflection entry into a JSON file.=
"""</span>
    entry =3D {
        <span class=3D"hljs-string">"reflection"</span>: reflection,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"reflection_logs.json"</span>, <spa=
n class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> =
file:
        json.dump(entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reflection logged: <span class=3D"hljs-subst">{reflection}</span>"</span>=
)

<span class=3D"hljs-comment"># Example: Logging a reflection</span>
log_reflection(<span class=3D"hljs-string">"Analyzed the outcomes of my pro=
ject and identified key areas for improvement."</span>)

<span class=3D"hljs-comment"># Section 5: Combining It All</span>
<span class=3D"hljs-string">"""
## 5. Combining It All: Daily Workflow
Integrate all functions into a cohesive daily workflow.

Example Workflow:
1. **Morning**:
   - Use the Habit Reminder System to schedule learning activities.
   - Log tasks under cognitive skills (e.g., remember and understand).

2. **Mid-Day**:
   - Use the milestone tracker to assess progress on significant goals.

3. **Evening**:
   - Reflect on the day's activities and log key decisions.
   - Update milestones and set habits for the next day.

### Workflow Sample Code:
# Morning Task
log_skill_task("UNDERSTAND", "Read and summarized key concepts from a book.=
")

# Mid-Day Milestone Check
log_milestone("Submit project proposal", "Completed")

# Evening Reflection
log_reflection("Reflected on today's tasks and identified improvement areas=
.")
"""</span>

<span class=3D"hljs-comment"># Sample Workflow Execution</span>
<span class=3D"hljs-comment"># Morning</span>
log_skill_task(<span class=3D"hljs-string">"UNDERSTAND"</span>, <span class=
=3D"hljs-string">"Read and summarized key concepts from a book."</span>)

<span class=3D"hljs-comment"># Mid-Day</span>
log_milestone(<span class=3D"hljs-string">"Submit project proposal"</span>,=
 <span class=3D"hljs-string">"Completed"</span>)

<span class=3D"hljs-comment"># Evening</span>
log_reflection(<span class=3D"hljs-string">"Reflected on today's tasks and =
identified improvement areas."</span>)

<span class=3D"hljs-comment"># Section 6: Summary</span>
<span class=3D"hljs-string">"""
## 6. Summary
This notebook provides a structured framework to enhance your cognitive and=
 decision-making skills. By using these tools:
- You can systematically track and improve your learning habits.
- Maintain a clear record of progress and reflections.
- Build consistency through habit reminders.

Next Steps:
1. Start by logging your first task or reflection.
2. Set a milestone for the week.
3. Use the habit reminder system to build daily practices.

Happy learning and growing!
"""</span>
</code></div></div></pre><h3>Instructions to Use</h3><ol><li>Copy this code=
 into a Jupyter Notebook.</li><li>Run each section sequentially.</li><li>Mo=
dify function inputs (e.g., skill, task, milestone, reflection) to customiz=
e for your needs.</li><li>Access generated JSON logs (<code>cognitive_skill=
s_log.json</code>, <code>milestones.json</code>, and <code>reflection_logs.=
json</code>) for insights into your progress.</li></ol><p>Feel free to adap=
t this further for your workflow! Let me know if you need additional functi=
onality or enhancements.</p></div></div></div></div><div class=3D"mb-2 flex=
 gap-3 empty:hidden -ml-2"><div class=3D"items-center justify-start rounded=
-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:sr-only"><d=
iv class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surfac=
e-secondary" aria-label=3D"Read aloud" data-testid=3D"voice-play-turn-actio=
n-button"><span class=3D"flex h-[30px] w-[30px] items-center justify-center=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 1=
0.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3=
.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 1=
6 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.525=
2 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V1=
9.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 =
16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.=
06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.51=
91 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 2=
1.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2=
896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996=
 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19=
.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.6578=
9 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 1=
3.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0=
539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 =
16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.3=
0063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor=
"></path></svg></span></button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main=
-surface-secondary" aria-label=3D"Copy" data-testid=3D"copy-turn-action-but=
ton"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></span></button></span><spa=
n class=3D"hidden"></span><span class=3D"" data-state=3D"closed"><button ty=
pe=3D"button" id=3D"radix-:r10p:" aria-haspopup=3D"menu" aria-expanded=3D"f=
alse" data-state=3D"closed" class=3D"cursor-pointer h-[30px] rounded-md px-=
1 text-token-text-secondary hover:bg-token-main-surface-secondary"><div cla=
ss=3D"flex items-center pb-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d"><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.=
4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.4595 3 19.0118 3C19.5641 =
3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641 9 19.0118 9H15C14.447=
7 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571C15.6757 5.76379 13.91=
01 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.98586 11.6718 4.48619 =
12.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.4243 3.06957 10.8763ZM20.=
0618 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 13.1237C20.3767 17.5644=
 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 18.7559V20C5.99999 20.=
5523 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523 3.99999 20V16C3.99999=
 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.99999 15.4477 9.99999 1=
6C9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.32433 18.2362 10.0899 19 =
12 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0141 12.3282 19.5138 11=
.9393 20.0618 12.0077Z" fill=3D"currentColor"></path></svg><span class=3D"o=
verflow-hidden text-clip whitespace-nowrap text-sm" style=3D"opacity: 0; pa=
dding-left: 0px; width: 0px; will-change: opacity;">4o</span><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711 9.29=
289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071 9.29=
289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12.5196=
 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5.2928=
9 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"current=
Color"></path></svg></div></button></span></div></div></div><div class=3D"p=
r-2 lg:pr-0"></div></div></div></div></div></article><article class=3D"w-fu=
ll scroll-mb-[var(--thread-trailing-height,150px)] text-token-text-primary =
focus-visible:outline-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" d=
ata-testid=3D"conversation-turn-14" data-scroll-anchor=3D"false"><h5 class=
=3D"sr-only">You said:</h5><div class=3D"m-auto text-base py-[18px] px-3 md=
:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap=
-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48re=
m]"><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex=
-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col flex-grow"><div data-message-author-role=3D"user" data-message-id=
=3D"bbb213fb-3596-446f-8f8b-f28cf6c349b8" dir=3D"auto" class=3D"min-h-8 tex=
t-message flex w-full flex-col items-end gap-2 whitespace-normal break-word=
s [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empt=
y:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] roun=
ded-3xl bg-token-message-surface px-5 py-2.5"><div class=3D"whitespace-pre-=
wrap">Enforce the notebook format on the content </div><div class=3D"absolu=
te bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation=
-turn:hover_&amp;]:block"><span class=3D"" data-state=3D"closed"><button ar=
ia-label=3D"Edit message" class=3D"flex h-9 w-9 items-center justify-center=
 rounded-full text-token-text-secondary transition hover:bg-token-main-surf=
ace-tertiary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 =
17.9359 2.52167 19.7071 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7=
071L18.7073 11.7069L11.6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999=
 20.1971L4.16441 20.9864C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.=
06454 20.4788 2.96053 20.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4=
.46243 13.1234 5.19932 12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C=
6.1714 14.2428 5.87846 14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2=
244C9.18795 18.1216 9.75719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM=
18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 1=
8.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" =
fill=3D"currentColor"></path></svg></button></span></div></div></div></div>=
</div></div></div></div></div></article><article class=3D"w-full scroll-mb-=
[var(--thread-trailing-height,150px)] text-token-text-primary focus-visible=
:outline-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D=
"conversation-turn-15" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">C=
hatGPT said:</h6><div class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-fu=
ll md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-ba=
se md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div c=
lass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"=
pt-0"><div class=3D"gizmo-bot-avatar flex h-8 w-8 items-center justify-cent=
er overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"5707db9c-51e7-44d9-80f7-6e=
f5b6dade66" dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col=
 items-end gap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5" =
data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1=
 empty:hidden first:pt-[3px]"><div class=3D"markdown prose w-full break-wor=
ds dark:prose-invert dark"><p>Here=E2=80=99s the fully formatted <strong>Ju=
pyter Notebook</strong> version of the <strong>Cognitive Milestone Framewor=
k (CMF)</strong>, including markdown cells for explanation and code cells f=
or functionality. You can directly copy this into a Jupyter Notebook.</p><h=
r><pre class=3D"!overflow-visible"><div class=3D"contain-inline-size rounde=
d-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-su=
rface-primary dark:bg-gray-950"><div class=3D"flex items-center text-token-=
text-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9=
 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary sele=
ct-none">markdown</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div cl=
ass=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=3D"flex =
items-center rounded bg-token-sidebar-surface-primary px-2 font-sans text-x=
s text-token-text-secondary dark:bg-token-main-surface-secondary"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-markdown"><span class=3D"hljs-s=
ection"># Cognitive Milestone Framework (CMF)</span>

<span class=3D"hljs-section">## Introduction</span>
The <span class=3D"hljs-strong">**Cognitive Milestone Framework (CMF)**</sp=
an> is a systematic guide for knowledge workers to develop key cognitive sk=
ills,=20
track milestones, and improve decision-making. This notebook combines theor=
etical concepts with functional tools to=20
help you integrate CMF into your daily workflow.

<span class=3D"hljs-section">### Objectives:</span>
<span class=3D"hljs-bullet">-</span> Strengthen memory and understanding th=
rough daily practices.
<span class=3D"hljs-bullet">-</span> Analyze and evaluate tasks critically.
<span class=3D"hljs-bullet">-</span> Track milestones and build habits for =
long-term success.
<span class=3D"hljs-bullet">-</span> Automate reminders and decision logs f=
or enhanced productivity.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-comment"># Import necessary libraries</span>
<span class=3D"hljs-keyword">import</span> json
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime, timedelta
<span class=3D"hljs-keyword">import</span> time
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 1. Cognitive Skills Tracker</span>

Use this section to log daily tasks and associate them with specific cognit=
ive skills (e.g., REMEMBER, UNDERSTAND, etc.).

<span class=3D"hljs-section">### Example Use Case:</span>
Log your progress on a project, categorize tasks by cognitive skill, and re=
flect on patterns in your learning process.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_"=
>log_skill_task</span>(<span class=3D"hljs-params">skill, task</span>):
    <span class=3D"hljs-string">"""Log a cognitive skill and associated tas=
k into a JSON file."""</span>
    log_entry =3D {
        <span class=3D"hljs-string">"skill"</span>: skill,
        <span class=3D"hljs-string">"task"</span>: task,
        <span class=3D"hljs-string">"date"</span>: datetime.now().strftime(=
<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"cognitive_skills_log.json"</span>,=
 <span class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</s=
pan> file:
        json.dump(log_entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Task logged under <span class=3D"hljs-subst">{skill}</span>: <span class=
=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a task</span>
log_skill_task(<span class=3D"hljs-string">"REMEMBER"</span>, <span class=
=3D"hljs-string">"Reviewed project requirements and memorized key objective=
s."</span>)
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 2. Milestone Tracker</span>

Track your long-term milestones and progress in achieving breakthroughs.

<span class=3D"hljs-section">### Example Use Case:</span>
Set a milestone to complete a significant deliverable (e.g., writing a repo=
rt) and update the status regularly.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_"=
>log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>)=
:
    <span class=3D"hljs-string">"""Log a milestone and its status into a JS=
ON file."""</span>
    data =3D {<span class=3D"hljs-string">"milestone"</span>: milestone, <s=
pan class=3D"hljs-string">"status"</span>: status, <span class=3D"hljs-stri=
ng">"timestamp"</span>: datetime.now().strftime(<span class=3D"hljs-string"=
>"%Y-%m-%d %H:%M:%S"</span>)}
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"milestones.json"</span>, <span cla=
ss=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> file:
        json.dump(data, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Milestone logged: <span class=3D"hljs-subst">{milestone}</span> - <span c=
lass=3D"hljs-subst">{status}</span>"</span>)

<span class=3D"hljs-comment"># Example: Logging a milestone</span>
log_milestone(<span class=3D"hljs-string">"Complete first draft of research=
 report"</span>, <span class=3D"hljs-string">"In Progress"</span>)
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 3. Habit Reminder System</span>

Set reminders for important routines and habits to stay on track.

<span class=3D"hljs-section">### Example Use Case:</span>
Schedule a daily reflection session to review the day's achievements and pl=
an the next day's tasks.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_"=
>schedule_reminder</span>(<span class=3D"hljs-params">task, delay_minutes</=
span>):
    <span class=3D"hljs-string">"""Set a reminder for a specific task after=
 a delay in minutes."""</span>
    now =3D datetime.now()
    reminder_time =3D now + timedelta(minutes=3Ddelay_minutes)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reminder set for: <span class=3D"hljs-subst">{reminder_time.strftime(<spa=
n class=3D"hljs-string">'%H:%M:%S'</span>)}</span>"</span>)
    time.sleep(delay_minutes * <span class=3D"hljs-number">60</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Time to: <span class=3D"hljs-subst">{task}</span>"</span>)

<span class=3D"hljs-comment"># Example: Scheduling a reminder (commented ou=
t to avoid delay in notebook)</span>
<span class=3D"hljs-comment"># schedule_reminder("Reflect on today's learni=
ng", 10)</span>
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 4. Reflection and Decision Logs</span>

Maintain logs of key reflections and decisions to build a record of learnin=
g and growth.

<span class=3D"hljs-section">### Example Use Case:</span>
Log the pros and cons of a decision, the chosen option, and its outcome.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_"=
>log_reflection</span>(<span class=3D"hljs-params">reflection</span>):
    <span class=3D"hljs-string">"""Log a reflection entry into a JSON file.=
"""</span>
    entry =3D {
        <span class=3D"hljs-string">"reflection"</span>: reflection,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(<span class=3D"hljs-string">"reflection_logs.json"</span>, <spa=
n class=3D"hljs-string">"a"</span>) <span class=3D"hljs-keyword">as</span> =
file:
        json.dump(entry, file)
        file.write(<span class=3D"hljs-string">"\n"</span>)
    <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-string">=
f"Reflection logged: <span class=3D"hljs-subst">{reflection}</span>"</span>=
)

<span class=3D"hljs-comment"># Example: Logging a reflection</span>
log_reflection(<span class=3D"hljs-string">"Analyzed the outcomes of my pro=
ject and identified key areas for improvement."</span>)
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 5. Combining It All: Daily Workflow</span=
>

Integrate all functions into a cohesive daily workflow.

<span class=3D"hljs-section">### Example Workflow:</span>
<span class=3D"hljs-bullet">1.</span> <span class=3D"hljs-strong">**Morning=
**</span>:
<span class=3D"hljs-bullet">   -</span> Use the Habit Reminder System to sc=
hedule learning activities.
<span class=3D"hljs-bullet">   -</span> Log tasks under cognitive skills (e=
.g., remember and understand).

<span class=3D"hljs-bullet">2.</span> <span class=3D"hljs-strong">**Mid-Day=
**</span>:
<span class=3D"hljs-bullet">   -</span> Use the milestone tracker to assess=
 progress on significant goals.

<span class=3D"hljs-bullet">3.</span> <span class=3D"hljs-strong">**Evening=
**</span>:
<span class=3D"hljs-bullet">   -</span> Reflect on the day's activities and=
 log key decisions.
<span class=3D"hljs-bullet">   -</span> Update milestones and set habits fo=
r the next day.
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex ga=
p-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-a=
uto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><=
span class=3D"hljs-comment"># Example Workflow Execution</span>
<span class=3D"hljs-comment"># Morning</span>
log_skill_task(<span class=3D"hljs-string">"UNDERSTAND"</span>, <span class=
=3D"hljs-string">"Read and summarized key concepts from a book."</span>)

<span class=3D"hljs-comment"># Mid-Day</span>
log_milestone(<span class=3D"hljs-string">"Submit project proposal"</span>,=
 <span class=3D"hljs-string">"Completed"</span>)

<span class=3D"hljs-comment"># Evening</span>
log_reflection(<span class=3D"hljs-string">"Reflected on today's tasks and =
identified improvement areas."</span>)
</code></div></div></pre><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">markdown</div><div class=3D"sticky top-9 md=
:top-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-cent=
er"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primar=
y px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary"><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center select-none py-1"><svg width=3D"24" height=3D"24" viewBo=
x=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg>Copy code</button></span></div></div></div><div class=3D"overflow-y-=
auto p-4" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-markdown=
"><span class=3D"hljs-section">## 6. Summary</span>

This notebook provides a structured framework to enhance your cognitive and=
 decision-making skills. By using these tools:
<span class=3D"hljs-bullet">-</span> You can systematically track and impro=
ve your learning habits.
<span class=3D"hljs-bullet">-</span> Maintain a clear record of progress an=
d reflections.
<span class=3D"hljs-bullet">-</span> Build consistency through habit remind=
ers.

<span class=3D"hljs-section">### Next Steps:</span>
<span class=3D"hljs-bullet">1.</span> Start by logging your first task or r=
eflection.
<span class=3D"hljs-bullet">2.</span> Set a milestone for the week.
<span class=3D"hljs-bullet">3.</span> Use the habit reminder system to buil=
d daily practices.

Happy learning and growing!
</code></div></div></pre><hr><h3>Instructions:</h3><ol><li><strong>Copy and=
 paste this code into a Jupyter Notebook cell.</strong></li><li><strong>Run=
 each cell sequentially to implement the CMF.</strong></li><li><strong>Modi=
fy function inputs to suit your own tasks, milestones, and reflections.</st=
rong></li></ol><p>Feel free to expand this framework further or ask for add=
itional functionality!</p></div></div></div></div><div class=3D"mb-2 flex g=
ap-3 empty:hidden -ml-2"><div class=3D"items-center justify-start rounded-x=
l p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:sr-only"><div=
 class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button=
 class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-=
secondary" aria-label=3D"Read aloud" data-testid=3D"voice-play-turn-action-=
button"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 1=
0.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3=
.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 1=
6 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.525=
2 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V1=
9.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 =
16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.=
06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.51=
91 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 2=
1.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2=
896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996=
 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19=
.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.6578=
9 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 1=
3.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0=
539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 =
16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.3=
0063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor=
"></path></svg></span></button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main=
-surface-secondary" aria-label=3D"Copy" data-testid=3D"copy-turn-action-but=
ton"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></span></button></span><spa=
n class=3D"hidden"></span><span class=3D"" data-state=3D"closed"><button ty=
pe=3D"button" id=3D"radix-:r11c:" aria-haspopup=3D"menu" aria-expanded=3D"f=
alse" data-state=3D"closed" class=3D"cursor-pointer h-[30px] rounded-md px-=
1 text-token-text-secondary hover:bg-token-main-surface-secondary"><div cla=
ss=3D"flex items-center pb-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d"><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.=
4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.4595 3 19.0118 3C19.5641 =
3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641 9 19.0118 9H15C14.447=
7 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571C15.6757 5.76379 13.91=
01 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.98586 11.6718 4.48619 =
12.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.4243 3.06957 10.8763ZM20.=
0618 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 13.1237C20.3767 17.5644=
 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 18.7559V20C5.99999 20.=
5523 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523 3.99999 20V16C3.99999=
 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.99999 15.4477 9.99999 1=
6C9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.32433 18.2362 10.0899 19 =
12 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0141 12.3282 19.5138 11=
.9393 20.0618 12.0077Z" fill=3D"currentColor"></path></svg><span class=3D"o=
verflow-hidden text-clip whitespace-nowrap text-sm" style=3D"opacity: 0; pa=
dding-left: 0px; width: 0px; will-change: opacity;">4o</span><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711 9.29=
289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071 9.29=
289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12.5196=
 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5.2928=
9 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"current=
Color"></path></svg></div></button></span></div></div></div><div class=3D"p=
r-2 lg:pr-0"></div></div></div></div></div></article><article class=3D"w-fu=
ll scroll-mb-[var(--thread-trailing-height,150px)] text-token-text-primary =
focus-visible:outline-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" d=
ata-testid=3D"conversation-turn-16" data-scroll-anchor=3D"false"><h5 class=
=3D"sr-only">You said:</h5><div class=3D"m-auto text-base py-[18px] px-3 md=
:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap=
-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48re=
m]"><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex=
-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col flex-grow"><div data-message-author-role=3D"user" data-message-id=
=3D"bbb21361-961a-4f5f-92e5-e80cdbb7c541" dir=3D"auto" class=3D"min-h-8 tex=
t-message flex w-full flex-col items-end gap-2 whitespace-normal break-word=
s [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empt=
y:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] roun=
ded-3xl bg-token-message-surface px-5 py-2.5"><div class=3D"whitespace-pre-=
wrap">Consolidate the above into
.ipynb format</div><div class=3D"absolute bottom-0 right-full top-0 -mr-3.5=
 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:block"><span clas=
s=3D"" data-state=3D"closed"><button aria-label=3D"Edit message" class=3D"f=
lex h-9 w-9 items-center justify-center rounded-full text-token-text-second=
ary transition hover:bg-token-main-surface-tertiary"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.47=
84 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.6135 18.8007C=
10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.9864C3.84585 21.=
0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 20.1542 3.0136=
2 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 12.3865L13.29=
29 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 14.8121 5.775=
67 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.75719 17.8286 =
10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.=
70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.28=
31 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)=
] text-token-text-primary focus-visible:outline-2 focus-visible:outline-off=
set-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-17" data-scroll-a=
nchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"m-aut=
o text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col =
relative items-end"><div><div class=3D"pt-0"><div class=3D"gizmo-bot-avatar=
 flex h-8 w-8 items-center justify-center overflow-hidden rounded-full"><di=
v class=3D"relative p-1 rounded-sm flex items-center justify-center bg-toke=
n-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" h=
eight=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Cha=
tGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9=
886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 =
33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.850=
78C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 =
0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C=
10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.34=
14 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 1=
4.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3=
.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.725=
6 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36=
.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.07=
86 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C=
24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.=
5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 =
30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0=
789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.884=
9C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36=
.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813=
 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20=
.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 =
21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6=
841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5139=
7 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5=
.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902=
C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.73=
21 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 =
24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.=
4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.171=
56 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 =
8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48=
312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C=
15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.=
516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289=
 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22=
.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.47=
87C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 =
17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.48=
32 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 =
33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.=
3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 =
32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9=
142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 1=
0.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9=
982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048=
 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28=
.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.409=
39 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 =
15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10=
.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.81=
07 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 =
15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35=
876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 =
4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.=
3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.999=
1L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17=
.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><d=
iv class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col a=
gent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-=
full flex-col flex-grow"><span class=3D"first:mt-0 relative h-8 text-token-=
text-secondary hover:text-token-text-primary my-1.5"><div class=3D"group ab=
solute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button class=3D"" sty=
le=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-center justi=
fy-start gap-1"><span>Analysis errored</span><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1=
2 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19.0976 13.68=
34 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0976 17.2929 =
14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5.29289 =
14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 7.29289C11.=
4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg></div></bu=
tton></div></span><div class=3D"overflow-hidden" style=3D"opacity: 1; heigh=
t: auto; will-change: auto; transform: none;"><div class=3D"mb-3 mt-0.5 ove=
rflow-hidden rounded-xl bg-black"><div class=3D"markdown prose w-full break=
-words dark:prose-invert dark markdown prose w-full break-words dark:prose-=
invert dark"><pre class=3D"!overflow-visible"><div class=3D"contain-inline-=
size rounded-md border-[0.5px] border-token-border-medium relative bg-token=
-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex items-center =
text-token-text-secondary px-4 py-2 text-xs font-sans justify-between round=
ed-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-sec=
ondary select-none">python</div><div class=3D"sticky top-9 md:top-[5.75rem]=
"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=
=3D"flex items-center rounded bg-token-sidebar-surface-primary px-2 font-sa=
ns text-xs text-token-text-secondary dark:bg-token-main-surface-secondary">=
<div class=3D"mr-2 flex items-center gap-2 border-r border-token-border-med=
ium pr-2"><label for=3D"ada-always-show">Always show details</label><button=
 type=3D"button" role=3D"switch" aria-checked=3D"true" data-state=3D"checke=
d" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to always expan=
d detail view for code analysis on" class=3D"focus-visible:outline-none foc=
us-visible:ring-2 focus-visible:ring-token-text-secondary focus-visible:rin=
g-offset-2 focus-visible:radix-state-checked:ring-black focus-visible:dark:=
ring-token-main-surface-primary focus-visible:dark:radix-state-checked:ring=
-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-black dark:bor=
der dark:border-token-border-medium dark:bg-transparent relative shrink-0 r=
ounded-full dark:radix-state-checked:border-green-600 dark:radix-state-chec=
ked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked" class=3D"f=
lex items-center justify-center rounded-full transition-transform duration-=
100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-0.5 bg-white=
 h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] rtl:radix-sta=
te-checked:translate-x-[-13px]"></span></button></div><span class=3D"" data=
-state=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></d=
iv></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> json

<span class=3D"hljs-comment"># Define the structure of the Jupyter notebook=
 in JSON format</span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"codemirror_mode"</span>: {
                <span class=3D"hljs-string">"name"</span>: <span class=3D"h=
ljs-string">"ipython"</span>,
                <span class=3D"hljs-string">"version"</span>: <span class=
=3D"hljs-number">3</span>
            },
            <span class=3D"hljs-string">"file_extension"</span>: <span clas=
s=3D"hljs-string">".py"</span>,
          =20
</code></div></div></pre></div><div class=3D"overflow-auto border-t border-=
gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 text-xs"><=
div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-7=
00 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In[2], li=
ne 233
   =20
    ^
SyntaxError: incomplete input

</pre></div></div></div></div></div><div data-message-author-role=3D"assist=
ant" data-message-id=3D"1b706e6d-5723-4887-8979-838cc54c2516" dir=3D"auto" =
class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 whitespa=
ce-normal break-words [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert da=
rk"><p>I encountered an issue formatting the complete Jupyter notebook. Let=
 me resolve the structure and provide you the corrected <code>.ipynb</code>=
 file that you can directly load. =E2=80=8B<span class=3D"" data-state=3D"c=
losed"><button><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 19 =
15" fill=3D"none" class=3D"-mt-0.5 ml-0.5 inline-block text-token-link hove=
r:text-token-link-hover" width=3D"19" height=3D"15"><path d=3D"M4.42 0.75H2=
.8625H2.75C1.64543 0.75 0.75 1.64543 0.75 2.75V11.65C0.75 12.7546 1.64543 1=
3.65 2.75 13.65H2.8625C2.8625 13.65 2.8625 13.65 2.8625 13.65C2.8625 13.65 =
4.00751 13.65 4.42 13.65M13.98 13.65H15.5375H15.65C16.7546 13.65 17.65 12.7=
546 17.65 11.65V2.75C17.65 1.64543 16.7546 0.75 15.65 0.75H15.5375H13.98" s=
troke=3D"currentColor" stroke-width=3D"1.5" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.55283 4.21963C5.25993 3.92674 4.78=
506 3.92674 4.49217 4.21963C4.19927 4.51252 4.19927 4.9874 4.49217 5.28029L=
6.36184 7.14996L4.49217 9.01963C4.19927 9.31252 4.19927 9.7874 4.49217 10.0=
803C4.78506 10.3732 5.25993 10.3732 5.55283 10.0803L7.95283 7.68029C8.24572=
 7.3874 8.24572 6.91252 7.95283 6.61963L5.55283 4.21963Z" fill=3D"currentCo=
lor" stroke=3D"currentColor" stroke-width=3D"0.2" stroke-linecap=3D"round" =
stroke-linejoin=3D"round"></path><path d=3D"M9.77753 8.75003C9.3357 8.75003=
 8.97753 9.10821 8.97753 9.55003C8.97753 9.99186 9.3357 10.35 9.77753 10.35=
H13.2775C13.7194 10.35 14.0775 9.99186 14.0775 9.55003C14.0775 9.10821 13.7=
194 8.75003 13.2775 8.75003H9.77753Z" fill=3D"currentColor" stroke=3D"curre=
ntColor" stroke-width=3D"0.1"></path></svg></button></span>=E2=80=8B</p></d=
iv></div></div><span class=3D"first:mt-0 relative h-8 text-token-text-secon=
dary hover:text-token-text-primary my-1.5"><div class=3D"group absolute lef=
t-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button class=3D"" style=3D"opac=
ity: 1; will-change: auto;"><div class=3D"flex items-center justify-start g=
ap-1"><span>Analysis errored</span><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 7C12.26=
52 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19.0976 13.6834 19.097=
6 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0976 17.2929 14.7071L1=
2 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5.29289 14.7071C4=
.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 7.29289C11.4804 7.10=
536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg></div></button></di=
v></span><div class=3D"overflow-hidden" style=3D"opacity: 1; height: auto; =
will-change: auto; transform: none;"><div class=3D"mb-3 mt-0.5 overflow-hid=
den rounded-xl bg-black"><div class=3D"markdown prose w-full break-words da=
rk:prose-invert dark markdown prose w-full break-words dark:prose-invert da=
rk"><pre class=3D"!overflow-visible"><div class=3D"contain-inline-size roun=
ded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-=
surface-primary dark:bg-gray-950"><div class=3D"flex items-center text-toke=
n-text-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md h=
-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary se=
lect-none">python</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div cl=
ass=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=3D"flex =
items-center rounded bg-token-sidebar-surface-primary px-2 font-sans text-x=
s text-token-text-secondary dark:bg-token-main-surface-secondary"><div clas=
s=3D"mr-2 flex items-center gap-2 border-r border-token-border-medium pr-2"=
><label for=3D"ada-always-show">Always show details</label><button type=3D"=
button" role=3D"switch" aria-checked=3D"true" data-state=3D"checked" value=
=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to always expand detail=
 view for code analysis on" class=3D"focus-visible:outline-none focus-visib=
le:ring-2 focus-visible:ring-token-text-secondary focus-visible:ring-offset=
-2 focus-visible:radix-state-checked:ring-black focus-visible:dark:ring-tok=
en-main-surface-primary focus-visible:dark:radix-state-checked:ring-green-6=
00 cursor-pointer bg-gray-200 radix-state-checked:bg-black dark:border dark=
:border-token-border-medium dark:bg-transparent relative shrink-0 rounded-f=
ull dark:radix-state-checked:border-green-600 dark:radix-state-checked:bg-g=
reen-600 h-[19px] w-[30px]"><span data-state=3D"checked" class=3D"flex item=
s-center justify-center rounded-full transition-transform duration-100 will=
-change-transform ltr:translate-x-0.5 rtl:-translate-x-0.5 bg-white h-[15px=
] w-[15px] ltr:radix-state-checked:translate-x-[13px] rtl:radix-state-check=
ed:translate-x-[-13px]"></span></button></div><span class=3D"" data-state=
=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div></d=
iv></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"!whi=
tespace-pre hljs language-python"><span class=3D"hljs-comment"># Correcting=
 the notebook JSON structure and saving it as an actual .ipynb file</span>

<span class=3D"hljs-comment"># Full notebook structure</span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"codemirror_mode"</span>: {<span cl=
ass=3D"hljs-string">"name"</span>: <span class=3D"hljs-string">"ipython"</s=
pan>, <span class=3D"hljs-string">"version"</span>: <span class=3D"hljs-num=
ber">3</span>},
            <span class=3D"hljs-string">"file_extension"</span>: <span clas=
s=3D"hljs-string">".
</span></code></div></div></pre></div><div class=3D"overflow-auto border-t =
border-gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 tex=
t-xs"><div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track=
-gray-700 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In=
[3], line 229
    "file_extension": ".
                      ^
SyntaxError: unterminated string literal (detected at line 229)

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis errored</span><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C1=
9.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0=
976 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0=
976 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929=
 7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></sv=
g></div></button></div></span><div class=3D"overflow-hidden" style=3D"opaci=
ty: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-=
3 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose =
w-full break-words dark:prose-invert dark markdown prose w-full break-words=
 dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-toke=
n-border-medium pr-2"><label for=3D"ada-always-show">Always show details</l=
abel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-sta=
te=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to =
always expand detail view for code analysis on" class=3D"focus-visible:outl=
ine-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus=
-visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-v=
isible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-=
checked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bl=
ack dark:border dark:border-token-border-medium dark:bg-transparent relativ=
e shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radi=
x-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked=
" class=3D"flex items-center justify-center rounded-full transition-transfo=
rm duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-=
0.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] r=
tl:radix-state-checked:translate-x-[-13px]"></span></button></div><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-com=
ment"># Correct and write the notebook structure to a .ipynb file</span>

notebook_content =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"codemirror_mode"</span>: {<span cl=
ass=3D"hljs-string">"name"</span>: <span class=3D"hljs-string">"ipython
</span></code></div></div></pre></div><div class=3D"overflow-auto border-t =
border-gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 tex=
t-xs"><div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track=
-gray-700 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In=
[4], line 227
    "codemirror_mode": {"name": "ipython
                                ^
SyntaxError: unterminated string literal (detected at line 227)

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis errored</span><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C1=
9.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0=
976 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0=
976 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929=
 7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></sv=
g></div></button></div></span><div class=3D"overflow-hidden" style=3D"opaci=
ty: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-=
3 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose =
w-full break-words dark:prose-invert dark markdown prose w-full break-words=
 dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-toke=
n-border-medium pr-2"><label for=3D"ada-always-show">Always show details</l=
abel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-sta=
te=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to =
always expand detail view for code analysis on" class=3D"focus-visible:outl=
ine-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus=
-visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-v=
isible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-=
checked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bl=
ack dark:border dark:border-token-border-medium dark:bg-transparent relativ=
e shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radi=
x-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked=
" class=3D"flex items-center justify-center rounded-full transition-transfo=
rm duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-=
0.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] r=
tl:radix-state-checked:translate-x-[-13px]"></span></button></div><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-key=
word">import</span> json

<span class=3D"hljs-comment"># Correct and finalize the notebook structure<=
/span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"codemirror_mode"</span>: <span cla=
ss=3D"hljs-string">"python"</span>,
            <span class=3D"hljs-string">"file_extension"</span>: <span clas=
s=3D"hljs-string">".py"</span>,

</code></div></div></pre></div><div class=3D"overflow-auto border-t border-=
gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 text-xs"><=
div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-7=
00 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In[5], li=
ne 230
   =20
    ^
SyntaxError: incomplete input

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis errored</span><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C1=
9.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0=
976 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0=
976 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929=
 7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></sv=
g></div></button></div></span><div class=3D"overflow-hidden" style=3D"opaci=
ty: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-=
3 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose =
w-full break-words dark:prose-invert dark markdown prose w-full break-words=
 dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-toke=
n-border-medium pr-2"><label for=3D"ada-always-show">Always show details</l=
abel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-sta=
te=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to =
always expand detail view for code analysis on" class=3D"focus-visible:outl=
ine-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus=
-visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-v=
isible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-=
checked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bl=
ack dark:border dark:border-token-border-medium dark:bg-transparent relativ=
e shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radi=
x-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked=
" class=3D"flex items-center justify-center rounded-full transition-transfo=
rm duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-=
0.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] r=
tl:radix-state-checked:translate-x-[-13px]"></span></button></div><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-key=
word">import</span> json

<span class=3D"hljs-comment"># Finalize a properly structured Jupyter Noteb=
ook</span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"3.8"</span>

</code></div></div></pre></div><div class=3D"overflow-auto border-t border-=
gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 text-xs"><=
div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-7=
00 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In[6], li=
ne 230
   =20
    ^
SyntaxError: incomplete input

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis errored</span><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C1=
9.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0=
976 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0=
976 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929=
 7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></sv=
g></div></button></div></span><div class=3D"overflow-hidden" style=3D"opaci=
ty: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-=
3 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose =
w-full break-words dark:prose-invert dark markdown prose w-full break-words=
 dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-toke=
n-border-medium pr-2"><label for=3D"ada-always-show">Always show details</l=
abel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-sta=
te=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to =
always expand detail view for code analysis on" class=3D"focus-visible:outl=
ine-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus=
-visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-v=
isible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-=
checked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bl=
ack dark:border dark:border-token-border-medium dark:bg-transparent relativ=
e shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radi=
x-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked=
" class=3D"flex items-center justify-center rounded-full transition-transfo=
rm duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-=
0.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] r=
tl:radix-state-checked:translate-x-[-13px]"></span></button></div><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-com=
ment"># Finalize and export the structured notebook to .ipynb format</span>
notebook_final =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"3
</span></code></div></div></pre></div><div class=3D"overflow-auto border-t =
border-gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 tex=
t-xs"><div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track=
-gray-700 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In=
[7], line 227
    "version": "3
               ^
SyntaxError: unterminated string literal (detected at line 227)

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis paused</span><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"eveno=
dd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19=
.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.09=
76 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.09=
76 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 =
7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg=
></div></button></div></span><div class=3D"overflow-hidden" style=3D"opacit=
y: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-3=
 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose w=
-full break-words dark:prose-invert dark markdown prose w-full break-words =
dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"cont=
ain-inline-size rounded-md border-[0.5px] border-token-border-medium relati=
ve bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex it=
ems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-be=
tween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-=
surface-secondary select-none">python</div><div class=3D"sticky top-9 md:to=
p-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"=
><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary p=
x-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface-=
secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-token=
-border-medium pr-2"><label for=3D"ada-always-show">Always show details</la=
bel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-stat=
e=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to a=
lways expand detail view for code analysis on" class=3D"focus-visible:outli=
ne-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus-=
visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-vi=
sible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-c=
hecked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bla=
ck dark:border dark:border-token-border-medium dark:bg-transparent relative=
 shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radix=
-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked"=
 class=3D"flex items-center justify-center rounded-full transition-transfor=
m duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-0=
.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] rt=
l:radix-state-checked:translate-x-[-13px]"></span></button></div><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center selec=
t-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C2=
0.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15=
.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM=
9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.=
44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 =
4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44=
772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button=
></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><c=
ode class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-comm=
ent"># Correcting and writing the final Jupyter notebook file</span>

notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices
</span></code></div></div></pre></div></div></div></div><div class=3D"mb-2 =
flex gap-3 empty:hidden -ml-2"><div class=3D"items-center justify-start rou=
nded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:sr-only=
"><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary" aria-label=3D"Read aloud" data-testid=3D"voice-play-turn-a=
ction-button"><span class=3D"flex h-[30px] w-[30px] items-center justify-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.247=
34 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005=
H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.250=
19 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19=
.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.90=
99V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 1=
8 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.8106=
9 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C2=
2.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.59=
74 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 =
17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.=
9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.2272=
6 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.=
65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.49=
96 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 =
16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7=
564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004=
 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentC=
olor"></path></svg></span></button></span><span class=3D"" data-state=3D"cl=
osed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-=
main-surface-secondary" aria-label=3D"Copy" data-testid=3D"copy-turn-action=
-button"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.656=
9 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569=
 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H1=
4C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772=
 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V=
19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 1=
4.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></span></button></span=
><span class=3D"hidden"></span><span class=3D"" data-state=3D"closed"><butt=
on type=3D"button" id=3D"radix-:r11j:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" class=3D"cursor-pointer h-[30px] rounded-m=
d px-1 text-token-text-secondary hover:bg-token-main-surface-secondary"><di=
v class=3D"flex items-center pb-0"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md"><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.40967 3 12 3C14.2824=
 3 16.4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.4595 3 19.0118 3C19=
.5641 3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641 9 19.0118 9H15C=
14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571C15.6757 5.76379=
 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.98586 11.6718 4.=
48619 12.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.4243 3.06957 10.876=
3ZM20.0618 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 13.1237C20.3767 1=
7.5644 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 18.7559V20C5.999=
99 20.5523 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523 3.99999 20V16C3=
.99999 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.99999 15.4477 9.9=
9999 16C9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.32433 18.2362 10.08=
99 19 12 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0141 12.3282 19.5=
138 11.9393 20.0618 12.0077Z" fill=3D"currentColor"></path></svg><span clas=
s=3D"overflow-hidden text-clip whitespace-nowrap text-sm" style=3D"opacity:=
 0; padding-left: 0px; width: 0px; will-change: opacity;">4o</span><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.7071=
1 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.707=
1 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C1=
2.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L=
5.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"c=
urrentColor"></path></svg></div></button></span></div></div></div><div clas=
s=3D"pr-2 lg:pr-0"></div></div></div></div></div></article><article class=
=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)] text-token-text-=
primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" dir=3D=
"auto" data-testid=3D"conversation-turn-18" data-scroll-anchor=3D"false"><h=
5 class=3D"sr-only">You said:</h5><div class=3D"m-auto text-base py-[18px] =
px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex fle=
x-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-=
w-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w=
-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-=
w-full flex-col flex-grow"><div data-message-author-role=3D"user" data-mess=
age-id=3D"bbb2149a-8cef-49d6-9565-a412fe15aa58" dir=3D"auto" class=3D"min-h=
-8 text-message flex w-full flex-col items-end gap-2 whitespace-normal brea=
k-words [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-=
1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%=
] rounded-3xl bg-token-message-surface px-5 py-2.5"><div class=3D"whitespac=
e-pre-wrap">Consolidate the above into
.ipynb format</div><div class=3D"absolute bottom-0 right-full top-0 -mr-3.5=
 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:block"><span clas=
s=3D"" data-state=3D"closed"><button aria-label=3D"Edit message" class=3D"f=
lex h-9 w-9 items-center justify-center rounded-full text-token-text-second=
ary transition hover:bg-token-main-surface-tertiary"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.47=
84 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.6135 18.8007C=
10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.9864C3.84585 21.=
0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 20.1542 3.0136=
2 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 12.3865L13.29=
29 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 14.8121 5.775=
67 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.75719 17.8286 =
10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.=
70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.28=
31 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)=
] text-token-text-primary focus-visible:outline-2 focus-visible:outline-off=
set-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-19" data-scroll-a=
nchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"m-aut=
o text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col =
relative items-end"><div><div class=3D"pt-0"><div class=3D"gizmo-bot-avatar=
 flex h-8 w-8 items-center justify-center overflow-hidden rounded-full"><di=
v class=3D"relative p-1 rounded-sm flex items-center justify-center bg-toke=
n-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" h=
eight=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Cha=
tGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9=
886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 =
33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.850=
78C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 =
0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C=
10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.34=
14 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 1=
4.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3=
.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.725=
6 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36=
.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.07=
86 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C=
24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.=
5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 =
30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0=
789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.884=
9C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36=
.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813=
 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20=
.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 =
21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6=
841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5139=
7 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5=
.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902=
C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.73=
21 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 =
24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.=
4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.171=
56 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 =
8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48=
312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C=
15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.=
516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289=
 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22=
.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.47=
87C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 =
17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.48=
32 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 =
33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.=
3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 =
32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9=
142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 1=
0.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9=
982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048=
 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28=
.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.409=
39 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 =
15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10=
.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.81=
07 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 =
15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35=
876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 =
4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.=
3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.999=
1L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17=
.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><d=
iv class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col a=
gent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-=
full flex-col flex-grow"><span class=3D"first:mt-0 relative h-8 text-token-=
text-secondary hover:text-token-text-primary my-1.5"><div class=3D"group ab=
solute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button class=3D"" sty=
le=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-center justi=
fy-start gap-1"><span>Analysis errored</span><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1=
2 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19.0976 13.68=
34 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0976 17.2929 =
14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5.29289 =
14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 7.29289C11.=
4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg></div></bu=
tton></div></span><div class=3D"overflow-hidden" style=3D"opacity: 1; heigh=
t: auto; will-change: auto; transform: none;"><div class=3D"mb-3 mt-0.5 ove=
rflow-hidden rounded-xl bg-black"><div class=3D"markdown prose w-full break=
-words dark:prose-invert dark markdown prose w-full break-words dark:prose-=
invert dark"><pre class=3D"!overflow-visible"><div class=3D"contain-inline-=
size rounded-md border-[0.5px] border-token-border-medium relative bg-token=
-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex items-center =
text-token-text-secondary px-4 py-2 text-xs font-sans justify-between round=
ed-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-sec=
ondary select-none">python</div><div class=3D"sticky top-9 md:top-[5.75rem]=
"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=
=3D"flex items-center rounded bg-token-sidebar-surface-primary px-2 font-sa=
ns text-xs text-token-text-secondary dark:bg-token-main-surface-secondary">=
<div class=3D"mr-2 flex items-center gap-2 border-r border-token-border-med=
ium pr-2"><label for=3D"ada-always-show">Always show details</label><button=
 type=3D"button" role=3D"switch" aria-checked=3D"true" data-state=3D"checke=
d" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to always expan=
d detail view for code analysis on" class=3D"focus-visible:outline-none foc=
us-visible:ring-2 focus-visible:ring-token-text-secondary focus-visible:rin=
g-offset-2 focus-visible:radix-state-checked:ring-black focus-visible:dark:=
ring-token-main-surface-primary focus-visible:dark:radix-state-checked:ring=
-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-black dark:bor=
der dark:border-token-border-medium dark:bg-transparent relative shrink-0 r=
ounded-full dark:radix-state-checked:border-green-600 dark:radix-state-chec=
ked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked" class=3D"f=
lex items-center justify-center rounded-full transition-transform duration-=
100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-0.5 bg-white=
 h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] rtl:radix-sta=
te-checked:translate-x-[-13px]"></span></button></div><span class=3D"" data=
-state=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></d=
iv></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> json

<span class=3D"hljs-comment"># Write the finalized notebook structure to a =
.ipynb file</span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"
</span></code></div></div></pre></div><div class=3D"overflow-auto border-t =
border-gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 tex=
t-xs"><div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track=
-gray-700 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In=
[8], line 229
    "version": "
               ^
SyntaxError: unterminated string literal (detected at line 229)

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analysis errored</span><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C1=
9.0976 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0=
976 17.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0=
976 5.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929=
 7.29289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></sv=
g></div></button></div></span><div class=3D"overflow-hidden" style=3D"opaci=
ty: 1; height: auto; will-change: auto; transform: none;"><div class=3D"mb-=
3 mt-0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose =
w-full break-words dark:prose-invert dark markdown prose w-full break-words=
 dark:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"con=
tain-inline-size rounded-md border-[0.5px] border-token-border-medium relat=
ive bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex i=
tems-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main=
-surface-secondary select-none">python</div><div class=3D"sticky top-9 md:t=
op-[5.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center=
"><div class=3D"flex items-center rounded bg-token-sidebar-surface-primary =
px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface=
-secondary"><div class=3D"mr-2 flex items-center gap-2 border-r border-toke=
n-border-medium pr-2"><label for=3D"ada-always-show">Always show details</l=
abel><button type=3D"button" role=3D"switch" aria-checked=3D"true" data-sta=
te=3D"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to =
always expand detail view for code analysis on" class=3D"focus-visible:outl=
ine-none focus-visible:ring-2 focus-visible:ring-token-text-secondary focus=
-visible:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-v=
isible:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-=
checked:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-bl=
ack dark:border dark:border-token-border-medium dark:bg-transparent relativ=
e shrink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radi=
x-state-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked=
" class=3D"flex items-center justify-center rounded-full transition-transfo=
rm duration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-=
0.5 bg-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] r=
tl:radix-state-checked:translate-x-[-13px]"></span></button></div><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</butto=
n></span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-com=
ment"># Correct and write the finalized Jupyter notebook as a .ipynb file</=
span>
notebook =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a task\n"</=
span>,
                <span class=3D"hljs-string">"log_skill_task(\"REMEMBER\", \=
"Reviewed project requirements and memorized key objectives.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a milestone=
\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Complete first=
 draft of research report\", \"In Progress\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Scheduling a remind=
er (commented out to avoid delay in notebook)\n"</span>,
                <span class=3D"hljs-string">"# schedule_reminder(\"Reflect =
on today's learning\", 10)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Example: Logging a reflectio=
n\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Analyzed the =
outcomes of my project and identified key areas for improvement.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Example Workflow Execution\n=
"</span>,
                <span class=3D"hljs-string">"# Morning\n"</span>,
                <span class=3D"hljs-string">"log_skill_task(\"UNDERSTAND\",=
 \"Read and summarized key concepts from a book.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Mid-Day\n"</span>,
                <span class=3D"hljs-string">"log_milestone(\"Submit project=
 proposal\", \"Completed\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Evening\n"</span>,
                <span class=3D"hljs-string">"log_reflection(\"Reflected on =
today's tasks and identified improvement areas.\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"
</span></code></div></div></pre></div><div class=3D"overflow-auto border-t =
border-gray-500 text-white"><div class=3D"border-l-4 border-red-500 p-2 tex=
t-xs"><div class=3D"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track=
-gray-700 flex max-h-64 flex-col-reverse"><pre class=3D"shrink-0">  Cell In=
[9], line 227
    "version": "
               ^
SyntaxError: unterminated string literal (detected at line 227)

</pre></div></div></div></div></div><span class=3D"first:mt-0 relative h-8 =
text-token-text-secondary hover:text-token-text-primary my-1.5"><div class=
=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button cl=
ass=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex items-=
center justify-start gap-1"><span>Analyzed</span><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19.0976=
 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0976 17=
.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5.=
29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 7.292=
89C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg></di=
v></button></div></span><div class=3D"overflow-hidden" style=3D"opacity: 1;=
 height: auto; will-change: auto; transform: none;"><div class=3D"mb-3 mt-0=
.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose w-full=
 break-words dark:prose-invert dark markdown prose w-full break-words dark:=
prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"contain-i=
nline-size rounded-md border-[0.5px] border-token-border-medium relative bg=
-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surfa=
ce-secondary select-none">python</div><div class=3D"sticky top-9 md:top-[5.=
75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"><div=
 class=3D"flex items-center rounded bg-token-sidebar-surface-primary px-2 f=
ont-sans text-xs text-token-text-secondary dark:bg-token-main-surface-secon=
dary"><div class=3D"mr-2 flex items-center gap-2 border-r border-token-bord=
er-medium pr-2"><label for=3D"ada-always-show">Always show details</label><=
button type=3D"button" role=3D"switch" aria-checked=3D"true" data-state=3D"=
checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to always=
 expand detail view for code analysis on" class=3D"focus-visible:outline-no=
ne focus-visible:ring-2 focus-visible:ring-token-text-secondary focus-visib=
le:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-visible=
:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-checke=
d:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-black da=
rk:border dark:border-token-border-medium dark:bg-transparent relative shri=
nk-0 rounded-full dark:radix-state-checked:border-green-600 dark:radix-stat=
e-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked" clas=
s=3D"flex items-center justify-center rounded-full transition-transform dur=
ation-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-0.5 bg=
-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] rtl:rad=
ix-state-checked:translate-x-[-13px]"></span></button></div><span class=3D"=
" data-state=3D"closed"><button class=3D"flex gap-1 items-center select-non=
e py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.656=
9 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569=
 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H1=
4C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772=
 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V=
19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 1=
4.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></sp=
an></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code c=
lass=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-comment">=
# Final correction and writing of the notebook</span>
notebook_structure =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k (CMF)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"## Introduction\n"</span>,
                <span class=3D"hljs-string">"The **Cognitive Milestone Fram=
ework (CMF)** is a systematic guide for knowledge workers to develop key co=
gnitive skills, \n"</span>,
                <span class=3D"hljs-string">"track milestones, and improve =
decision-making. This notebook combines theoretical concepts with functiona=
l tools to \n"</span>,
                <span class=3D"hljs-string">"help you integrate CMF into yo=
ur daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Objectives:\n"</span>,
                <span class=3D"hljs-string">"- Strengthen memory and unders=
tanding through daily practices.\n"</span>,
                <span class=3D"hljs-string">"- Analyze and evaluate tasks c=
ritically.\n"</span>,
                <span class=3D"hljs-string">"- Track milestones and build h=
abits for long-term success.\n"</span>,
                <span class=3D"hljs-string">"- Automate reminders and decis=
ion logs for enhanced productivity."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Import necessary libraries\n=
"</span>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"import time"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 1. Cognitive Skills Tracker=
\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Use this section to log daily =
tasks and associate them with specific cognitive skills (e.g., REMEMBER, UN=
DERSTAND, etc.).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log your progress on a project=
, categorize tasks by cognitive skill, and reflect on patterns in your lear=
ning process."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a cognitive skil=
l and associated task into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"cognitive_skil=
ls_log.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(log_entry, f=
ile)\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Task logged under=
 {skill}: {task}\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 2. Milestone Tracker\n"</sp=
an>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Track your long-term milestone=
s and progress in achieving breakthroughs.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Set a milestone to complete a =
significant deliverable (e.g., writing a report) and update the status regu=
larly."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a milestone and =
its status into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    data =3D {\"milestone\": m=
ilestone, \"status\": status, \"timestamp\": datetime.now().strftime(\"%Y-%=
m-%d %H:%M:%S\")}\n"</span>,
                <span class=3D"hljs-string">"    with open(\"milestones.jso=
n\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(data, file)\=
n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Milestone logged:=
 {milestone} - {status}\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 3. Habit Reminder System\n"=
</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Set reminders for important ro=
utines and habits to stay on track.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Schedule a daily reflection se=
ssion to review the day's achievements and plan the next day's tasks."</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def schedule_reminder(task, de=
lay_minutes):\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Set a reminder for a=
 specific task after a delay in minutes.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    now =3D datetime.now()\n"<=
/span>,
                <span class=3D"hljs-string">"    reminder_time =3D now + ti=
medelta(minutes=3Ddelay_minutes)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Reminder set for:=
 {reminder_time.strftime('%H:%M:%S')}\")\n"</span>,
                <span class=3D"hljs-string">"    time.sleep(delay_minutes *=
 60)\n"</span>,
                <span class=3D"hljs-string">"    print(f\"Time to: {task}\"=
)"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 4. Reflection and Decision =
Logs\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Maintain logs of key reflectio=
ns and decisions to build a record of learning and growth.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Use Case:\n"</span=
>,
                <span class=3D"hljs-string">"Log the pros and cons of a dec=
ision, the chosen option, and its outcome."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    \"\"\"Log a reflection ent=
ry into a JSON file.\"\"\"\n"</span>,
                <span class=3D"hljs-string">"    entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(\"reflection_log=
s.json\", \"a\") as file:\n"</span>,
                <span class=3D"hljs-string">"        json.dump(entry, file)=
\n"</span>,
                <span class=3D"hljs-string">"        file.write(\"\\n\")\n"=
</span>,
                <span class=3D"hljs-string">"    print(f\"Reflection logged=
: {reflection}\")"</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 5. Combining It All: Daily =
Workflow\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Integrate all functions into a=
 cohesive daily workflow.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Example Workflow:\n"</span=
>,
                <span class=3D"hljs-string">"1. **Morning**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the Habit Reminder Sy=
stem to schedule learning activities.\n"</span>,
                <span class=3D"hljs-string">"   - Log tasks under cognitive=
 skills (e.g., remember and understand).\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"2. **Mid-Day**:\n"</span>,
                <span class=3D"hljs-string">"   - Use the milestone tracker=
 to assess progress on significant goals.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"3. **Evening**:\n"</span>,
                <span class=3D"hljs-string">"   - Reflect on the day's acti=
vities and log key decisions.\n"</span>,
                <span class=3D"hljs-string">"   - Update milestones and set=
 habits for the next day."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## 6. Summary\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook provides a struc=
tured framework to enhance your cognitive and decision-making skills. By us=
ing these tools:\n"</span>,
                <span class=3D"hljs-string">"- You can systematically track=
 and improve your learning habits.\n"</span>,
                <span class=3D"hljs-string">"- Maintain a clear record of p=
rogress and reflections.\n"</span>,
                <span class=3D"hljs-string">"- Build consistency through ha=
bit reminders.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"### Next Steps:\n"</span>,
                <span class=3D"hljs-string">"1. Start by logging your first=
 task or reflection.\n"</span>,
                <span class=3D"hljs-string">"2. Set a milestone for the wee=
k.\n"</span>,
                <span class=3D"hljs-string">"3. Use the habit reminder syst=
em to build daily practices.\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"Happy learning and growing!"</=
span>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"3.8.8"</span>
        }
    },
    <span class=3D"hljs-string">"nbformat"</span>: <span class=3D"hljs-numb=
er">4</span>,
    <span class=3D"hljs-string">"nbformat_minor"</span>: <span class=3D"hlj=
s-number">4</span>
}

<span class=3D"hljs-comment"># Write to a .ipynb file</span>
file_path =3D <span class=3D"hljs-string">"/mnt/data/Cognitive_Milestone_Fr=
amework.ipynb"</span>
<span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">open=
</span>(file_path, <span class=3D"hljs-string">"w"</span>) <span class=3D"h=
ljs-keyword">as</span> f:
    json.dump(notebook_structure, f)

file_path
</code></div></div></pre></div><div class=3D"bg-gray-700 p-4 text-xs"><div =
class=3D"mb-1 text-gray-400">Result</div><div class=3D"prose flex flex-col-=
reverse text-white"><pre class=3D"shrink-0">'/mnt/data/Cognitive_Milestone_=
Framework.ipynb'</pre></div></div></div></div><div data-message-author-role=
=3D"assistant" data-message-id=3D"13a35db9-be69-42d5-b113-4e0145dff348" dir=
=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items-end gap-=
2 whitespace-normal break-words [.text-message+&amp;]:mt-5" data-message-mo=
del-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden f=
irst:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-i=
nvert dark"><p>The Jupyter Notebook has been successfully created. You can =
download it using the link below:</p><p><span class=3D"" data-state=3D"clos=
ed"><a class=3D"cursor-pointer">Cognitive_Milestone_Framework.ipynb</a></sp=
an> =E2=80=8B<span class=3D"" data-state=3D"closed"><button><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"-mt=
-0.5 ml-0.5 inline-block text-token-link hover:text-token-link-hover" width=
=3D"19" height=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1=
.64543 0.75 2.75V11.65C0.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 =
13.65 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98=
 13.65H15.5375H15.65C16.7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.6=
4543 16.7546 0.75 15.65 0.75H15.5375H13.98" stroke=3D"currentColor" stroke-=
width=3D"1.5" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><pa=
th d=3D"M5.55283 4.21963C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.=
19927 4.51252 4.19927 4.9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.0196=
3C4.19927 9.31252 4.19927 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10=
.3732 5.55283 10.0803L7.95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.9528=
3 6.61963L5.55283 4.21963Z" fill=3D"currentColor" stroke=3D"currentColor" s=
troke-width=3D"0.2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></pa=
th><path d=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.550=
03C8.97753 9.99186 9.3357 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775=
 9.99186 14.0775 9.55003C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.=
77753Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.1">=
</path></svg></button></span>=E2=80=8B</p></div></div></div></div><div clas=
s=3D"mb-2 flex gap-3 empty:hidden -ml-2"><div class=3D"items-center justify=
-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute =
md:sr-only"><div class=3D"flex items-center"><span class=3D"" data-state=3D=
"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-tok=
en-main-surface-secondary" aria-label=3D"Read aloud" data-testid=3D"voice-p=
lay-turn-action-button"><span class=3D"flex h-[30px] w-[30px] items-center =
justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10=
.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.0000=
5 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4=
 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19=
.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73=
463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H=
4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.6=
1102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.672=
5 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22=
.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.54=
75C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 =
13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.=
6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688=
 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12=
.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.51=
58 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C1=
6.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0=
526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=
=3D"currentColor"></path></svg></span></button></span><span class=3D"" data=
-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hov=
er:bg-token-main-surface-secondary" aria-label=3D"Copy" data-testid=3D"copy=
-turn-action-button"><span class=3D"flex h-[30px] w-[30px] items-center jus=
tify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 =
2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6=
569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7=
H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5=
C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.=
44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C1=
5 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></span></bu=
tton></span><span class=3D"hidden"></span><span class=3D"" data-state=3D"cl=
osed"><button type=3D"button" id=3D"radix-:r11r:" aria-haspopup=3D"menu" ar=
ia-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer h-[30px=
] rounded-md px-1 text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><div class=3D"flex items-center pb-0"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md"><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.40967 3 12=
 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.4595 3 19=
.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641 9 19.=
0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571C15.67=
57 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.98586 =
11.6718 4.48619 12.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.4243 3.06=
957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 13.1237=
C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 18.755=
9V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523 3.999=
99 20V16C3.99999 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.99999 1=
5.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.32433 18.=
2362 10.0899 19 12 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0141 12=
.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D"currentColor"></path></svg>=
<span class=3D"overflow-hidden text-clip whitespace-nowrap text-sm" style=
=3D"opacity: 0; padding-left: 0px; width: 0px; will-change: opacity;">4o</s=
pan><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.=
90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.=
90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.70=
71 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2=
929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289=
Z" fill=3D"currentColor"></path></svg></div></button></span></div></div></d=
iv><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></article><art=
icle class=3D"w-full scroll-mb-[var(--thread-trailing-height,150px)] text-t=
oken-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4p=
x]" dir=3D"auto" data-testid=3D"conversation-turn-20" data-scroll-anchor=3D=
"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"m-auto text-base =
py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div class=3D"mx-aut=
o flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col flex-grow"><div data-message-author-role=3D"user"=
 data-message-id=3D"bbb21c21-2ec0-4b6d-8fd9-33c32a46a40b" dir=3D"auto" clas=
s=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 whitespace-n=
ormal break-words [.text-message+&amp;]:mt-5"><div class=3D"flex w-full fle=
x-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative =
max-w-[70%] rounded-3xl bg-token-message-surface px-5 py-2.5"><div class=3D=
"whitespace-pre-wrap">View</div><div class=3D"absolute bottom-0 right-full =
top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:bloc=
k"><span class=3D"" data-state=3D"closed"><button aria-label=3D"Edit messag=
e" class=3D"flex h-9 w-9 items-center justify-center rounded-full text-toke=
n-text-secondary transition hover:bg-token-main-surface-tertiary"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071=
 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.=
6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.986=
4C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 2=
0.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 =
12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 =
14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.7=
5719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.000=
01L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 =
6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"><=
/path></svg></button></span></div></div></div></div></div></div></div></div=
></div></article><article class=3D"w-full scroll-mb-[var(--thread-trailing-=
height,150px)] text-token-text-primary focus-visible:outline-2 focus-visibl=
e:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-21" =
data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div c=
lass=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md=
:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 f=
lex flex-col relative items-end"><div><div class=3D"pt-0"><div class=3D"giz=
mo-bot-avatar flex h-8 w-8 items-center justify-center overflow-hidden roun=
ded-full"><div class=3D"relative p-1 rounded-sm flex items-center justify-c=
enter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg w=
idth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col flex-grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"bbc0b365-3af4-4856-9821-71922e87d9f3" dir=3D"au=
to" class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 whit=
espace-normal break-words [.text-message+&amp;]:mt-5" data-message-model-sl=
ug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:p=
t-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert =
dark"><p>Unfortunately, I can't display the Jupyter Notebook interface dire=
ctly here. However, you can view the content by downloading the notebook us=
ing the link below and opening it in a Jupyter Notebook environment:</p><p>=
<span class=3D"" data-state=3D"closed"><a class=3D"cursor-pointer">Download=
 Cognitive_Milestone_Framework.ipynb</a></span></p><p>If you'd like, I can =
also provide the full content of the notebook in plain text or JSON format =
here for review. Let me know how you'd like to proceed!</p></div></div></di=
v></div><div class=3D"mb-2 flex gap-3 empty:hidden -ml-2"><div class=3D"ite=
ms-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-pri=
mary md:absolute md:sr-only"><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary" aria-label=3D"Read aloud" dat=
a-testid=3D"voice-play-turn-action-button"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary" aria-label=3D"Copy" d=
ata-testid=3D"copy-turn-action-button"><span class=3D"flex h-[30px] w-[30px=
] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3=
4315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 1=
9 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3=
4315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 =
20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM=
5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 =
19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path=
></svg></span></button></span><span class=3D"hidden"></span><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r122:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer h-[30px] rounded-md px-1 text-token-text-secondary hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M3.06957 10.8763C3.62331 6=
.43564 7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C18.0118 3=
.44772 18.4595 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C20.0118 8.=
55228 19.5641 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7=
 15 7H16.9571C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5.05=
42 11.1237C4.98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39011 11.924 3=
.00123 11.4243 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.9988 12.5=
757 20.9304 13.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.60762 20.=
1535 5.99999 18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44771 21 3.=
99999 20.5523 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 15H8.99999C9=
.55228 15 9.99999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.99999 17H=
7.04285C8.32433 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.3283 18.9458=
 12.8763C19.0141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D"currentC=
olor"></path></svg><span class=3D"overflow-hidden text-clip whitespace-nowr=
ap text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px; will-change=
: opacity;">4o</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path =
fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8=
.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8=
.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.7=
071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.=
4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.6834=
2 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></div></button></spa=
n></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></d=
iv></article><article class=3D"w-full scroll-mb-[var(--thread-trailing-heig=
ht,150px)] text-token-text-primary focus-visible:outline-2 focus-visible:ou=
tline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-22" data=
-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"=
m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><di=
v class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3=
xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col flex-grow"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"bbb212c1-aebd-4fe0-ad85-bdd010afef74" =
dir=3D"auto" class=3D"min-h-8 text-message flex w-full flex-col items-end g=
ap-2 whitespace-normal break-words [.text-message+&amp;]:mt-5"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div=
 class=3D"relative max-w-[70%] rounded-3xl bg-token-message-surface px-5 py=
-2.5"><div class=3D"whitespace-pre-wrap">Now. Create a UI to enable the fun=
ctions and view functions </div><div class=3D"absolute bottom-0 right-full =
top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:bloc=
k"><span class=3D"" data-state=3D"closed"><button aria-label=3D"Edit messag=
e" class=3D"flex h-9 w-9 items-center justify-center rounded-full text-toke=
n-text-secondary transition hover:bg-token-main-surface-tertiary"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071=
 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L11.=
6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.986=
4C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053 2=
0.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.19932 =
12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.87846 =
14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9.7=
5719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.000=
01L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 =
6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"><=
/path></svg></button></span></div></div></div></div></div></div></div></div=
></div></article><article class=3D"w-full scroll-mb-[var(--thread-trailing-=
height,150px)] text-token-text-primary focus-visible:outline-2 focus-visibl=
e:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-23" =
data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div c=
lass=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md=
:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 f=
lex flex-col relative items-end"><div><div class=3D"pt-0"><div class=3D"giz=
mo-bot-avatar flex h-8 w-8 items-center justify-center overflow-hidden roun=
ded-full"><div class=3D"relative p-1 rounded-sm flex items-center justify-c=
enter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg w=
idth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col flex-grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"df528d39-d2bd-419b-86b9-69f4a311982b" dir=3D"au=
to" class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 whit=
espace-normal break-words [.text-message+&amp;]:mt-5" data-message-model-sl=
ug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:p=
t-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert =
dark"><p>Creating a user interface (UI) to enable and view functions of the=
 <strong>Cognitive Milestone Framework</strong> can be achieved using a sim=
ple web-based tool with Python and Streamlit. Below is a fully implemented =
Python script that creates an interactive UI for the functions:</p><h3>Prer=
equisites</h3><ul><li>Install <strong>Streamlit</strong> if you don=E2=80=
=99t already have it:<pre class=3D"!overflow-visible"><div class=3D"contain=
-inline-size rounded-md border-[0.5px] border-token-border-medium relative =
bg-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-sur=
face-secondary select-none">bash</div><div class=3D"sticky top-9 md:top-[5.=
75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"><div=
 class=3D"flex items-center rounded bg-token-sidebar-surface-primary px-2 f=
ont-sans text-xs text-token-text-secondary dark:bg-token-main-surface-secon=
dary"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 it=
ems-center select-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.3=
4315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V=
19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.3=
4315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.55=
23 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44=
772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 =
15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>C=
opy code</button></span></div></div></div><div class=3D"overflow-y-auto p-4=
" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-bash">pip instal=
l streamlit
</code></div></div></pre></li></ul><hr><h3>Streamlit Script</h3><p>Save the=
 following script as <code>cognitive_framework_ui.py</code>:</p><pre class=
=3D"!overflow-visible"><div class=3D"contain-inline-size rounded-md border-=
[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primar=
y dark:bg-gray-950"><div class=3D"flex items-center text-token-text-seconda=
ry px-4 py-2 text-xs font-sans justify-between rounded-t-md h-9 bg-token-si=
debar-surface-primary dark:bg-token-main-surface-secondary select-none">pyt=
hon</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div class=3D"absolut=
e bottom-0 right-2 flex h-9 items-center"><div class=3D"flex items-center r=
ounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-t=
ext-secondary dark:bg-token-main-surface-secondary"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex gap-1 items-center select-none py-1">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></span></d=
iv></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> streamlit <span class=3D"hljs-keyword">as</span> st
<span class=3D"hljs-keyword">import</span> json
<span class=3D"hljs-keyword">from</span> datetime <span class=3D"hljs-keywo=
rd">import</span> datetime, timedelta

<span class=3D"hljs-comment"># File paths for logs</span>
SKILL_LOG_FILE =3D <span class=3D"hljs-string">"cognitive_skills_log.json"<=
/span>
MILESTONE_LOG_FILE =3D <span class=3D"hljs-string">"milestones.json"</span>
REFLECTION_LOG_FILE =3D <span class=3D"hljs-string">"reflection_logs.json"<=
/span>

<span class=3D"hljs-comment"># Initialize files if they don't exist</span>
<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">initialize_file</span>(<span class=3D"hljs-params">file_path</span>):
    <span class=3D"hljs-keyword">try</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(file_path, <span class=3D"hljs-string">"x"</span>) <span cl=
ass=3D"hljs-keyword">as</span> f:
            f.write(<span class=3D"hljs-string">"[]"</span>)
    <span class=3D"hljs-keyword">except</span> FileExistsError:
        <span class=3D"hljs-keyword">pass</span>

initialize_file(SKILL_LOG_FILE)
initialize_file(MILESTONE_LOG_FILE)
initialize_file(REFLECTION_LOG_FILE)

<span class=3D"hljs-comment"># Function to log skill task</span>
<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_skill_task</span>(<span class=3D"hljs-params">skill, task</span>):
    log_entry =3D {
        <span class=3D"hljs-string">"skill"</span>: skill,
        <span class=3D"hljs-string">"task"</span>: task,
        <span class=3D"hljs-string">"date"</span>: datetime.now().strftime(=
<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(SKILL_LOG_FILE, <span class=3D"hljs-string">"r+"</span>) <span =
class=3D"hljs-keyword">as</span> file:
        data =3D json.load(file)
        data.append(log_entry)
        file.seek(<span class=3D"hljs-number">0</span>)
        json.dump(data, file, indent=3D<span class=3D"hljs-number">4</span>=
)

<span class=3D"hljs-comment"># Function to log milestone</span>
<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_milestone</span>(<span class=3D"hljs-params">milestone, status</span>=
):
    log_entry =3D {
        <span class=3D"hljs-string">"milestone"</span>: milestone,
        <span class=3D"hljs-string">"status"</span>: status,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(MILESTONE_LOG_FILE, <span class=3D"hljs-string">"r+"</span>) <s=
pan class=3D"hljs-keyword">as</span> file:
        data =3D json.load(file)
        data.append(log_entry)
        file.seek(<span class=3D"hljs-number">0</span>)
        json.dump(data, file, indent=3D<span class=3D"hljs-number">4</span>=
)

<span class=3D"hljs-comment"># Function to log reflection</span>
<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">log_reflection</span>(<span class=3D"hljs-params">reflection</span>):
    log_entry =3D {
        <span class=3D"hljs-string">"reflection"</span>: reflection,
        <span class=3D"hljs-string">"timestamp"</span>: datetime.now().strf=
time(<span class=3D"hljs-string">"%Y-%m-%d %H:%M:%S"</span>)
    }
    <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">=
open</span>(REFLECTION_LOG_FILE, <span class=3D"hljs-string">"r+"</span>) <=
span class=3D"hljs-keyword">as</span> file:
        data =3D json.load(file)
        data.append(log_entry)
        file.seek(<span class=3D"hljs-number">0</span>)
        json.dump(data, file, indent=3D<span class=3D"hljs-number">4</span>=
)

<span class=3D"hljs-comment"># Streamlit UI</span>
st.title(<span class=3D"hljs-string">"Cognitive Milestone Framework UI"</sp=
an>)

<span class=3D"hljs-comment"># Tabs</span>
tab1, tab2, tab3, tab4 =3D st.tabs([<span class=3D"hljs-string">"Log Skill =
Task"</span>, <span class=3D"hljs-string">"Log Milestone"</span>, <span cla=
ss=3D"hljs-string">"Log Reflection"</span>, <span class=3D"hljs-string">"Vi=
ew Logs"</span>])

<span class=3D"hljs-comment"># Tab 1: Log Skill Task</span>
<span class=3D"hljs-keyword">with</span> tab1:
    st.header(<span class=3D"hljs-string">"Log a Skill Task"</span>)
    skill =3D st.text_input(<span class=3D"hljs-string">"Skill (e.g., REMEM=
BER, UNDERSTAND, etc.)"</span>)
    task =3D st.text_area(<span class=3D"hljs-string">"Task Description"</s=
pan>)
    <span class=3D"hljs-keyword">if</span> st.button(<span class=3D"hljs-st=
ring">"Log Skill Task"</span>):
        <span class=3D"hljs-keyword">if</span> skill <span class=3D"hljs-ke=
yword">and</span> task:
            log_skill_task(skill, task)
            st.success(<span class=3D"hljs-string">"Skill task logged succe=
ssfully!"</span>)
        <span class=3D"hljs-keyword">else</span>:
            st.error(<span class=3D"hljs-string">"Please provide both skill=
 and task."</span>)

<span class=3D"hljs-comment"># Tab 2: Log Milestone</span>
<span class=3D"hljs-keyword">with</span> tab2:
    st.header(<span class=3D"hljs-string">"Log a Milestone"</span>)
    milestone =3D st.text_input(<span class=3D"hljs-string">"Milestone Desc=
ription"</span>)
    status =3D st.selectbox(<span class=3D"hljs-string">"Status"</span>, [<=
span class=3D"hljs-string">"In Progress"</span>, <span class=3D"hljs-string=
">"Completed"</span>, <span class=3D"hljs-string">"Pending"</span>])
    <span class=3D"hljs-keyword">if</span> st.button(<span class=3D"hljs-st=
ring">"Log Milestone"</span>):
        <span class=3D"hljs-keyword">if</span> milestone:
            log_milestone(milestone, status)
            st.success(<span class=3D"hljs-string">"Milestone logged succes=
sfully!"</span>)
        <span class=3D"hljs-keyword">else</span>:
            st.error(<span class=3D"hljs-string">"Please provide a mileston=
e description."</span>)

<span class=3D"hljs-comment"># Tab 3: Log Reflection</span>
<span class=3D"hljs-keyword">with</span> tab3:
    st.header(<span class=3D"hljs-string">"Log a Reflection"</span>)
    reflection =3D st.text_area(<span class=3D"hljs-string">"Reflection Con=
tent"</span>)
    <span class=3D"hljs-keyword">if</span> st.button(<span class=3D"hljs-st=
ring">"Log Reflection"</span>):
        <span class=3D"hljs-keyword">if</span> reflection:
            log_reflection(reflection)
            st.success(<span class=3D"hljs-string">"Reflection logged succe=
ssfully!"</span>)
        <span class=3D"hljs-keyword">else</span>:
            st.error(<span class=3D"hljs-string">"Please provide reflection=
 content."</span>)

<span class=3D"hljs-comment"># Tab 4: View Logs</span>
<span class=3D"hljs-keyword">with</span> tab4:
    st.header(<span class=3D"hljs-string">"View Logs"</span>)
    log_type =3D st.selectbox(<span class=3D"hljs-string">"Select Log Type"=
</span>, [<span class=3D"hljs-string">"Skill Tasks"</span>, <span class=3D"=
hljs-string">"Milestones"</span>, <span class=3D"hljs-string">"Reflections"=
</span>])
    <span class=3D"hljs-keyword">if</span> log_type =3D=3D <span class=3D"h=
ljs-string">"Skill Tasks"</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(SKILL_LOG_FILE, <span class=3D"hljs-string">"r"</span>) <sp=
an class=3D"hljs-keyword">as</span> file:
            data =3D json.load(file)
            st.json(data)
    <span class=3D"hljs-keyword">elif</span> log_type =3D=3D <span class=3D=
"hljs-string">"Milestones"</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(MILESTONE_LOG_FILE, <span class=3D"hljs-string">"r"</span>)=
 <span class=3D"hljs-keyword">as</span> file:
            data =3D json.load(file)
            st.json(data)
    <span class=3D"hljs-keyword">elif</span> log_type =3D=3D <span class=3D=
"hljs-string">"Reflections"</span>:
        <span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_=
in">open</span>(REFLECTION_LOG_FILE, <span class=3D"hljs-string">"r"</span>=
) <span class=3D"hljs-keyword">as</span> file:
            data =3D json.load(file)
            st.json(data)
</code></div></div></pre><hr><h3>How to Run</h3><ol><li>Save the script as =
<code>cognitive_framework_ui.py</code>.</li><li>Run the script using Stream=
lit:<pre class=3D"!overflow-visible"><div class=3D"contain-inline-size roun=
ded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-=
surface-primary dark:bg-gray-950"><div class=3D"flex items-center text-toke=
n-text-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md h=
-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary se=
lect-none">bash</div><div class=3D"sticky top-9 md:top-[5.75rem]"><div clas=
s=3D"absolute bottom-0 right-2 flex h-9 items-center"><div class=3D"flex it=
ems-center rounded bg-token-sidebar-surface-primary px-2 font-sans text-xs =
text-token-text-secondary dark:bg-token-main-surface-secondary"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center select=
-none py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button>=
</span></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><co=
de class=3D"!whitespace-pre hljs language-bash">streamlit run cognitive_fra=
mework_ui.py
</code></div></div></pre></li><li>Open the URL shown in your terminal (usua=
lly <code>http://localhost:8501</code>) in your web browser.</li></ol><hr><=
h3>Features</h3><ol><li><strong>Log Skill Task</strong>: Allows the user to=
 log a task associated with a specific skill.</li><li><strong>Log Milestone=
</strong>: Lets the user log a milestone with its current status.</li><li><=
strong>Log Reflection</strong>: Enables the user to log reflections or obse=
rvations.</li><li><strong>View Logs</strong>: Displays logged data (skill t=
asks, milestones, or reflections) in JSON format for easy review.</li></ol>=
<p>Let me know if you'd like further assistance with customization or deplo=
yment!</p></div></div></div></div><div class=3D"mb-2 flex gap-3 empty:hidde=
n -ml-2"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1=
 bg-token-main-surface-primary md:absolute md:sr-only"><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounde=
d-lg text-token-text-secondary hover:bg-token-main-surface-secondary" aria-=
label=3D"Read aloud" data-testid=3D"voice-play-turn-action-button"><span cl=
ass=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6=
7572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8=
.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 =
6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.909=
9ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 =
10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.000=
05C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3=
5665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 =
10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.=
4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.684=
6 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 1=
0.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3=
166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C=
18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.=
5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.592=
1 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16=
.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.859=
05 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></s=
pan></button></span><span class=3D"" data-state=3D"closed"><button class=3D=
"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary=
" aria-label=3D"Copy" data-testid=3D"copy-turn-action-button"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V1=
4C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 2=
2 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3431=
5 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.=
44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 =
20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fil=
l=3D"currentColor"></path></svg></span></button></span><span class=3D"hidde=
n"></span><span class=3D"" data-state=3D"closed"><button type=3D"button" id=
=3D"radix-:r12b:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"cursor-pointer h-[30px] rounded-md px-1 text-token-tex=
t-secondary hover:bg-token-main-surface-secondary"><div class=3D"flex items=
-center pb-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M3=
.06957 10.8763C3.62331 6.43564 7.40967 3 12 3C14.2824 3 16.4028 3.85067 18.=
0118 5.25439V4C18.0118 3.44772 18.4595 3 19.0118 3C19.5641 3 20.0118 3.4477=
2 20.0118 4V8C20.0118 8.55228 19.5641 9 19.0118 9H15C14.4477 9 14 8.55228 1=
4 8C14 7.44772 14.4477 7 15 7H16.9571C15.6757 5.76379 13.9101 5 12 5C8.4310=
8 5 5.48466 7.67174 5.0542 11.1237C4.98586 11.6718 4.48619 12.0607 3.93815 =
11.9923C3.39011 11.924 3.00123 11.4243 3.06957 10.8763ZM20.0618 12.0077C20.=
6099 12.076 20.9988 12.5757 20.9304 13.1237C20.3767 17.5644 16.5903 21 12 2=
1C9.72322 21 7.60762 20.1535 5.99999 18.7559V20C5.99999 20.5523 5.55228 21 =
4.99999 21C4.44771 21 3.99999 20.5523 3.99999 20V16C3.99999 15.4477 4.44771=
 15 4.99999 15H8.99999C9.55228 15 9.99999 15.4477 9.99999 16C9.99999 16.552=
3 9.55228 17 8.99999 17H7.04285C8.32433 18.2362 10.0899 19 12 19C15.5689 19=
 18.5153 16.3283 18.9458 12.8763C19.0141 12.3282 19.5138 11.9393 20.0618 12=
.0077Z" fill=3D"currentColor"></path></svg><span class=3D"overflow-hidden t=
ext-clip whitespace-nowrap text-sm" style=3D"opacity: 0; padding-left: 0px;=
 width: 0px; will-change: opacity;">4o</span><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5=
.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L1=
7.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68=
342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652=
 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.9023=
7 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></=
svg></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></d=
iv></div></div></div></div></article><article class=3D"w-full scroll-mb-[va=
r(--thread-trailing-height,150px)] text-token-text-primary focus-visible:ou=
tline-2 focus-visible:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"co=
nversation-turn-24" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You =
said:</h5><div class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:p=
x-5 lg:px-4 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:g=
ap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D=
"group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col flex-gr=
ow"><div data-message-author-role=3D"user" data-message-id=3D"bbb21599-cc63=
-414c-80fb-0ef2ee9a30c0" dir=3D"auto" class=3D"min-h-8 text-message flex w-=
full flex-col items-end gap-2 whitespace-normal break-words [.text-message+=
&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-token-=
message-surface px-5 py-2.5"><div class=3D"whitespace-pre-wrap">Make a note=
book for this new UI version</div><div class=3D"absolute bottom-0 right-ful=
l top-0 -mr-3.5 hidden pr-5 pt-1 [.group\/conversation-turn:hover_&amp;]:bl=
ock"><span class=3D"" data-state=3D"closed"><button aria-label=3D"Edit mess=
age" class=3D"flex h-9 w-9 items-center justify-center rounded-full text-to=
ken-text-secondary transition hover:bg-token-main-surface-tertiary"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.70=
71 4.2929C21.4784 6.06414 21.4784 8.93588 19.7071 10.7071L18.7073 11.7069L1=
1.6135 18.8007C10.8766 19.5376 9.92793 20.0258 8.89999 20.1971L4.16441 20.9=
864C3.84585 21.0395 3.52127 20.9355 3.29291 20.7071C3.06454 20.4788 2.96053=
 20.1542 3.01362 19.8356L3.80288 15.1C3.9742 14.0721 4.46243 13.1234 5.1993=
2 12.3865L13.2929 4.29291ZM13 7.41422L6.61353 13.8007C6.1714 14.2428 5.8784=
6 14.8121 5.77567 15.4288L5.21656 18.7835L8.57119 18.2244C9.18795 18.1216 9=
.75719 17.8286 10.1993 17.3865L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.0=
0001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.283=
1 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z" fill=3D"currentColor"=
></path></svg></button></span></div></div></div></div></div></div></div></d=
iv></div></article><article class=3D"w-full scroll-mb-[var(--thread-trailin=
g-height,150px)] text-token-text-primary focus-visible:outline-2 focus-visi=
ble:outline-offset-[-4px]" dir=3D"auto" data-testid=3D"conversation-turn-25=
" data-scroll-anchor=3D"true"><h6 class=3D"sr-only">ChatGPT said:</h6><div =
class=3D"m-auto text-base py-[18px] px-3 md:px-4 w-full md:px-5 lg:px-4 xl:=
px-5"><div class=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 m=
d:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 =
flex flex-col relative items-end"><div><div class=3D"pt-0"><div class=3D"gi=
zmo-bot-avatar flex h-8 w-8 items-center justify-center overflow-hidden rou=
nded-full"><div class=3D"relative p-1 rounded-sm flex items-center justify-=
center bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg =
width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col flex-grow"><span class=3D"first:mt-0 relative =
h-8 text-token-text-secondary hover:text-token-text-primary my-1.5"><div cl=
ass=3D"group absolute left-0 top-0 mr-1.5 h-8 overflow-hidden mt-1"><button=
 class=3D"" style=3D"opacity: 1; will-change: auto;"><div class=3D"flex ite=
ms-center justify-start gap-1"><span>Analyzed</span><svg width=3D"24" heigh=
t=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289L18.7071 13.2929C19.097=
6 13.6834 19.0976 14.3166 18.7071 14.7071C18.3166 15.0976 17.6834 15.0976 1=
7.2929 14.7071L12 9.41421L6.70711 14.7071C6.31658 15.0976 5.68342 15.0976 5=
.29289 14.7071C4.90237 14.3166 4.90237 13.6834 5.29289 13.2929L11.2929 7.29=
289C11.4804 7.10536 11.7348 7 12 7Z" fill=3D"currentColor"></path></svg></d=
iv></button></div></span><div class=3D"overflow-hidden" style=3D"opacity: 1=
; height: auto; will-change: auto; transform: none;"><div class=3D"mb-3 mt-=
0.5 overflow-hidden rounded-xl bg-black"><div class=3D"markdown prose w-ful=
l break-words dark:prose-invert dark markdown prose w-full break-words dark=
:prose-invert dark"><pre class=3D"!overflow-visible"><div class=3D"contain-=
inline-size rounded-md border-[0.5px] border-token-border-medium relative b=
g-token-sidebar-surface-primary dark:bg-gray-950"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n rounded-t-md h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surf=
ace-secondary select-none">python</div><div class=3D"sticky top-9 md:top-[5=
.75rem]"><div class=3D"absolute bottom-0 right-2 flex h-9 items-center"><di=
v class=3D"flex items-center rounded bg-token-sidebar-surface-primary px-2 =
font-sans text-xs text-token-text-secondary dark:bg-token-main-surface-seco=
ndary"><div class=3D"mr-2 flex items-center gap-2 border-r border-token-bor=
der-medium pr-2"><label for=3D"ada-always-show">Always show details</label>=
<button type=3D"button" role=3D"switch" aria-checked=3D"true" data-state=3D=
"checked" value=3D"on" id=3D"ada-always-show" aria-label=3D"Toggle to alway=
s expand detail view for code analysis on" class=3D"focus-visible:outline-n=
one focus-visible:ring-2 focus-visible:ring-token-text-secondary focus-visi=
ble:ring-offset-2 focus-visible:radix-state-checked:ring-black focus-visibl=
e:dark:ring-token-main-surface-primary focus-visible:dark:radix-state-check=
ed:ring-green-600 cursor-pointer bg-gray-200 radix-state-checked:bg-black d=
ark:border dark:border-token-border-medium dark:bg-transparent relative shr=
ink-0 rounded-full dark:radix-state-checked:border-green-600 dark:radix-sta=
te-checked:bg-green-600 h-[19px] w-[30px]"><span data-state=3D"checked" cla=
ss=3D"flex items-center justify-center rounded-full transition-transform du=
ration-100 will-change-transform ltr:translate-x-0.5 rtl:-translate-x-0.5 b=
g-white h-[15px] w-[15px] ltr:radix-state-checked:translate-x-[13px] rtl:ra=
dix-state-checked:translate-x-[-13px]"></span></button></div><span class=3D=
"" data-state=3D"closed"><button class=3D"flex gap-1 items-center select-no=
ne py-1"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D=
"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.65=
69 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.656=
9 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H=
14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4477=
2 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10=
V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 =
14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>Copy code</button></s=
pan></div></div></div><div class=3D"overflow-y-auto p-4" dir=3D"ltr"><code =
class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-comment"=
># Creating a Jupyter Notebook for the UI version using Streamlit</span>
<span class=3D"hljs-keyword">import</span> json

notebook_content =3D {
    <span class=3D"hljs-string">"cells"</span>: [
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Cognitive Milestone Framewor=
k UI\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"This notebook outlines the cre=
ation of a Streamlit-based UI for the Cognitive Milestone Framework, allowi=
ng users to log and view skill tasks, milestones, and reflections."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"# Install necessary libraries =
(uncomment if not already installed)\n"</span>,
                <span class=3D"hljs-string">"# !pip install streamlit"</spa=
n>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"markdown"</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"## Streamlit Code\n"</span>,
                <span class=3D"hljs-string">"Below is the complete Streamli=
t code for the Cognitive Milestone Framework UI."</span>
            ]
        },
        {
            <span class=3D"hljs-string">"cell_type"</span>: <span class=3D"=
hljs-string">"code"</span>,
            <span class=3D"hljs-string">"execution_count"</span>: <span cla=
ss=3D"hljs-literal">None</span>,
            <span class=3D"hljs-string">"metadata"</span>: {},
            <span class=3D"hljs-string">"outputs"</span>: [],
            <span class=3D"hljs-string">"source"</span>: [
                <span class=3D"hljs-string">"import streamlit as st\n"</spa=
n>,
                <span class=3D"hljs-string">"import json\n"</span>,
                <span class=3D"hljs-string">"from datetime import datetime,=
 timedelta\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# File paths for logs\n"</span=
>,
                <span class=3D"hljs-string">"SKILL_LOG_FILE =3D \"cognitive=
_skills_log.json\"\n"</span>,
                <span class=3D"hljs-string">"MILESTONE_LOG_FILE =3D \"miles=
tones.json\"\n"</span>,
                <span class=3D"hljs-string">"REFLECTION_LOG_FILE =3D \"refl=
ection_logs.json\"\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Initialize files if they don=
't exist\n"</span>,
                <span class=3D"hljs-string">"def initialize_file(file_path)=
:\n"</span>,
                <span class=3D"hljs-string">"    try:\n"</span>,
                <span class=3D"hljs-string">"        with open(file_path, \=
"x\") as f:\n"</span>,
                <span class=3D"hljs-string">"            f.write(\"[]\")\n"=
</span>,
                <span class=3D"hljs-string">"    except FileExistsError:\n"=
</span>,
                <span class=3D"hljs-string">"        pass\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"initialize_file(SKILL_LOG_FILE=
)\n"</span>,
                <span class=3D"hljs-string">"initialize_file(MILESTONE_LOG_=
FILE)\n"</span>,
                <span class=3D"hljs-string">"initialize_file(REFLECTION_LOG=
_FILE)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Function to log skill task\n=
"</span>,
                <span class=3D"hljs-string">"def log_skill_task(skill, task=
):\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"skill\": skill,\n"</=
span>,
                <span class=3D"hljs-string">"        \"task\": task,\n"</sp=
an>,
                <span class=3D"hljs-string">"        \"date\": datetime.now=
().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(SKILL_LOG_FILE, =
\"r+\") as file:\n"</span>,
                <span class=3D"hljs-string">"        data =3D json.load(fil=
e)\n"</span>,
                <span class=3D"hljs-string">"        data.append(log_entry)=
\n"</span>,
                <span class=3D"hljs-string">"        file.seek(0)\n"</span>=
,
                <span class=3D"hljs-string">"        json.dump(data, file, =
indent=3D4)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Function to log milestone\n"=
</span>,
                <span class=3D"hljs-string">"def log_milestone(milestone, s=
tatus):\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"milestone\": milesto=
ne,\n"</span>,
                <span class=3D"hljs-string">"        \"status\": status,\n"=
</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(MILESTONE_LOG_FI=
LE, \"r+\") as file:\n"</span>,
                <span class=3D"hljs-string">"        data =3D json.load(fil=
e)\n"</span>,
                <span class=3D"hljs-string">"        data.append(log_entry)=
\n"</span>,
                <span class=3D"hljs-string">"        file.seek(0)\n"</span>=
,
                <span class=3D"hljs-string">"        json.dump(data, file, =
indent=3D4)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Function to log reflection\n=
"</span>,
                <span class=3D"hljs-string">"def log_reflection(reflection)=
:\n"</span>,
                <span class=3D"hljs-string">"    log_entry =3D {\n"</span>,
                <span class=3D"hljs-string">"        \"reflection\": reflec=
tion,\n"</span>,
                <span class=3D"hljs-string">"        \"timestamp\": datetim=
e.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n"</span>,
                <span class=3D"hljs-string">"    }\n"</span>,
                <span class=3D"hljs-string">"    with open(REFLECTION_LOG_F=
ILE, \"r+\") as file:\n"</span>,
                <span class=3D"hljs-string">"        data =3D json.load(fil=
e)\n"</span>,
                <span class=3D"hljs-string">"        data.append(log_entry)=
\n"</span>,
                <span class=3D"hljs-string">"        file.seek(0)\n"</span>=
,
                <span class=3D"hljs-string">"        json.dump(data, file, =
indent=3D4)\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Streamlit UI\n"</span>,
                <span class=3D"hljs-string">"st.title(\"Cognitive Milestone=
 Framework UI\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Tabs\n"</span>,
                <span class=3D"hljs-string">"tab1, tab2, tab3, tab4 =3D st.=
tabs([\"Log Skill Task\", \"Log Milestone\", \"Log Reflection\", \"View Log=
s\"])\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Tab 1: Log Skill Task\n"</sp=
an>,
                <span class=3D"hljs-string">"with tab1:\n"</span>,
                <span class=3D"hljs-string">"    st.header(\"Log a Skill Ta=
sk\")\n"</span>,
                <span class=3D"hljs-string">"    skill =3D st.text_input(\"=
Skill (e.g., REMEMBER, UNDERSTAND, etc.)\")\n"</span>,
                <span class=3D"hljs-string">"    task =3D st.text_area(\"Ta=
sk Description\")\n"</span>,
                <span class=3D"hljs-string">"    if st.button(\"Log Skill T=
ask\"):\n"</span>,
                <span class=3D"hljs-string">"        if skill and task:\n"<=
/span>,
                <span class=3D"hljs-string">"            log_skill_task(ski=
ll, task)\n"</span>,
                <span class=3D"hljs-string">"            st.success(\"Skill=
 task logged successfully!\")\n"</span>,
                <span class=3D"hljs-string">"        else:\n"</span>,
                <span class=3D"hljs-string">"            st.error(\"Please =
provide both skill and task.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Tab 2: Log Milestone\n"</spa=
n>,
                <span class=3D"hljs-string">"with tab2:\n"</span>,
                <span class=3D"hljs-string">"    st.header(\"Log a Mileston=
e\")\n"</span>,
                <span class=3D"hljs-string">"    milestone =3D st.text_inpu=
t(\"Milestone Description\")\n"</span>,
                <span class=3D"hljs-string">"    status =3D st.selectbox(\"=
Status\", [\"In Progress\", \"Completed\", \"Pending\"])\n"</span>,
                <span class=3D"hljs-string">"    if st.button(\"Log Milesto=
ne\"):\n"</span>,
                <span class=3D"hljs-string">"        if milestone:\n"</span=
>,
                <span class=3D"hljs-string">"            log_milestone(mile=
stone, status)\n"</span>,
                <span class=3D"hljs-string">"            st.success(\"Miles=
tone logged successfully!\")\n"</span>,
                <span class=3D"hljs-string">"        else:\n"</span>,
                <span class=3D"hljs-string">"            st.error(\"Please =
provide a milestone description.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Tab 3: Log Reflection\n"</sp=
an>,
                <span class=3D"hljs-string">"with tab3:\n"</span>,
                <span class=3D"hljs-string">"    st.header(\"Log a Reflecti=
on\")\n"</span>,
                <span class=3D"hljs-string">"    reflection =3D st.text_are=
a(\"Reflection Content\")\n"</span>,
                <span class=3D"hljs-string">"    if st.button(\"Log Reflect=
ion\"):\n"</span>,
                <span class=3D"hljs-string">"        if reflection:\n"</spa=
n>,
                <span class=3D"hljs-string">"            log_reflection(ref=
lection)\n"</span>,
                <span class=3D"hljs-string">"            st.success(\"Refle=
ction logged successfully!\")\n"</span>,
                <span class=3D"hljs-string">"        else:\n"</span>,
                <span class=3D"hljs-string">"            st.error(\"Please =
provide reflection content.\")\n"</span>,
                <span class=3D"hljs-string">"\n"</span>,
                <span class=3D"hljs-string">"# Tab 4: View Logs\n"</span>,
                <span class=3D"hljs-string">"with tab4:\n"</span>,
                <span class=3D"hljs-string">"    st.header(\"View Logs\")\n=
"</span>,
                <span class=3D"hljs-string">"    log_type =3D st.selectbox(=
\"Select Log Type\", [\"Skill Tasks\", \"Milestones\", \"Reflections\"])\n"=
</span>,
                <span class=3D"hljs-string">"    if log_type =3D=3D \"Skill=
 Tasks\":\n"</span>,
                <span class=3D"hljs-string">"        with open(SKILL_LOG_FI=
LE, \"r\") as file:\n"</span>,
                <span class=3D"hljs-string">"            data =3D json.load=
(file)\n"</span>,
                <span class=3D"hljs-string">"            st.json(data)\n"</=
span>,
                <span class=3D"hljs-string">"    elif log_type =3D=3D \"Mil=
estones\":\n"</span>,
                <span class=3D"hljs-string">"        with open(MILESTONE_LO=
G_FILE, \"r\") as file:\n"</span>,
                <span class=3D"hljs-string">"            data =3D json.load=
(file)\n"</span>,
                <span class=3D"hljs-string">"            st.json(data)\n"</=
span>,
                <span class=3D"hljs-string">"    elif log_type =3D=3D \"Ref=
lections\":\n"</span>,
                <span class=3D"hljs-string">"        with open(REFLECTION_L=
OG_FILE, \"r\") as file:\n"</span>,
                <span class=3D"hljs-string">"            data =3D json.load=
(file)\n"</span>,
                <span class=3D"hljs-string">"            st.json(data)"</sp=
an>
            ]
        }
    ],
    <span class=3D"hljs-string">"metadata"</span>: {
        <span class=3D"hljs-string">"kernelspec"</span>: {
            <span class=3D"hljs-string">"display_name"</span>: <span class=
=3D"hljs-string">"Python 3"</span>,
            <span class=3D"hljs-string">"language"</span>: <span class=3D"h=
ljs-string">"python"</span>,
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python3"</span>
        },
        <span class=3D"hljs-string">"language_info"</span>: {
            <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-=
string">"python"</span>,
            <span class=3D"hljs-string">"version"</span>: <span class=3D"hl=
js-string">"3.8.8"</span>
        }
    },
    <span class=3D"hljs-string">"nbformat"</span>: <span class=3D"hljs-numb=
er">4</span>,
    <span class=3D"hljs-string">"nbformat_minor"</span>: <span class=3D"hlj=
s-number">5</span>
}

<span class=3D"hljs-comment"># Save as .ipynb file</span>
file_path =3D <span class=3D"hljs-string">"/mnt/data/Cognitive_Milestone_UI=
.ipynb"</span>
<span class=3D"hljs-keyword">with</span> <span class=3D"hljs-built_in">open=
</span>(file_path, <span class=3D"hljs-string">"w"</span>) <span class=3D"h=
ljs-keyword">as</span> notebook_file:
    json.dump(notebook_content, notebook_file)

file_path
</code></div></div></pre></div><div class=3D"bg-gray-700 p-4 text-xs"><div =
class=3D"mb-1 text-gray-400">Result</div><div class=3D"prose flex flex-col-=
reverse text-white"><pre class=3D"shrink-0">'/mnt/data/Cognitive_Milestone_=
UI.ipynb'</pre></div></div></div></div><div data-message-author-role=3D"ass=
istant" data-message-id=3D"64ebd4ae-44b8-46f7-bd5b-7710d154a173" dir=3D"aut=
o" class=3D"min-h-8 text-message flex w-full flex-col items-end gap-2 white=
space-normal break-words [.text-message+&amp;]:mt-5" data-message-model-slu=
g=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt=
-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert d=
ark"><p>The Jupyter Notebook for the UI version has been created. You can d=
ownload it using the link below:</p><p><span class=3D"" data-state=3D"close=
d"><a class=3D"cursor-pointer">Cognitive_Milestone_UI.ipynb</a></span></p><=
p>Open it in your Jupyter Notebook environment and review the Streamlit-bas=
ed UI implementation. Let me know if you need further assistance! =E2=80=8B=
<span class=3D"" data-state=3D"closed"><button><svg xmlns=3D"http://www.w3.=
org/2000/svg" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"-mt-0.5 ml-0.5 i=
nline-block text-token-link hover:text-token-link-hover" width=3D"19" heigh=
t=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1.64543 0.75 2=
.75V11.65C0.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 13.65 2.8625 =
13.65 2.8625 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98 13.65H15.537=
5H15.65C16.7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.64543 16.7546 =
0.75 15.65 0.75H15.5375H13.98" stroke=3D"currentColor" stroke-width=3D"1.5"=
 stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M5.55=
283 4.21963C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.19927 4.51252=
 4.19927 4.9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.01963C4.19927 9.3=
1252 4.19927 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10.3732 5.55283=
 10.0803L7.95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.95283 6.61963L5.5=
5283 4.21963Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=
=3D"0.2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=
=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.55003C8.97753=
 9.99186 9.3357 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775 9.99186 1=
4.0775 9.55003C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.77753Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.1"></path></s=
vg></button></span>=E2=80=8B</p></div></div></div></div><div class=3D"mb-2 =
flex gap-3 empty:hidden -ml-2"><div class=3D"items-center justify-start rou=
nded-xl p-1 flex"><div class=3D"flex items-center"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:=
bg-token-main-surface-secondary" aria-label=3D"Read aloud" data-testid=3D"v=
oice-play-turn-action-button"><span class=3D"flex h-[30px] w-[30px] items-c=
enter justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.474=
85 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8=
.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772=
 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.48=
28 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13=
 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.6110=
2 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.0000=
5H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 2=
1.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.85=
07 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 =
17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.=
9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.7126=
2C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7=
.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.49=
96 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 =
16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4=
637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653=
 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" =
fill=3D"currentColor"></path></svg></span></button></span><span class=3D"" =
data-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary=
 hover:bg-token-main-surface-secondary" aria-label=3D"Copy" data-testid=3D"=
copy-turn-action-button"><span class=3D"flex h-[30px] w-[30px] items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2=
 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 =
20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7=
 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 =
14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 =
4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V=
10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></span>=
</button></span><span class=3D"hidden"></span><span class=3D"" data-state=
=3D"closed"><button type=3D"button" id=3D"radix-:r12j:" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer h=
-[30px] rounded-md px-1 text-token-text-secondary hover:bg-token-main-surfa=
ce-secondary"><div class=3D"flex items-center pb-0"><svg width=3D"24" heigh=
t=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-md"><path d=3D"M3.06957 10.8763C3.62331 6.43564 7.4096=
7 3 12 3C14.2824 3 16.4028 3.85067 18.0118 5.25439V4C18.0118 3.44772 18.459=
5 3 19.0118 3C19.5641 3 20.0118 3.44772 20.0118 4V8C20.0118 8.55228 19.5641=
 9 19.0118 9H15C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7H16.9571=
C15.6757 5.76379 13.9101 5 12 5C8.43108 5 5.48466 7.67174 5.0542 11.1237C4.=
98586 11.6718 4.48619 12.0607 3.93815 11.9923C3.39011 11.924 3.00123 11.424=
3 3.06957 10.8763ZM20.0618 12.0077C20.6099 12.076 20.9988 12.5757 20.9304 1=
3.1237C20.3767 17.5644 16.5903 21 12 21C9.72322 21 7.60762 20.1535 5.99999 =
18.7559V20C5.99999 20.5523 5.55228 21 4.99999 21C4.44771 21 3.99999 20.5523=
 3.99999 20V16C3.99999 15.4477 4.44771 15 4.99999 15H8.99999C9.55228 15 9.9=
9999 15.4477 9.99999 16C9.99999 16.5523 9.55228 17 8.99999 17H7.04285C8.324=
33 18.2362 10.0899 19 12 19C15.5689 19 18.5153 16.3283 18.9458 12.8763C19.0=
141 12.3282 19.5138 11.9393 20.0618 12.0077Z" fill=3D"currentColor"></path>=
</svg><span class=3D"overflow-hidden text-clip whitespace-nowrap text-sm" s=
tyle=3D"opacity: 0; padding-left: 0px; width: 0px; will-change: opacity;">4=
o</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.3165=
8 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.316=
6 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L1=
2.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 =
11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.2=
9289Z" fill=3D"currentColor"></path></svg></div></button></span></div></div=
></div><div class=3D"pr-2 lg:pr-0"></div><div class=3D"mt-3 w-full empty:hi=
dden"><div class=3D"text-center"></div></div></div></div></div></div></arti=
cle></div></div></div></div></div><div class=3D"md:pt-0 dark:border-white/2=
0 md:border-transparent md:dark:border-transparent w-full"><div><div class=
=3D"m-auto text-base px-3 md:px-4 w-full md:px-5 lg:px-4 xl:px-5"><div clas=
s=3D"mx-auto flex flex-1 gap-4 text-base md:gap-5 lg:gap-6 md:max-w-3xl lg:=
max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex justify-center"></div><f=
orm class=3D"w-full" type=3D"button" aria-haspopup=3D"dialog" aria-expanded=
=3D"false" aria-controls=3D"radix-:ruv:" data-state=3D"closed"><div class=
=3D"relative flex h-full max-w-full flex-1 flex-col"><div class=3D"absolute=
 bottom-full left-0 right-0 z-20"></div><div class=3D"relative h-0"><div cl=
ass=3D"absolute bottom-3 space-y-2 z-20"></div></div><div class=3D"group re=
lative flex w-full items-center"><grammarly-extension data-grammarly-shadow=
-root=3D"true" class=3D"dnXmp" style=3D"position: absolute; top: 0px; left:=
 0px; pointer-events: none;"><template shadowmode=3D"open"><div data-gramma=
rly-part=3D"button" style=3D"position: absolute; top: 0px; left: 0px;"><div=
 style=3D"box-sizing: content-box; top: 6px; left: 18px; width: 708px; heig=
ht: 40px; position: relative; pointer-events: none; overflow: hidden; borde=
r: 0px; border-radius: 0px; padding: 0px; margin: 0px;"><div style=3D"box-s=
izing: content-box; top: 8px; left: 0px; width: 708px; height: 24px; positi=
on: relative; pointer-events: none; overflow: hidden; border: 0px; border-r=
adius: 0px; padding: 0px; margin: 0px;"><div style=3D"position: absolute; t=
ransform: translate(-100%, -100%); top: 27px; left: 708px; width: auto; hei=
ght: auto; pointer-events: all;"><div class=3D"amkYk"><div><div class=3D"pt=
GJG" style=3D"display: flex; pointer-events: auto; transform-origin: right =
center; transform: scale(0.8);"><div style=3D"position: relative; align-sel=
f: stretch; display: flex; align-items: center;"></div><div class=3D"jeWQ0 =
q44yz"><link rel=3D"stylesheet" type=3D"text/css" href=3D"chrome-extension:=
//kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/cheetah.styles.css"><button data=
-grammarly-part=3D"cheetah-ideate-button" aria-label=3D"Rewrite with Gramma=
rly" class=3D"_ErYR"><div class=3D"i8HXG"></div></button><span class=3D"AyD=
lc"></span></div><span class=3D"UP62D"><button class=3D"vkuMN" type=3D"butt=
on" data-grammarly-part=3D"gbutton" data-gbutton-checking-status=3D"idle" a=
ria-label=3D"Open Grammarly."><div class=3D"VNMHv BWwwG" style=3D"width: 22=
px; height: 22px; padding: 2px;"><div class=3D"L704q"><div data-purpose=3D"=
animation-wrapper"><div class=3D"k1mI2"><div class=3D"BHWNr"><div class=3D"=
R7Ehf fspWv" style=3D"width: 22px; height: 22px;">&nbsp;</div></div></div><=
div class=3D"fDZiE" data-grammarly-part=3D"gbuttonBadge"></div></div></div>=
</div></button></span></div></div></div></div></div><div style=3D"box-sizin=
g: content-box; width: 2269px; height: 1370px; pointer-events: none; visibi=
lity: hidden;"></div></div></div></template></grammarly-extension><grammarl=
y-extension data-grammarly-shadow-root=3D"true" class=3D"dnXmp" style=3D"po=
sition: absolute; top: 0px; left: 0px; pointer-events: none;"><template sha=
dowmode=3D"open"><div data-grammarly-part=3D"highlights" style=3D"position:=
 absolute; top: 0px; left: 0px;"><div style=3D"box-sizing: content-box; top=
: 6px; left: 18px; width: 708px; height: 40px; position: relative; pointer-=
events: none; overflow: hidden; border: 0px; border-radius: 0px; padding: 0=
px; margin: 0px;"><div style=3D"box-sizing: content-box; top: 8px; left: 0p=
x; width: 708px; height: 24px; position: relative; pointer-events: none; ov=
erflow: hidden; border: 0px; border-radius: 0px; padding: 0px; margin: 0px;=
"><div style=3D"position: absolute; top: 0px; left: 0px;"><div style=3D"hei=
ght: 1354px; width: 2269px;"><link rel=3D"stylesheet" type=3D"text/css" hre=
f=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/cheetah.st=
yles.css"></div></div></div><div style=3D"box-sizing: content-box; width: 2=
269px; height: 1370px; pointer-events: none; visibility: hidden;"></div></d=
iv></div></template></grammarly-extension><div id=3D"composer-background" c=
lass=3D"flex w-full flex-col transition-colors contain-inline-size cursor-t=
ext rounded-3xl px-2.5 py-1 bg-[#f4f4f4] dark:bg-token-main-surface-seconda=
ry"><div class=3D"flex min-h-[44px] items-center px-2"><div class=3D"max-w-=
full flex-1"><div class=3D"_prosemirror-parent_15ceg_1 text-token-text-prim=
ary max-h-[25dvh] max-h-52 overflow-auto default-browser"><textarea class=
=3D"block h-10 w-full resize-none border-0 bg-transparent px-0 py-2 text-to=
ken-text-primary placeholder:text-token-text-secondary" placeholder=3D"Mess=
age ChatGPT" style=3D"display: none;"></textarea><div contenteditable=3D"tr=
ue" translate=3D"no" class=3D"ProseMirror" id=3D"prompt-textarea" spellchec=
k=3D"false"><p data-placeholder=3D"Message ChatGPT" class=3D"placeholder"><=
br class=3D"ProseMirror-trailingBreak"></p></div></div></div></div><div cla=
ss=3D"flex h-[44px] items-center justify-between"><div class=3D"flex gap-x-=
1"><div class=3D"relative"><div class=3D"relative"><div class=3D"flex flex-=
col"><input multiple=3D"" tabindex=3D"-1" class=3D"hidden" type=3D"file" st=
yle=3D"display: none;"><span class=3D"hidden"></span><button type=3D"button=
" id=3D"radix-:rv0:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-st=
ate=3D"closed" class=3D"text-token-text-primary border border-transparent i=
nline-flex items-center justify-center gap-1 rounded-lg text-sm dark:transp=
arent dark:bg-transparent leading-none outline-none cursor-pointer hover:bg=
-token-main-surface-secondary dark:hover:bg-token-main-surface-secondary fo=
cus-visible:bg-token-main-surface-secondary radix-state-active:text-token-t=
ext-secondary radix-disabled:cursor-auto radix-disabled:bg-transparent radi=
x-disabled:text-token-text-tertiary dark:radix-disabled:bg-transparent m-0 =
h-0 w-0 border-none bg-transparent p-0"></button><span class=3D"flex" data-=
state=3D"closed"><button aria-disabled=3D"false" aria-label=3D"Attach files=
" class=3D"flex items-center justify-center h-8 w-8 rounded-lg rounded-bl-x=
l text-token-text-primary dark:text-white focus-visible:outline-black dark:=
focus-visible:outline-white hover:bg-black/10"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9 7C9 4.23858 11.=
2386 2 14 2C16.7614 2 19 4.23858 19 7V15C19 18.866 15.866 22 12 22C8.13401 =
22 5 18.866 5 15V9C5 8.44772 5.44772 8 6 8C6.55228 8 7 8.44772 7 9V15C7 17.=
7614 9.23858 20 12 20C14.7614 20 17 17.7614 17 15V7C17 5.34315 15.6569 4 14=
 4C12.3431 4 11 5.34315 11 7V15C11 15.5523 11.4477 16 12 16C12.5523 16 13 1=
5.5523 13 15V9C13 8.44772 13.4477 8 14 8C14.5523 8 15 8.44772 15 9V15C15 16=
.6569 13.6569 18 12 18C10.3431 18 9 16.6569 9 15V7Z" fill=3D"currentColor">=
</path></svg></button></span><div type=3D"button" aria-haspopup=3D"dialog" =
aria-expanded=3D"false" aria-controls=3D"radix-:rv3:" data-state=3D"closed"=
></div></div></div></div><div><span class=3D"" data-state=3D"closed"><butto=
n class=3D"flex h-8 min-w-8 items-center justify-center rounded-lg p-1 text=
-xs font-semibold hover:bg-black/10 focus-visible:outline-black dark:focus-=
visible:outline-white" aria-pressed=3D"false" aria-label=3D"Search the web"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17=
.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM11.9851 4.00291C11.9933 4=
.00046 11.9982 4.00006 11.9996 4C12.001 4.00006 12.0067 4.00046 12.0149 4.0=
0291C12.0256 4.00615 12.047 4.01416 12.079 4.03356C12.2092 4.11248 12.4258 =
4.32444 12.675 4.77696C12.9161 5.21453 13.1479 5.8046 13.3486 6.53263C13.68=
52 7.75315 13.9156 9.29169 13.981 11H10.019C10.0844 9.29169 10.3148 7.75315=
 10.6514 6.53263C10.8521 5.8046 11.0839 5.21453 11.325 4.77696C11.5742 4.32=
444 11.7908 4.11248 11.921 4.03356C11.953 4.01416 11.9744 4.00615 11.9851 4=
.00291ZM8.01766 11C8.08396 9.13314 8.33431 7.41167 8.72334 6.00094C8.87366 =
5.45584 9.04762 4.94639 9.24523 4.48694C6.48462 5.49946 4.43722 7.9901 4.06=
189 11H8.01766ZM4.06189 13H8.01766C8.09487 15.1737 8.42177 17.1555 8.93 18.=
6802C9.02641 18.9694 9.13134 19.2483 9.24522 19.5131C6.48461 18.5005 4.4372=
2 16.0099 4.06189 13ZM10.019 13H13.981C13.9045 14.9972 13.6027 16.7574 13.1=
726 18.0477C12.9206 18.8038 12.6425 19.3436 12.3823 19.6737C12.2545 19.8359=
 12.1506 19.9225 12.0814 19.9649C12.0485 19.9852 12.0264 19.9935 12.0153 19=
.9969C12.0049 20.0001 11.9999 20 11.9999 20C11.9999 20 11.9948 20 11.9847 1=
9.9969C11.9736 19.9935 11.9515 19.9852 11.9186 19.9649C11.8494 19.9225 11.7=
455 19.8359 11.6177 19.6737C11.3575 19.3436 11.0794 18.8038 10.8274 18.0477=
C10.3973 16.7574 10.0955 14.9972 10.019 13ZM15.9823 13C15.9051 15.1737 15.5=
782 17.1555 15.07 18.6802C14.9736 18.9694 14.8687 19.2483 14.7548 19.5131C1=
7.5154 18.5005 19.5628 16.0099 19.9381 13H15.9823ZM19.9381 11C19.5628 7.990=
09 17.5154 5.49946 14.7548 4.48694C14.9524 4.94639 15.1263 5.45584 15.2767 =
6.00094C15.6657 7.41167 15.916 9.13314 15.9823 11H19.9381Z" fill=3D"current=
Color"></path></svg></button></span></div></div><div class=3D"min-w-8"><spa=
n class=3D"" data-state=3D"closed"><button disabled=3D"" aria-label=3D"Send=
 prompt" data-testid=3D"send-button" class=3D"flex h-8 w-8 items-center jus=
tify-center rounded-full transition-colors hover:opacity-70 focus-visible:o=
utline-none focus-visible:outline-black disabled:text-[#f4f4f4] disabled:ho=
ver:opacity-100 dark:focus-visible:outline-white disabled:dark:bg-token-tex=
t-quaternary dark:disabled:text-token-main-surface-secondary bg-black text-=
white dark:bg-white dark:text-black disabled:bg-[#D7D7D7]"><svg width=3D"32=
" height=3D"32" viewBox=3D"0 0 32 32" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-2xl"><path fill-rule=3D"evenodd" clip-rule=3D"e=
venodd" d=3D"M15.1918 8.90615C15.6381 8.45983 16.3618 8.45983 16.8081 8.906=
15L21.9509 14.049C22.3972 14.4953 22.3972 15.2189 21.9509 15.6652C21.5046 1=
6.1116 20.781 16.1116 20.3347 15.6652L17.1428 12.4734V22.2857C17.1428 22.91=
69 16.6311 23.4286 15.9999 23.4286C15.3688 23.4286 14.8571 22.9169 14.8571 =
22.2857V12.4734L11.6652 15.6652C11.2189 16.1116 10.4953 16.1116 10.049 15.6=
652C9.60265 15.2189 9.60265 14.4953 10.049 14.049L15.1918 8.90615Z" fill=3D=
"currentColor"></path></svg></button></span></div></div></div></div></div><=
/form></div></div><div class=3D"relative w-full px-2 py-2 text-center text-=
xs text-token-text-secondary empty:hidden md:px-[60px]"><div class=3D"min-h=
-4"><div>Atomic 47 Labs workspace chats aren't used to train our models. Ch=
atGPT can make mistakes.</div></div></div></div></div></div><div class=3D"g=
roup absolute bottom-2 end-2 z-20 flex flex-col gap-1 md:flex lg:bottom-3 l=
g:end-3"><button class=3D"flex h-6 w-6 items-center justify-center rounded-=
full border border-token-border-light text-xs text-token-text-secondary" ty=
pe=3D"button" id=3D"radix-:rv6:" aria-haspopup=3D"menu" aria-expanded=3D"fa=
lse" data-state=3D"closed" data-testid=3D"undefined-button">?</button></div=
></main></div><div class=3D"z-[1] flex-shrink-0 overflow-x-hidden bg-token-=
sidebar-surface-primary max-md:!w-0" style=3D"width: 0px;"><div class=3D"ab=
solute h-full w-[400px] pointer-events-none"><div class=3D"flex h-full flex=
-col"></div></div></div></div><div aria-live=3D"assertive" aria-atomic=3D"t=
rue" class=3D"sr-only"></div><div aria-live=3D"polite" aria-atomic=3D"true"=
 class=3D"sr-only"></div><audio class=3D"fixed bottom-0 left-0 hidden h-0 w=
-0" autoplay=3D"" crossorigin=3D"anonymous"></audio><span class=3D"pointer-=
events-none fixed inset-0 z-[60] mx-auto my-2 flex max-w-[560px] flex-col i=
tems-stretch justify-start md:pb-5"></span><!--$--><!--/$--><iframe height=
=3D"1" width=3D"1" style=3D"position: absolute; top: 0px; left: 0px; border=
: none; visibility: hidden;"></iframe></body><grammarly-desktop-integration=
 data-grammarly-shadow-root=3D"true"><template shadowmode=3D"open"><div ari=
a-label=3D"grammarly-integration" role=3D"group" tabindex=3D"-1" class=3D"g=
rammarly-desktop-integration" data-content=3D"{&quot;mode&quot;:&quot;full&=
quot;,&quot;isActive&quot;:true,&quot;isUserDisabled&quot;:false}"></div></=
template></grammarly-desktop-integration><grammarly-citation-builder data-g=
rammarly-shadow-root=3D"true" class=3D"dnXmp"><template shadowmode=3D"open"=
><div style=3D"position: fixed; right: 32px; bottom: 100px; z-index: 9999; =
direction: ltr; --rem: 16;"><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/citationBui=
lderIntegration.styles.css"><div class=3D"JApPF"><div class=3D"WEkke"><div>=
<div class=3D"jW6zC" data-grammarly-part=3D"citation-button"><div class=3D"=
u83J9 Eb0bS"><div role=3D"combobox" class=3D"f1mgyl9u" aria-haspopup=3D"lis=
tbox" aria-labelledby=3D"label-disableCitationBuilder" aria-expanded=3D"fal=
se" aria-controls=3D"list-disableCitationBuilder"><label id=3D"label-disabl=
eCitationBuilder"><button class=3D"Z3z9c DskjF Akjks"><svg fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20"><path fill-rule=3D=
"evenodd" clip-rule=3D"evenodd" d=3D"M9.431 4h1.138c.16 0 .288.13.288.288 0=
 1.37 1.68 2.031 2.65 1.063a.294.294 0 0 1 .413-.002l.731.73c.114.115.112.3=
-.002.415-.968.968-.307 2.649 1.063 2.649.159 0 .288.129.288.288v1.138c0 .1=
6-.13.288-.288.288-1.37 0-2.031 1.68-1.063 2.65.114.113.116.3.002.413l-.73.=
731a.294.294 0 0 1-.415-.002c-.968-.968-2.649-.307-2.649 1.063 0 .159-.129.=
288-.288.288H9.43a.288.288 0 0 1-.288-.288c0-1.37-1.68-2.031-2.65-1.063a.29=
3.293 0 0 1-.413.002l-.731-.73a.294.294 0 0 1 .002-.415c.968-.968.307-2.649=
-1.063-2.649A.288.288 0 0 1 4 10.57V9.43c0-.16.13-.288.288-.288 1.37 0 2.03=
1-1.68 1.063-2.65a.294.294 0 0 1-.002-.413l.73-.731a.294.294 0 0 1 .415.002=
c.968.968 2.649.307 2.649-1.063 0-.159.129-.288.288-.288ZM10 12.308a2.308 2=
.308 0 1 0 0-4.616 2.308 2.308 0 0 0 0 4.616Z" fill=3D"#FFFFFF"></path></sv=
g></button></label><div></div></div></div><button class=3D"TJqK_"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"28" height=3D"28" fill=3D"none" c=
lass=3D"" viewBox=3D"0 0 21 21"><path d=3D"M0 10.5C0 4.69993 4.68161 -0.000=
488281 10.4585 -0.000488281C16.2353 -0.000488281 20.916 4.69993 20.916 10.5=
C20.916 15.5743 17.333 19.8069 12.5675 20.7868C11.8868 20.927 11.1814 20.99=
95 10.4614 20.9995H0V10.4995V10.5Z" fill=3D"#027E6F"></path><path d=3D"M17.=
6952 9.50538H12.9825L11.8727 11.4355H15.7587C15.1497 14.7924 11.4315 17.077=
8 7.7157 15.1448C6.91668 14.7296 6.26603 14.0875 5.84567 13.2853C3.70801 9.=
19919 6.6282 5.08827 10.4817 5.08827C12.0705 5.08827 13.5013 5.78681 14.484=
1 6.89425L15.4799 5.16226C14.0613 3.81386 12.103 3.02867 9.96778 3.17958C6.=
33245 3.43125 3.38511 6.45663 3.20814 10.11C3.00645 14.3046 6.34603 17.7798=
 10.4793 17.7798C14.6125 17.7798 17.7606 14.4993 17.7606 10.4687C17.7606 10=
.1411 17.7359 9.81984 17.6947 9.50538H17.6952Z" fill=3D"#FFFFFF"></path></s=
vg><span>Get citation</span></button></div></div></div><div class=3D"PhVhU =
CIeiA"><div class=3D"XFcFy"></div><div class=3D"vEzpC"></div><div class=3D"=
jy8qk"></div></div></div></div></template></grammarly-citation-builder><gra=
mmarly-extension-vbars data-grammarly-shadow-root=3D"true" class=3D"dnXmp">=
<template shadowmode=3D"open"><div style=3D"position: absolute; z-index: 21=
47483647;"><link rel=3D"stylesheet" type=3D"text/css" href=3D"chrome-extens=
ion://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/designSystem.styles.css"></d=
iv><div class=3D"amkYk"><link rel=3D"stylesheet" type=3D"text/css" href=3D"=
chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/designSystem.st=
yles.css"><link rel=3D"stylesheet" type=3D"text/css" href=3D"chrome-extensi=
on://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/g2.styles.css"><div style=3D"=
z-index: 2147483647; position: absolute; top: 0px; left: 0px; width: 100%; =
pointer-events: all;"></div></div></template></grammarly-extension-vbars><g=
rammarly-extension-vbars-feedback-form data-grammarly-shadow-root=3D"true" =
class=3D"dnXmp"><template shadowmode=3D"open"><div style=3D"position: absol=
ute; z-index: 2147483647;"><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/designSyste=
m.styles.css"></div><div class=3D"amkYk"><link rel=3D"stylesheet" type=3D"t=
ext/css" href=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/cs=
s/designSystem.styles.css"><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/g2.styles.c=
ss"><div style=3D"z-index: 2147483647; position: absolute; top: 0px; left: =
0px; width: 100%; pointer-events: all;"></div></div></template></grammarly-=
extension-vbars-feedback-form><grammarly-popups data-grammarly-shadow-root=
=3D"true" class=3D"dnXmp" style=3D"--rem: 16;"><template shadowmode=3D"open=
"><div style=3D"position: absolute; z-index: 2147483647;"><link rel=3D"styl=
esheet" type=3D"text/css" href=3D"chrome-extension://kbfnbcaeplbcioakkpcpgf=
kobkghlhen/src/css/designSystem.styles.css"></div><div data-grammarly-part=
=3D"outer-elements" class=3D"amkYk" style=3D"z-index: 2147483647; position:=
 absolute; top: 0px; left: 0px; width: 100%;"><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/s=
rc/css/designSystem.styles.css"><div style=3D"position: fixed; visibility: =
hidden;"></div><div></div><div data-grammarly-part=3D"outer-elements-wrappe=
r" style=3D"position: relative; z-index: 2147483645;"><div data-name=3D"out=
er-elements-portal"></div></div><div><div data-grammarly-part=3D"expanded-g=
button" style=3D"top: 1122px; left: 1276.5px; position: absolute; transform=
: translate(-100%, -100%); z-index: 2147483644;"><div style=3D"transform-or=
igin: right center; transform: scale(0.8);"><div data-purpose=3D"animation-=
wrapper"></div></div></div></div><div></div><div data-grammarly-part=3D"fon=
ts-preloader" class=3D"NRIwa"><span class=3D"TsKuT"></span><span class=3D"f=
cnMV"></span></div><link rel=3D"stylesheet" type=3D"text/css" href=3D"chrom=
e-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/designSystem.styles.=
css"><link rel=3D"stylesheet" type=3D"text/css" href=3D"chrome-extension://=
kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/cheetah.styles.css"><div class=3D"=
amkYk"><div class=3D"f3pve4q" data-role=3D"onboarding-tooltips" style=3D"po=
sition: absolute; z-index: 10001;"><div data-role=3D"tooltip"></div></div><=
/div><div aria-hidden=3D"true" style=3D"width: 1px; height: 1px; top: -1px;=
 left: -1px; overflow: hidden; position: fixed;"><slot name=3D"hidden"></sl=
ot></div></div></template></grammarly-popups></html>
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-fc032368-b22b-48d2-bb88-0eb08901b073@mhtml.blink

@charset "utf-8";

.react-scroll-to-bottom--css-uxycy-79elbk { position: relative; }

.react-scroll-to-bottom--css-uxycy-1n7m0yu { height: 100%; overflow-y: auto=
; width: 100%; }

.react-scroll-to-bottom--css-uxycy-1tj0vk3 { background-color: rgba(0, 0, 0=
, 0.2); border-radius: 10px; border-width: 0px; bottom: 5px; cursor: pointe=
r; height: 20px; outline: 0px; position: absolute; right: 20px; width: 20px=
; }

.react-scroll-to-bottom--css-uxycy-1tj0vk3:hover { background-color: rgba(0=
, 0, 0, 0.4); }

.react-scroll-to-bottom--css-uxycy-1tj0vk3:active { background-color: rgba(=
0, 0, 0, 0.6); }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/root-jo2ifv11.css

@charset "utf-8";

._screen_1rtgi_1 { display: var(--screen-display,grid); grid-template: "lea=
ding" max-content "content" 1fr "trailing" max-content "keyboard" / minmax(=
0px, 1fr); height: var(--screen-height-override,100cqh); overflow: var(--sc=
reen-overflow,clip auto); padding-bottom: calc(var(--screen-anchor-bottom, =
0px) - var(--screen-bottom-offset, 0px)); padding-top: calc(var(--screen-an=
chor-top) + var(--screen-top-offset, 0px)); scrollbar-gutter: var(--screen-=
scrollbar-gutter-override,stable); width: 100%; }

._screen_1rtgi_1 [slot=3D"content"] { grid-area: content; padding-inline: v=
ar( --screen-content-inline-padding,var(--screen-inline-padding) ); positio=
n: var(--screen-content-position,relative); }

._screen_1rtgi_1 [slot=3D"leading"] { grid-area: leading; min-width: var(--=
screen-leading-slot-min-width); overflow: var(--screen-leading-slot-overflo=
w); position: sticky; top: var(--screen-leading-slot-top,0); z-index: var(-=
-screen-leading-slot-z-index,20); }

._screen_1rtgi_1 [slot=3D"trailing"] { bottom: var(--keyboard-safe-area-bot=
tom,0); grid-area: trailing; padding-inline: var( --screen-trailing-inline-=
padding,var(--screen-inline-padding) ); position: sticky; z-index: var(--sc=
reen-leading-slot-z-index,20); }

._screen_1rtgi_1 [slot=3D"keyboard"] { background: rgb(252, 252, 252); bott=
om: 0px; grid-area: keyboard; height: var(--keyboard-safe-area-bottom,0); p=
osition: sticky; }

._screen_1rtgi_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"top"=
]) { --safe-area-top: calc(env(titlebar-area-y, 0px) + env(safe-area-inset-=
top, 0px)); --screen-anchor-top: var(--safe-area-top); }

._screen_1rtgi_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"bott=
om"]) { --safe-area-bottom: env(safe-area-inset-bottom,0px); --keyboard-saf=
e-area-bottom: max(var(--screen-keyboard-height),env(keyboard-inset-height,=
0px)); --screen-anchor-bottom: var(--safe-area-bottom); }

._parent_kr03s_1 { container: screen-composer / inline-size; display: flex;=
 height: var(--screen-height,100svh); width: var(--screen-width,100svw); }

._screenComposer_kr03s_8 { --screen-content_sidebar-width: var(--sidebar_is=
_closed,0) var(--sidebar_is_open,minmax(0,auto)); display: grid; flex: 1 1 =
0%; grid-template-areas: "banner banner banner banner debugger" "sidebar he=
ader header header debugger" "sidebar thread thread-extended-info details d=
ebugger" "footer footer footer footer debugger"; grid-template-columns: [si=
debar-start] var(--screen-content_sidebar-width,minmax(0,auto)) [sidebar-en=
d thread-start] minmax(min(var(--screen-thread_min-width),100cqw),1fr) [thr=
ead-end thread-extended-info-start] minmax(0,var(--screen-thread-extended-i=
nfo_width,auto)) [thread-extended-info-end details-start] minmax(0,var(--sc=
reen-details_width,auto)) [details-end debugger-start] minmax(0,min-content=
) [debugger-end]; grid-template-rows: [banner-start] auto [banner-end heade=
r-start] auto [header-end content-start] 1fr [content-end footer-start] aut=
o [footer-end]; transition-duration: ; transition-timing-function: ; transi=
tion-delay: ; transition-behavior: ; transition-property: grid-template-col=
umns; }

@media (prefers-reduced-motion: reduce) {
  ._screenComposer_kr03s_8 { transition: none; }
}

._screenComposer_kr03s_8:has(._details_kr03s_44:empty) { --screen-details_w=
idth: 0; }

._screenComposer_kr03s_8:has(._threadExtendedInfo_kr03s_48:empty) { --scree=
n-thread-extended-info_width: 0; }

._banner_kr03s_52 { grid-area: banner; }

._sidebar_kr03s_56 { --bg-lightness: var( --sidebar_is_floating,var(--sideb=
ar-surface-floating-lightness) ) var(--sidebar_is_pinned,var(--sidebar-surf=
ace-pinned-lightness)); --bg-alpha: var(--sidebar_is_floating,var(--sidebar=
-surface-floating-alpha)) var(--sidebar_is_pinned,var(--sidebar-surface-pin=
ned-alpha)); --sidebar-surface: oklch(var(--bg-lightness) 0 0/var(--bg-alph=
a)); --shadow-alpha: var(--sidebar_is_floating,.1) var(--sidebar_is_pinned,=
0); --default-blur: var( --sidebar_is_floating,blur(0px) ); }

@supports not (color:oklch(.99 0 0)) {
  ._sidebar_kr03s_56 { --sidebar-surface: var(--sidebar-surface-primary); }
}

._sidebar_kr03s_56 { overflow-clip-margin: 20px; view-transition-name: var(=
--sidebar-transition-name,sidebar); --sidebar_should_light_dismiss: var(--s=
idebar_is_floating,1); background-color: var(--sidebar-surface); box-shadow=
: 0 20px 25px -5px rgb(0 0 0/var(--shadow-alpha)),0 8px 10px -6px rgb(0 0 0=
/var(--shadow-alpha)); display: var(--sidebar-display,flex); flex-direction=
: column; grid-area: var(--sidebar_is_pinned,sidebar) var(--sidebar_is_floa=
ting,thread); height: var(--screen-sidebar-height,100cqh); max-width: var(-=
-screen-sidebar-max-width,280px); opacity: var(--sidebar_is_closed,0) var(-=
-sidebar_is_open,1); overflow: clip; pointer-events: var(--sidebar_is_close=
d,none); transition: var( --vt-disable-sidebar-transition,translate .3s var=
(--easing-common),box-shadow .2s var(--easing-common),background-color .1s =
var(--easing-common),--shadow-alpha .2s var(--easing-common),--bg-alpha .2s=
 var(--easing-common),--bg-lightness .2s var(--easing-common),--sidebar-sur=
face .2s var(--easing-common),opacity var(--sidebar_is_closed,.1s) var(--si=
debar_is_open,75ms) linear ); translate: var(--sidebar_is_closed,-30%) var(=
--sidebar_is_open,0); z-index: var(--slot-sidebar-z-index,21); }

@media (prefers-reduced-motion: reduce) {
  ._sidebar_kr03s_56 { transition: none; }
}

._registeredScreenProperties_kr03s_112 { }

._header_kr03s_138 { display: var(--slot-header-display,block); grid-area: =
header; }

._thread_kr03s_48 { view-transition-name: var(--thread-transition-name,thre=
ad); display: var(--slot-thread-display,flex); grid-area: thread; min-heigh=
t: var(--screen-thread-height,100dvh); position: relative; transition: .45s=
 var(--easing-common) translate; translate: var(--screen-thread-translate);=
 }

._details_kr03s_44 { view-transition-name: var(--details-transition-name,de=
tails); display: var(--slot-details-display,block); grid-area: details; }

._threadExtendedInfo_kr03s_48 { view-transition-name: var( --thread-extende=
d-info-transition-name,threadExtendedInfo ); display: block; grid-area: thr=
ead-extended-info; min-width: var( --screen-thread-extended-info_width,var(=
--screen-thread-extended-info_min-width) ); position: relative; }

._footer_kr03s_173 { display: var(--slot-footer-display,block); grid-area: =
footer; }

._debugger_kr03s_178 { grid-area: debugger; max-height: 100%; overflow-y: a=
uto; }

@container screen-composer (max-width: 700px) {
  ._screenComposer_kr03s_8 { grid-template-areas: "banner banner" "sidebar =
header" "sidebar thread" "sidebar details" "thread-extended-info thread-ext=
ended-info" "footer footer"; }
  ._screenComposer_kr03s_8:has(input[type=3D"checkbox"][name=3D"thread-exte=
nded-info-sidebar-state"]:not(:checked)) { grid-template-columns: minmax(0p=
x, auto) minmax(0px, 1fr); grid-template-rows: auto minmax(0px, 1fr) auto a=
uto auto auto; }
  ._thread_kr03s_48 { grid-row: 2; }
  ._details_kr03s_44 { display: none; }
  ._details_kr03s_44, ._header_kr03s_138 { grid-row: 2 / span 2; }
  ._header_kr03s_138 { align-self: start; z-index: 10; }
}

@container screen-composer (max-width: 1024px) {
  :scope:has(input[type=3D"checkbox"][name=3D"thread-extended-info-sidebar-=
state"]:checked) ._screenComposer_kr03s_8 { grid-template: "thread-extended=
-info" minmax(0px, 1fr) / minmax(0px, 1fr); }
  :scope:has(input[type=3D"checkbox"][name=3D"thread-extended-info-sidebar-=
state"]:checked) ._sidebar_kr03s_56 { --screen-sidebar_min-width: 0; transi=
tion-duration: ; transition-timing-function: ; transition-delay: ; transiti=
on-behavior: ; transition-property: transform, min-width; }
  [dir=3D"ltr"] :scope:has(input[type=3D"checkbox"][name=3D"thread-extended=
-info-sidebar-state"]:checked) ._sidebar_kr03s_56 { transform: translate(-1=
00%); }
  [dir=3D"rtl"] :scope:has(input[type=3D"checkbox"][name=3D"thread-extended=
-info-sidebar-state"]:checked) ._sidebar_kr03s_56 { transform: translate(10=
0%); }
  :scope:has(input[type=3D"checkbox"][name=3D"thread-extended-info-sidebar-=
state"]:checked) ._thread_kr03s_48 { display: none; }
}

._wrapper_1g4yp_1 { border-radius: 8px; cursor: pointer; height: 44px; user=
-select: none; width: 44px; }

._wrapper_1g4yp_1 > input[type=3D"checkbox"] { display: none; }

._wrapper_1g4yp_1 { color: var(--icon-secondary); }

._wrapper_1g4yp_1:hover { --hover-background: var(--main-surface-secondary)=
; }

._label_1g4yp_19 { align-items: center; background-color: var(--hover-backg=
round); border-radius: 8px; color: var(--text-secondary); display: flex; fl=
ex: 1 1 0%; justify-content: center; transition: background-color 0.1s line=
ar; }

._application_8cdb5_1 { --screen-thread_min-width: 400px; --screen-sidebar_=
min-width: 280px; --screen-sidebar-panel-width: 0px; --screen-thread-extend=
ed-info_min-width: min(400px,100cqw); --thread-aside-panel_min-width: 0px; =
--screen-thread-header-min-height: 60px; --screen-size-hidden-on-tablet-mod=
e: flex; --screen-size-hidden-on-wide-mode: none; --screen-size-hidden-on-c=
ompact-mode: flex; --screen-sidebar-popover-min-width: calc(var(--screen-si=
debar_min-width) - 24px); --sidebar_open_state: var(--sidebar_is_closed); -=
-sidebar_is_closed: var(--sidebar_open_state,); --sidebar_is_open: var(--si=
debar_open_state,); --sidebar_pinned_state: var(--sidebar_pinned_off); --si=
debar_pinned_off: var(--sidebar_pinned_state,); --sidebar_pinned_on: var(--=
sidebar_pinned_state,); --sidebar_pin_availability: var(--sidebar_pin_enabl=
ed); --sidebar_pin_enabled: var(--sidebar_pin_availability,); --sidebar_pin=
_disabled: var(--sidebar_pin_availability,); --sidebar_is_pinned: var(--sid=
ebar_pinned_on,var(--sidebar_pin_enabled)); --sidebar_is_floating: var(--si=
debar_pinned_off) var(--sidebar_pin_disabled); --sidebar_is_open_and_pinned=
: var( --sidebar_is_open,var(--sidebar_is_pinned) ); --sidebar_is_closed_or=
_floating: var(--sidebar_is_closed) var(--sidebar_is_floating); --thread_sc=
rolled_to_bottom: var(--thread_is_not_scrolled_to_bottom); --thread_is_scro=
lled_to_bottom: var(--thread_scrolled_to_bottom,); --thread_is_not_scrolled=
_to_bottom: var(--thread_scrolled_to_bottom,); --screen-sidebar-consumed-wi=
dth: var(--sidebar_is_closed_or_floating,0px) var(--sidebar_is_open_and_pin=
ned,var(--screen-sidebar-panel-width)); --available-details-width: calc(100=
cqw - var(--screen-thread_min-width) - var(--screen-sidebar-consumed-width)=
 - var(--thread-aside-panel_min-width)); }

._application_8cdb5_1 .hidden-on-wide-container { display: none; }

._application_8cdb5_1:has(input[name=3D"sidebar_opened"]:checked) { --sideb=
ar_open_state: var(--sidebar_is_open); --screen-sidebar-panel-width: var(--=
screen-sidebar_min-width); }

._application_8cdb5_1:has(input[name=3D"sidebar_pinned"]:checked) { --sideb=
ar_pinned_state: var(--sidebar_pinned_on); }

._application_8cdb5_1:has(input[name=3D"thread_is_scrolled_to_bottom"]:chec=
ked) { --thread_scrolled_to_bottom: var(--thread_is_scrolled_to_bottom); }

._application_8cdb5_1:has(input[name=3D"thread-extended-info-sidebar-state"=
]:checked) { --thread-aside-panel_min-width: 400px; }

@container screen-composer (max-width: 1640px) {
  ._application_8cdb5_1:has(input[name=3D"canvas-state"]:checked) { --sideb=
ar_pin_availability: var(--sidebar_pin_disabled); }
}

._application_8cdb5_1._withFocusedView_8cdb5_77 { --sidebar_pin_availabilit=
y: var(--sidebar_pin_disabled); }

@container screen-composer (max-width: 865px) {
  ._application_8cdb5_1 { --screen-size-hidden-on-compact-mode: none; --scr=
een-size-hidden-on-wide-mode: unset; --sidebar_pin_availability: var(--side=
bar_pin_disabled); }
  ._application_8cdb5_1 .hidden-on-wide-container { display: unset; }
}

@container screen-composer (max-width: 948px) {
  ._application_8cdb5_1 { --screen-size-hidden-on-tablet-mode: none; }
}

._screen_1yn19_1 { --sidebar-sticky-header-height: 40px; --screen-content-p=
osition: static; --sidebar-leading-slot-height: var(--sidebar-leading-heigh=
t,152px); --sidebar-sticky-threshold: calc(var(--sidebar-leading-slot-heigh=
t) - var(--sidebar-sticky-header-height)); }

._screen_1yn19_1 [slot=3D"content"] { margin-top: -20px; padding-block-end:=
 5svh; padding-inline-start: 12px; }

._screen_1yn19_1 { --occluding-background: var( --sidebar_is_floating,oklch=
(var(--sidebar-surface-floating-lightness) 0 0/.98) ) var(--sidebar_is_pinn=
ed,var(--sidebar-surface)); --occluding-gradient: linear-gradient(90deg,var=
(--occluding-background) 0%,var(--occluding-background) 70%,transparent 100=
%); --sticky-title-offset: calc(var(--sidebar-leading-slot-height) - var(--=
sidebar-sticky-header-height, 40px) + 4px); }

._screen_1yn19_1 [slot=3D"leading"] { --slot-offset: 4px; --floating-backgr=
ound: linear-gradient(180deg,oklch(var(--sidebar-surface-floating-lightness=
) 0 0/.95) calc(var(--sidebar-leading-slot-height) - var(--slot-offset)),tr=
ansparent calc(var(--sidebar-leading-slot-height) - var(--slot-offset))); -=
-primary-background: linear-gradient(180deg,var(--sidebar-surface) calc(var=
(--sidebar-leading-slot-height) - var(--slot-offset)),transparent calc(var(=
--sidebar-leading-slot-height) - var(--slot-offset))); backdrop-filter: blu=
r(30px); background-image: var(--sidebar_is_floating,var(--floating-backgro=
und)) var(--sidebar_is_pinned,var(--primary-background)); mask-image: linea=
r-gradient(0deg, transparent 4px, rgb(0, 0, 0) 0px); }

._togglePinWrapper_1yn19_52 { align-self: center; display: var(--sidebar_pi=
n_disabled,none) var(--sidebar_pin_enabled,grid); }

._closeSidebarAction_1yn19_57 { view-transition-name: var(--sidebar_is_pinn=
ed,toggle-sidebar-icon); color: var(--icon-secondary); display: var(--sideb=
ar_is_closed,none) var(--sidebar_is_open,inline-flex); grid-area: 1 / 1; }

._sidebarIcon_1yn19_65 { stroke-width: 1.5px; height: 24px; width: 24px; }

._pinSidebarAction_1yn19_71 { color: var(--icon-secondary); display: inline=
-flex; }

._searchAction_1yn19_76 { display: var(--sidebar_is_closed,none); }

._screenHeader_1yn19_80 { --bar-background-color: transparent; align-items:=
 flex-start; display: flex; flex-direction: column; gap: 5px; margin-inline=
: var(--sidebar-inline-padding); position: sticky; top: 0px; }

._bucketBar_1yn19_92 { --bar-background-color: transparent; min-height: var=
(--sidebar-sticky-header-height); }

._screenContent_1yn19_97 { color: var(--sidebar-body-primary); margin-block=
-start: calc(var(--sidebar-sticky-header-height)*-1); padding-block-start: =
20px; padding-inline: var(--sidebar-inline-padding); }

._screenTrailingBarContainer_1yn19_105 { --bar-gap: 2px; backdrop-filter: v=
ar(--sidebar_is_floating,blur(30px)); background: var(--sidebar_is_pinned,v=
ar(--sidebar-surface)) var(--sidebar_is_floating,oklch(var(--bg-lightness) =
0 0/.99)); padding-block: 0.25rem 8px; }

._screen_xyzrm_1 { --screen-inline-padding: var(--screen-inline-padding-ove=
rride,12px); --screen-block-padding: 12px; --previous-turn-min-height: 120p=
x; --screen-combined-inline-padding: calc(var(--screen-inline-padding)*2); =
--screen-content-inline-padding: 0; --screen-leading-slot-z-index: 21; --sc=
reen-optical-offset-amount: -5cqh; --conversation-state: var(--conversation=
-state--existing); --conversation-state--empty: var(--conversation-state,);=
 --conversation-state--existing: var(--conversation-state,); --container-w-=
except-padding: calc(100cqw - var(--screen-combined-inline-padding)); flex:=
 1 1 0%; position: relative; }

@container thread (max-width: 700px) {
  ._screen_xyzrm_1 [slot] { --screen-size-hidden-on-compact-mode: none; --s=
creen-size-hidden-on-wide-mode: flex; }
}

@container thread (max-width: 948px) {
  ._screen_xyzrm_1 [slot] { --screen-size-hidden-on-tablet-mode: none; }
}

._screen_xyzrm_1 [slot=3D"content"], ._screen_xyzrm_1 [slot=3D"leading"], .=
_screen_xyzrm_1 [slot=3D"trailing"] { --screen-content-ideal-size: 40rem; }

@container thread (min-width: 800px) {
  ._screen_xyzrm_1 [slot=3D"content"], ._screen_xyzrm_1 [slot=3D"leading"],=
 ._screen_xyzrm_1 [slot=3D"trailing"] { --screen-content-ideal-size: 48rem;=
 --screen-inline-padding: 0; }
}

@container thread (max-width: 600px) {
  ._screen_xyzrm_1 [slot=3D"content"], ._screen_xyzrm_1 [slot=3D"leading"],=
 ._screen_xyzrm_1 [slot=3D"trailing"] { --screen-inline-padding: var(--scre=
en-inline-padding-override,8px); --screen-inline-padding-offset: var( --scr=
een-inline-padding-offset-override,18px ); }
}

._screen_xyzrm_1 [slot=3D"content"], ._screen_xyzrm_1 [slot=3D"trailing"] {=
 display: grid; justify-self: center; }

._screen_xyzrm_1 [slot=3D"content"] { align-self: var(--conversation-state-=
-empty,center) var(--conversation-state--existing,start); margin-block-star=
t: var( --conversation-state--empty,calc(var(--screen-block-padding) - var(=
--thread-leading-height)) ) var(--conversation-state--existing,var(--screen=
-block-padding)); overscroll-behavior: contain; scroll-margin-bottom: var(-=
-thread-trailing-height); width: 100%; }

._screen_xyzrm_1._screenEmbedded_xyzrm_67 { height: 100%; }

._screen_xyzrm_1._screenEmptyState_xyzrm_72, ._screen_xyzrm_1:has([name=3D"=
temporary-chat-checkbox"]:checked) { --screen-optical-offset-amount: 0; --s=
creen-optical-compact-offset-amount: calc(var(--thread-leading-height, 60px=
)*-1); height: var(--screen-height-override,100%); }

@container thread-container (min-width: 1024px) {
  ._screen_xyzrm_1._screenEmptyState_xyzrm_72, ._screen_xyzrm_1:has([name=
=3D"temporary-chat-checkbox"]:checked) { --screen-optical-offset-amount: ca=
lc(var(--thread-leading-height, 60px)*-1); --screen-optical-compact-offset-=
amount: 0; }
}

._screen_xyzrm_1._screenEmptyState_xyzrm_72 [slot=3D"content"], ._screen_xy=
zrm_1:has([name=3D"temporary-chat-checkbox"]:checked) [slot=3D"content"] { =
height: 100%; margin-block-start: 0px; }

._screen_xyzrm_1._screenEmptyState_xyzrm_72 { grid-template-rows: max-conte=
nt 1fr 0px auto; }

._screen_xyzrm_1 [slot=3D"trailing"] { --composer-bar-half-height: calc(var=
(--composer-bar-height, 120px)/2); width: 100%; }

._screen_xyzrm_1 [slot=3D"trailing"]::before { --content-gradient: linear-g=
radient(0deg,#d9d9d9,hsla(0,0%,85%,.99) 8.07%,hsla(0,0%,84%,.98) 15.54%,hsl=
a(0,0%,83%,.95) 22.5%,hsla(0,0%,82%,.92) 29.04%,hsla(0,0%,80%,.87) 35.26%,h=
sla(0,0%,78%,.82) 41.25%,hsla(0,0%,75%,.75) 47.1%,hsla(0,0%,72%,.68) 52.9%,=
hsla(0,0%,69%,.6) 58.75%,hsla(0,0%,66%,.52) 64.74%,hsla(0,0%,62%,.42) 70.96=
%,hsla(0,0%,58%,.33) 77.5%,hsla(0,0%,54%,.22) 84.46%,hsla(0,0%,50%,.11) 91.=
93%,hsla(0,0%,45%,0)); }

@supports (color:oklch(.89 0 0)) {
  ._screen_xyzrm_1 [slot=3D"trailing"]::before { --content-gradient: linear=
-gradient(0deg,oklch(.89 0 0),oklch(.88 0 0/.99) 8.07%,oklch(.88 0 0/.98) 1=
5.54%,oklch(.87 0 0/.95) 22.5%,oklch(.86 0 0/.92) 29.04%,oklch(.85 0 0/.87)=
 35.26%,oklch(.83 0 0/.82) 41.25%,oklch(.81 0 0/.75) 47.1%,oklch(.78 0 0/.6=
8) 52.9%,oklch(.76 0 0/.6) 58.75%,oklch(.73 0 0/.52) 64.74%,oklch(.7 0 0/.4=
2) 70.96%,oklch(.67 0 0/.33) 77.5%,oklch(.63 0 0/.22) 84.46%,oklch(.6 0 0/.=
11) 91.93%,oklch(.55 0 0/0)); }
}

._screen_xyzrm_1 [slot=3D"trailing"]::before { background: var(--main-surfa=
ce-primary); bottom: calc(var(--thread-trailing-height) - var(--composer-ba=
r-half-height)); content: ""; display: var(--conversation-state--empty,none=
) var(--conversation-state--existing,block); height: calc(var(--composer-ba=
r-height, 120px) - 35px); left: 0px; mask-image: var(--content-gradient); m=
ask-mode: luminance; opacity: var(--composer-mask-opacity,1); pointer-event=
s: none; position: absolute; right: 0px; width: 100%; z-index: -1; }

._screen_xyzrm_1 [slot=3D"trailing"]::after { background: var(--main-surfac=
e-primary); bottom: 0px; content: ""; display: block; height: calc(var(--th=
read-trailing-height) - var(--composer-bar-half-height)); left: 0px; positi=
on: absolute; right: 0px; top: var(--composer-bar-half-height); width: 100%=
; z-index: -1; }

._scrollButton_xyzrm_178 { opacity: var(--thread_is_scrolled_to_bottom,0); =
transform-origin: center bottom; transition: all .1s var(--spring-fast); tr=
anslate: var(--thread_is_scrolled_to_bottom,0 6px); visibility: var(--threa=
d_is_scrolled_to_bottom,hidden); }

@starting-style {
  ._scrollButton_xyzrm_178 { display: none; }
}

._conversationTurnList_xyzrm_190 { margin-bottom: 2.5rem; width: 100%; }

._conversationTurnList_xyzrm_190, ._staticSharedThreadHeader_xyzrm_194 { al=
ign-items: center; display: flex; flex-direction: column; gap: 1rem; }

._staticSharedThreadHeader_xyzrm_194 > * { width: var( --conversation-width=
,min(var(--screen-content-ideal-size,40rem),calc(100cqw - var(--screen-comb=
ined-inline-padding) + var(--screen-inline-padding-offset, 0px))) ); }

._conversationTurnWrapper_xyzrm_211 { --tw-contain-size: inline-size; conta=
in: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint)=
 var(--tw-contain-style); }

._conversationTurnWrapper_xyzrm_211:empty { display: none; }

._conversationTurnWrapper_xyzrm_211 { width: var( --conversation-width,min(=
var(--screen-content-ideal-size,40rem),calc(100cqw - var(--screen-combined-=
inline-padding) + var(--screen-inline-padding-offset, 0px))) ); }

[dir=3D"ltr"] ._conversationTurnWrapper_xyzrm_211 { padding-left: var( --co=
nversation-turn-wrapper-padding-left-override,1.25rem ); padding-right: var=
( --conversation-turn-wrapper-padding-right-override,1.25rem ); }

[dir=3D"rtl"] ._conversationTurnWrapper_xyzrm_211 { padding-left: var( --co=
nversation-turn-wrapper-padding-right-override,1.25rem ); padding-right: va=
r( --conversation-turn-wrapper-padding-left-override,1.25rem ); }

._conversationTurnWrapper_xyzrm_211:has([data-paragen-root]) { width: 100cq=
w; }

@container (max-width: 600px) {
  [dir=3D"ltr"] ._conversationTurnWrapper_xyzrm_211 { padding-left: var( --=
conversation-turn-wrapper-padding-left-override,1.75rem ); padding-right: v=
ar( --conversation-turn-wrapper-padding-right-override,1.75rem ); }
  [dir=3D"rtl"] ._conversationTurnWrapper_xyzrm_211 { padding-left: var( --=
conversation-turn-wrapper-padding-right-override,1.75rem ); padding-right: =
var( --conversation-turn-wrapper-padding-left-override,1.75rem ); }
}

._newThread_xyzrm_249 { border-radius: 0.5rem; display: var(--sidebar_is_op=
en,none); }

._screenEmptyState_xyzrm_72 { --conversation-state: var(--conversation-stat=
e--empty); }

._openSidebar_xyzrm_258 { view-transition-name: var(--sidebar_is_closed,tog=
gle-sidebar-icon); display: var(--sidebar_is_open,none) var(--sidebar_is_cl=
osed,inline-flex); opacity: var(--sidebar_is_closed,1) var(--sidebar_is_pin=
ned,1); pointer-events: var(--sidebar_is_open,none); transition: .25s var(-=
-easing-common) opacity; }

[dir=3D"ltr"] ._openSidebar_xyzrm_258 { margin-right: 0px; }

[dir=3D"rtl"] ._openSidebar_xyzrm_258 { margin-left: 0px; }

._threadDropdown_xyzrm_267 { view-transition-name: var(--vt_model_picker); =
}

._profileInContent_xyzrm_271 { bottom: 18px; display: var(--sidebar_is_open=
,none); opacity: var(--sidebar_is_closed,1); position: fixed; z-index: 30; =
}

[dir=3D"ltr"] ._profileInContent_xyzrm_271 { left: 20px; }

[dir=3D"rtl"] ._profileInContent_xyzrm_271 { right: 20px; }

@container thread-container (max-width: 700px) {
  ._profileInContent_xyzrm_271 { display: none; }
}

._threadTools_xyzrm_286 { display: var(--screen-size-hidden-on-compact-mode=
,flex); }

@container thread-container (max-width: 850px) {
  ._threadTools_xyzrm_286 { display: var(--sidebar_is_open,none); }
}

._screenCompanionWindow_xyzrm_296 { --screen-block-padding: 0; position: fi=
xed; top: var(--screen-titlebar-height,32px); }

._screenInstalledApp_xyzrm_302 { --screen-optical-offset-amount: 0; }

._header_xyzrm_306 { background: var(--main-surface-primary); display: grid=
; grid-template-areas: "leading center trailing"; grid-template-columns: mi=
nmax(0px, auto) minmax(0px, 2fr) minmax(0px, auto); justify-content: space-=
between; min-height: calc(var(--screen-thread-header-min-height, 60px) + 1p=
x); }

[dir=3D"ltr"] ._header_xyzrm_306 { padding-left: var( --sidebar_is_closed_o=
r_floating,var(--sidebar-inline-padding) ); padding-right: var(--sidebar-in=
line-padding); }

[dir=3D"rtl"] ._header_xyzrm_306 { padding-left: var(--sidebar-inline-paddi=
ng); padding-right: var( --sidebar_is_closed_or_floating,var(--sidebar-inli=
ne-padding) ); }

._headerLeading_xyzrm_321 { align-items: center; display: flex; gap: 3px; g=
rid-area: leading; }

._headerTrailing_xyzrm_328 { display: flex; grid-area: trailing; }

._headerCenter_xyzrm_333 { align-items: center; display: flex; grid-area: c=
enter; justify-content: center; }

._footer_xyzrm_340 { display: var(--conversation-state--empty,none); justif=
y-self: center; padding-block-end: var(--screen-block-padding); padding-inl=
ine: var(--screen-inline-padding); width: min(var(--screen-content-ideal-si=
ze,40rem),var(--container-w-except-padding)); }

@media (prefers-reduced-motion: reduce) {
  ._btn_5l021_1 svg path { transition: none; }
}

._btn_5l021_1 svg > path { stroke: currentcolor; transition: 0.3s; }

[dir=3D"ltr"] ._btn_5l021_1 svg > path { transform: var(--sidebar_is_pinned=
,translateX(16px)) var(--sidebar_is_floating,translateX(0)); }

[dir=3D"rtl"] ._btn_5l021_1 svg > path { transform: var(--sidebar_is_pinned=
,translateX(-16px)) var(--sidebar_is_floating,translateX(0)); }

@media (prefers-reduced-motion: reduce) {
  ._btn_5l021_1 svg > path { transition: none; }
}

._btn_5l021_1 svg { stroke: currentcolor; stroke-width: 2; stroke-linecap: =
round; stroke-linejoin: round; transition: 0.3s; }

@media (prefers-reduced-motion: reduce) {
  ._btn_5l021_1 svg { transition: none; }
}

._rightArrow_5l021_28 { opacity: var(--sidebar_is_pinned,0) var(--sidebar_i=
s_floating,1); transform-origin: center center; transition: 0.3s; }

[dir=3D"ltr"] ._rightArrow_5l021_28 { transform: var(--sidebar_is_floating,=
translateX(0)) var(--sidebar_is_pinned,translateX(-6px) scale(0)); }

[dir=3D"rtl"] ._rightArrow_5l021_28 { transform: var(--sidebar_is_floating,=
translateX(0)) var(--sidebar_is_pinned,translateX(6px) scale(0)); }

@media (prefers-reduced-motion: reduce) {
  ._rightArrow_5l021_28 { transition: none; }
}

._leftArrow_5l021_39 { opacity: var(--sidebar_is_pinned,1) var(--sidebar_is=
_floating,0); transform-origin: center center; }

[dir=3D"ltr"] ._leftArrow_5l021_39 { transform: var(--sidebar_is_pinned,tra=
nslateX(0) scale(1)) var(--sidebar_is_floating,translateX(6px) scale(0)); }

[dir=3D"rtl"] ._leftArrow_5l021_39 { transform: var(--sidebar_is_pinned,tra=
nslateX(0) scale(1)) var(--sidebar_is_floating,translateX(-6px) scale(0)); =
}

@media (prefers-reduced-motion: reduce) {
  ._leftArrow_5l021_39 { transition: none; }
}

.composer-parent { --composer-footer_height: var(--composer-bar_footer-curr=
ent-height,32px); --composer-bar_height: var(--composer-bar_current-height,=
52px); --composer-bar_width: var(--composer-bar_current-width,768px); --mas=
k-fill: linear-gradient(180deg,#fff 0%,#fff); --mask-erase: linear-gradient=
(180deg,#000 0%,#000); }

.masked-content { --content-gradient: linear-gradient(0deg,#d9d9d9,hsla(0,0=
%,85%,.99) 8.07%,hsla(0,0%,84%,.98) 15.54%,hsla(0,0%,83%,.95) 22.5%,hsla(0,=
0%,82%,.92) 29.04%,hsla(0,0%,80%,.87) 35.26%,hsla(0,0%,78%,.82) 41.25%,hsla=
(0,0%,75%,.75) 47.1%,hsla(0,0%,72%,.68) 52.9%,hsla(0,0%,69%,.6) 58.75%,hsla=
(0,0%,66%,.52) 64.74%,hsla(0,0%,62%,.42) 70.96%,hsla(0,0%,58%,.33) 77.5%,hs=
la(0,0%,54%,.22) 84.46%,hsla(0,0%,50%,.11) 91.93%,hsla(0,0%,45%,0)); --comp=
oser-bar_safe-margins: 20px; mask-composite: subtract; mask-image: var(--ma=
sk-fill),var(--content-gradient),var(--composer-bar_skeleton); mask-mode: l=
uminance; mask-position: top center,center calc(100% - var(--composer-foote=
r_height)),center calc(100% - var(--composer-footer_height)); mask-repeat: =
no-repeat; mask-size: auto,calc(100% - var(--composer-bar_safe-margins)) ca=
lc(var(--composer-bar_height) + var(--composer-bar_mask-grace-area)),var(--=
composer-bar_width) var(--composer-bar_height); }

@media (prefers-reduced-transparency: reduce) {
  .masked-content { mask-image: none; }
}

.mask-scrollbars { --scrollbar-width: 10px; clip-path: inset(-100svh var(--=
scrollbar-width) 0 0); }

.bg-thread--header { background: linear-gradient(to bottom,transparent 0,tr=
ansparent 50%,var(--main-surface-primary) 50%,var(--main-surface-primary) 1=
00%); height: var(--composer-bar_height); mask-composite: subtract; mask-im=
age: var(--mask-fill),var(--composer-bar_skeleton); mask-mode: luminance; m=
ask-position: center top, center top; mask-repeat: no-repeat; mask-size: au=
to; }

@media (prefers-reduced-transparency: reduce) {
  .bg-thread--header { mask-image: none; }
}

.bg-thread--footer { background: var(--main-surface-primary); flex: 1 1 0%;=
 }

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 400; src: url("data:font/woff2;base64,d09GMk9UVE8AAAM0AAkAAAAAB=
cgAAALuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJIBmAAfgE2AiQDDAQGBYRyByAbIwVRlKvJ=
FsDPBJtObcFDgzooFmKOOuZpZMG4Jg7aB8Nn8fzDvXrufz9r8tgCAU4XFVvjosSo0yqWv9Z+b8+=
+or6Y3y3ikk0laqIkfBkSQzINien2vweAH79N8JdohCbbWndr/HZ5v86kXxrEqV+cqnlKNBcLjY=
0Bj8Ka512LSgsolgt1Wa1Wr27atM/jBW21RrW55g21jw81IoJNHn2c/z24BlCQTVVvW09zVvtAY=
1dzeOZwYxugoDCNO2g8kMZDDRpPRuPFajC3qWY31RzV9+loj/h/e6ud/0/bfxcbEILkKpVrQNhw=
TzuJycoVI0S9RjZZES7WjkQvApCsAhsUn3SuWdP3UZ0zRZT+X1OW1h0OGr9NflM3xRvmiClHqQO=
Rzvz/tQbQb7L8b7XUFdZrb+h13MhqctFw/8PP+snI1CnebrExOvET/Fh/hn+knPwQZw89wnNvi+=
62ERUZoHLr9BC1nCwROqghul1go6hTCVTs54ZppNw6x+jkYtzYdoEMTuGT8KCP/A/hDIeWUloqM=
4VXWm2g5T0CrvPF5g3kAs04zXJGkI7P96za7LmtKwgBAmhGzB07gBpPeEUAKyzEwwWJxIBzFaQe=
HZwg6BYQxo6W2Qwz739fUTpv+v/c+Xy3Sv6VF/uN3w8uFpdbNkDuXnWVGkBhvGn75R1LYEgq295=
Z+QHimbpBIbxAAQtPAhA2QAAaMjYQQHHzONnK8R1EFN9lrZmfUxvmFzjzl5dsLLNQqwDEx+49z7=
B0yrNi3SQ58LwmAy/AqeOtOWduzoY8+2s/wMFgbxAWiEesMNZAalIE2r8JllitrXeokZEbwVJpR=
0hSXFLwa+wftjSPNWMSERMRGxMrEi0DVYcfdnhxQ66Eqt62nmYsq32gsaspM4cb2ypPtQ531Q+I=
Ioj9J0lKy0pzkjTFKxoOtd8ODLb39mD0t/UONT71Ry6QDBlaIonr767vbJaUtzSPNQOBmOXFihF=
LROyYXvXnrUOTszoAAA=3D=3D") format("woff2"); }

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 600; src: url("data:font/woff2;base64,d09GMk9UVE8AAANIAAkAAAAAB=
kwAAAMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJQBmAAfgE2AiQDDAQGBYVwByAbqQVRlMVN=
BfiRkLl5oxlVNKr4xQKiOJqYMp0zZd4iyiabvWs/aWpaEhyiBiMQGoNCIoys0xiDZnJteLRGXET=
3IpoQq697VFOmBlImcVhpy3pWuy6ZGDJnDoFpIwM96olCINQDUebsKzfc8cml+mMBP82Lfx5kKv=
x3Td2DFtCONwWq1Ru/VIs7/gTVpl7hgkiHscva/P1RKvnkOj2uDshaX5Id6vvRLs7Q7ZY7RUIph=
hAYQskQ6gJDmGIIZ4YIVbgw4aJK86iJ8ai2EeK+a2PFayPSEw4h7uwclpQxdejLyi11M9Iy2h0j=
4eJMBI28mehJINkCFioovm/Yah6VpgBJUm48kUyWnPA1xAhNmKY1S5qwFaT01WKAtvHEg6QZc9t=
odjOVtRlP+hmjzDDS5vtMPD748Cgn0q2zV69y9Mytow/50QcHH4tnHBQWHuslA/3B8O2e6uPdV9=
vO1B/lSKo5WCl4o2ahQUcDvW2kuxvh3SOtegPX6+drRCVHhYM1R9HgaP3ZtqvIQwHcGn6o8wf64=
4VngrsJ4QBWcbQHGrW2K7XgmT5uPpAHTOivlgPGIeL+mbnYY7xhj5AEAtSqfMIBaNDgjWfcMFRm=
HIrAIqAO7J4cqgRylIjSHx27HeBe+8o/qp1Xbb/IqsC9ZI03+w/fbWoexLpPI+sf04PMBbjGKDw=
6XInbdQiytiHo/3RWkeUd9IkyXjTYfUMA4QsCKCpfBGjhAhFgEqQAAWZZygUw+FhGgI2LIwiw40=
4iwEWQixiaHEGSvMqDgqv5QpHqDyV0WChLs4GKVj5Q18zvoKFe1Xk/BxaI0I2NKfxfK8J/W710U=
VzebArQ6NFEpCWN1fGWFBQegKAjSBCctI7wij+coRcCJGQgy7A42Q3Te14v7+6FuamjlQMEsKxd=
JHYlel9kJ5adv7kxHe2kcBAeviIZGBpwSO2aZ7b9TXUzD/i7C8jF1drRAeiL2ZWjm6Rq8sFp4jK=
IQOBI9iJbyNGt7alX974oJIgBsRgsHDkMjr/FbPeiAAAA") format("woff2"); }

*, ::after, ::before { border: 0px solid rgb(227, 227, 227); box-sizing: bo=
rder-box; }

::after, ::before { --tw-content: ""; }

:host, html { text-size-adjust: 100%; font-feature-settings: normal; -webki=
t-tap-highlight-color: transparent; font-family: ui-sans-serif, -apple-syst=
em, system-ui, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-seri=
f, "Segoe UI Emoji", "Segoe UI Symbol"; font-variation-settings: normal; li=
ne-height: 1.5; tab-size: 4; }

body { line-height: inherit; margin: 0px; }

hr { border-top-width: 1px; color: inherit; height: 0px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-feature-settings: normal; font-family: ui-monos=
pace, SFMono-Regular, "SF Mono", Menlo, Consolas, "Liberation Mono", monosp=
ace; font-size: 1em; font-variation-settings: normal; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { border-collapse: collapse; border-color: inherit; text-indent: 0px;=
 }

button, input, optgroup, select, textarea { font-feature-settings: inherit;=
 color: inherit; font-family: inherit; font-size: 100%; font-variation-sett=
ings: inherit; font-weight: inherit; letter-spacing: inherit; line-height: =
inherit; margin: 0px; padding: 0px; }

button, select { text-transform: none; }

button, input:where([type=3D"button"]), input:where([type=3D"reset"]), inpu=
t:where([type=3D"submit"]) { appearance: button; background-color: transpar=
ent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

dialog { padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { color: rgb(180, 180, 180); opac=
ity: 1; }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { height: auto; max-width: 100%; }

[hidden] { display: none; }

[multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"], [=
type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"],=
 [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=3D=
"week"], select, textarea { --tw-shadow: 0 0 #0000; appearance: none; backg=
round-color: rgb(255, 255, 255); border-color: rgb(155, 155, 155); border-r=
adius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; paddin=
g: 0.5rem 0.75rem; }

[multiple]:focus, [type=3D"date"]:focus, [type=3D"datetime-local"]:focus, [=
type=3D"email"]:focus, [type=3D"month"]:focus, [type=3D"number"]:focus, [ty=
pe=3D"password"]:focus, [type=3D"search"]:focus, [type=3D"tel"]:focus, [typ=
e=3D"text"]:focus, [type=3D"time"]:focus, [type=3D"url"]:focus, [type=3D"we=
ek"]:focus, select:focus, textarea:focus { --tw-ring-offset-width: 0px; --t=
w-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shado=
w: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-off=
set-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--t=
w-ring-offset-width)) var(--tw-ring-color); border-color: rgb(37, 99, 235);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow); outline: transparent solid 2px; outline-offset: 2px; }

[dir=3D"ltr"] [multiple]:focus, [dir=3D"ltr"] [type=3D"date"]:focus, [dir=
=3D"ltr"] [type=3D"datetime-local"]:focus, [dir=3D"ltr"] [type=3D"email"]:f=
ocus, [dir=3D"ltr"] [type=3D"month"]:focus, [dir=3D"ltr"] [type=3D"number"]=
:focus, [dir=3D"ltr"] [type=3D"password"]:focus, [dir=3D"ltr"] [type=3D"sea=
rch"]:focus, [dir=3D"ltr"] [type=3D"tel"]:focus, [dir=3D"ltr"] [type=3D"tex=
t"]:focus, [dir=3D"ltr"] [type=3D"time"]:focus, [dir=3D"ltr"] [type=3D"url"=
]:focus, [dir=3D"ltr"] [type=3D"week"]:focus, [dir=3D"ltr"] select:focus, [=
dir=3D"ltr"] textarea:focus { --tw-ring-inset: var(--tw-empty, ); }

[dir=3D"rtl"] [multiple]:focus, [dir=3D"rtl"] [type=3D"date"]:focus, [dir=
=3D"rtl"] [type=3D"datetime-local"]:focus, [dir=3D"rtl"] [type=3D"email"]:f=
ocus, [dir=3D"rtl"] [type=3D"month"]:focus, [dir=3D"rtl"] [type=3D"number"]=
:focus, [dir=3D"rtl"] [type=3D"password"]:focus, [dir=3D"rtl"] [type=3D"sea=
rch"]:focus, [dir=3D"rtl"] [type=3D"tel"]:focus, [dir=3D"rtl"] [type=3D"tex=
t"]:focus, [dir=3D"rtl"] [type=3D"time"]:focus, [dir=3D"rtl"] [type=3D"url"=
]:focus, [dir=3D"rtl"] [type=3D"week"]:focus, [dir=3D"rtl"] select:focus, [=
dir=3D"rtl"] textarea:focus { --tw-ring-inset: var(--tw-empty, ); }

input::placeholder, textarea::placeholder { color: rgb(155, 155, 155); opac=
ity: 1; }

::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

::-webkit-date-and-time-value { min-height: 1.5em; }

::-webkit-datetime-edit, ::-webkit-datetime-edit-day-field, ::-webkit-datet=
ime-edit-hour-field, ::-webkit-datetime-edit-meridiem-field, ::-webkit-date=
time-edit-millisecond-field, ::-webkit-datetime-edit-minute-field, ::-webki=
t-datetime-edit-month-field, ::-webkit-datetime-edit-second-field, ::-webki=
t-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg x=
mlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3E%=
3Cpath stroke=3D'%239B9B9B' stroke-linecap=3D'round' stroke-linejoin=3D'rou=
nd' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-rep=
eat: no-repeat; background-size: 1.5em 1.5em; -webkit-print-color-adjust: e=
xact; }

[dir=3D"ltr"] select { background-position: right 0.5rem center; padding-ri=
ght: 2.5rem; }

[dir=3D"rtl"] select { background-position: left 0.5rem center; padding-lef=
t: 2.5rem; }

[multiple] { background-image: none; background-position: 0px 0px; backgrou=
nd-repeat: unset; background-size: initial; -webkit-print-color-adjust: uns=
et; }

[dir=3D"ltr"] [multiple] { padding-right: 0.75rem; }

[dir=3D"rtl"] [multiple] { padding-left: 0.75rem; }

[type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 #0000; appearance:=
 none; background-color: rgb(255, 255, 255); background-origin: border-box;=
 border-color: rgb(155, 155, 155); border-width: 1px; color: rgb(37, 99, 23=
5); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px; -web=
kit-print-color-adjust: exact; user-select: none; vertical-align: middle; w=
idth: 1rem; }

[type=3D"checkbox"] { border-radius: 0px; }

[type=3D"radio"] { border-radius: 100%; }

[type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-offset-width:=
 2px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ring-off=
set-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw=
-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px =
+ var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-r=
ing-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transpa=
rent solid 2px; outline-offset: 2px; }

[dir=3D"ltr"] [type=3D"checkbox"]:focus, [dir=3D"ltr"] [type=3D"radio"]:foc=
us { --tw-ring-inset: var(--tw-empty, ); }

[dir=3D"rtl"] [type=3D"checkbox"]:focus, [dir=3D"rtl"] [type=3D"radio"]:foc=
us { --tw-ring-inset: var(--tw-empty, ); }

[type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color: c=
urrentcolor; background-position: 50% center; background-repeat: no-repeat;=
 background-size: 100% 100%; border-color: transparent; }

[type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;cha=
rset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://w=
ww.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1=
 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1=
.414 0z'/%3E%3C/svg%3E"); }

[type=3D"radio"]:checked { background-image: url("data:image/svg+xml;charse=
t=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://www.=
w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }

[type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [type=
=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-colo=
r: currentcolor; border-color: transparent; }

[type=3D"checkbox"]:indeterminate { background-color: currentcolor; backgro=
und-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http://w=
ww.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=3D=
'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=3D=
'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backgrou=
nd-repeat: no-repeat; background-size: 100% 100%; border-color: transparent=
; }

[type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminate:=
hover { background-color: currentcolor; border-color: transparent; }

[type=3D"file"] { background: unset; border-color: inherit; border-radius: =
0px; border-width: 0px; font-size: unset; line-height: inherit; padding: 0p=
x; }

[type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }

h1 { font-size: 1.875rem; font-weight: 600; line-height: 2.25rem; }

h2, h3 { font-size: 1.5rem; font-weight: 600; line-height: 2rem; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { appearance: none; margin: 0px; }

*, ::after, ::before { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-=
from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ;=
 --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-s=
pacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-widt=
h: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); =
--tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shado=
w: 0 0 #0000; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness:=
 ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --t=
w-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-=
backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ;=
 --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity:=
 ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; --tw-contain-size: ; --=
tw-contain-layout: ; --tw-contain-paint: ; --tw-contain-style: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-posit=
ion: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordi=
nal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; =
--tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --=
tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-=
offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #00=
00; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-co=
ntrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate=
: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-b=
rightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-back=
drop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-ba=
ckdrop-saturate: ; --tw-backdrop-sepia: ; --tw-contain-size: ; --tw-contain=
-layout: ; --tw-contain-paint: ; --tw-contain-style: ; }

:root { --spring-fast-duration: 667ms; --spring-fast: linear(0,.01942 1.83%=
,.07956 4.02%,.47488 13.851%,.65981 19.572%,.79653 25.733%,.84834 29.083%,.=
89048 32.693%,.9246 36.734%,.95081 41.254%,.97012 46.425%,.98361 52.535%,.9=
9665 68.277%,.99988); --spring-common-duration: 667ms; --spring-common: lin=
ear(0,.00506 1.18%,.02044 2.46%,.08322 5.391%,.46561 17.652%,.63901 24.342%=
,.76663 31.093%,.85981 38.454%,.89862 42.934%,.92965 47.845%,.95366 53.305%=
,.97154 59.516%,.99189 74.867%,.9991); --spring-slow-bounce-duration: 1167m=
s; --spring-slow-bounce: linear(0,.00172 .51%,.00682 1.03%,.02721 2.12%,.06=
135 3.29%,.11043 4.58%,.21945 6.911%,.59552 14.171%,.70414 16.612%,.79359 1=
8.962%,.86872 21.362%,.92924 23.822%,.97589 26.373%,1.01 29.083%,1.0264 31.=
043%,1.03767 33.133%,1.04411 35.404%,1.04597 37.944%,1.04058 42.454%,1.0111=
9 55.646%,1.00137 63.716%,.99791 74.127%,.99988); --spring-bounce-duration:=
 833ms; --spring-bounce: linear(0,.00541 1.29%,.02175 2.68%,.04923 4.19%,.0=
8852 5.861%,.17388 8.851%,.48317 18.732%,.57693 22.162%,.65685 25.503%,.724=
32 28.793%,.78235 32.163%,.83182 35.664%,.87356 39.354%,.91132 43.714%,.941=
05 48.455%,.96361 53.705%,.97991 59.676%,.9903 66.247%,.99664 74.237%,.9996=
8 84.358%,1.00048); --spring-fast-bounce-duration: 1s; --spring-fast-bounce=
: linear(0,.00683 1.14%,.02731 2.35%,.11137 5.091%,.59413 15.612%,.78996 20=
.792%,.92396 25.953%,.97109 28.653%,1.00624 31.503%,1.03801 36.154%,1.0477 =
41.684%,1.00242 68.787%,.99921); --easing-common: linear(0,0,.0001,.0002,.0=
003,.0005,.0007,.001,.0013,.0016,.002,.0024,.0029,.0033,.0039,.0044,.005,.0=
057,.0063,.007,.0079,.0086,.0094,.0103,.0112,.0121,.0132 1.84%,.0153,.0175,=
.0201,.0226,.0253,.0283,.0313,.0345,.038,.0416,.0454,.0493,.0535,.0576,.062=
1,.0667,.0714,.0764,.0816 5.04%,.0897,.098 5.62%,.1071,.1165,.1263 6.56%,.1=
37,.1481 7.25%,.1601 7.62%,.1706 7.94%,.1819 8.28%,.194,.2068 9.02%,.2331 9=
.79%,.2898 11.44%,.3151 12.18%,.3412 12.95%,.3533,.365 13.66%,.3786,.3918,.=
4045,.4167,.4288,.4405,.452,.4631 16.72%,.4759,.4884,.5005,.5124,.5242,.535=
4,.5467,.5576,.5686,.5791,.5894,.5995,.6094,.6194,.6289,.6385,.6477,.6569,.=
6659 24.45%,.6702,.6747,.6789,.6833,.6877,.6919,.696,.7002,.7043,.7084,.712=
5,.7165,.7205,.7244,.7283,.7321,.7358,.7396,.7433,.7471,.7507,.7544,.7579,.=
7615,.7649,.7685,.7718,.7752,.7786,.782,.7853,.7885,.7918,.7951,.7982,.8013=
,.8043,.8075,.8104,.8135,.8165,.8195,.8224,.8253,.8281,.8309,.8336,.8365,.8=
391,.8419,.8446,.8472,.8499,.8524,.855,.8575,.8599,.8625 37.27%,.8651,.8678=
,.8703,.8729,.8754,.8779,.8803,.8827,.8851,.8875,.8898,.892,.8942,.8965,.89=
87,.9009,.903,.9051,.9071,.9092,.9112,.9132,.9151,.9171,.919,.9209,.9227,.9=
245,.9262,.928,.9297,.9314,.9331,.9347,.9364,.9379,.9395,.941,.9425,.944,.9=
454,.9469,.9483,.9497,.951,.9524,.9537,.955,.9562,.9574,.9586,.9599,.961,.9=
622,.9633,.9644,.9655,.9665,.9676,.9686,.9696,.9705,.9715,.9724,.9733,.9742=
,.975,.9758,.9766,.9774,.9782,.9789,.9796,.9804,.9811,.9817,.9824,.9831,.98=
37,.9843,.9849,.9855,.986,.9866,.9871,.9877,.9882,.9887,.9892,.9896 70.56%,=
.9905 71.67%,.9914 72.82%,.9922,.9929 75.2%,.9936 76.43%,.9942 77.71%,.9948=
 79.03%,.9954 80.39%,.9959 81.81%,.9963 83.28%,.9968 84.82%,.9972 86.41%,.9=
975 88.07%,.9979 89.81%,.9982 91.64%,.9984 93.56%,.9987 95.58%,.9989 97.72%=
,.9991); --sidebar-inline-padding: 1rem; --sidebar-mask: linear-gradient(90=
deg,#000,#000 84%,transparent 89%,transparent); --white: #fff; --black: #00=
0; --gray-50: #f9f9f9; --gray-100: #ececec; --gray-200: #e3e3e3; --gray-300=
: #cdcdcd; --gray-400: #b4b4b4; --gray-500: #9b9b9b; --gray-600: #676767; -=
-gray-700: #424242; --gray-750: #2f2f2f; --gray-800: #212121; --gray-900: #=
171717; --gray-950: #0d0d0d; --red-500: #ef4444; --red-700: #b91c1c; --bran=
d-purple: #ab68ff; }

@media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio:2), (mi=
n-resolution: 192dpi), (min-resolution: 2dppx) {
  :root { -webkit-font-smoothing: antialiased; }
}

html { --main-surface-background: hsla(0,0%,100%,.95); --message-surface: h=
sla(0,0%,91%,.5); --composer-surface: var(--message-surface); --dot-color: =
var(--black); --text-primary: var(--gray-950); --text-secondary: #5d5d5d; -=
-text-tertiary: var(--gray-400); --text-quaternary: var(--gray-300); --tag-=
blue: #08f; --tag-blue-light: #0af; --text-error: #f93a37; --text-danger: v=
ar(--red-500); --text-placeholder: rgba(0,0,0,.7); --surface-error: 249 58 =
55; --border-xlight: rgb(0 0 0/5%); --border-light: rgba(0,0,0,.1); --borde=
r-medium: rgba(0,0,0,.15); --border-heavy: rgba(0,0,0,.2); --border-xheavy:=
 rgba(0,0,0,.25); --hint-text: #08f; --hint-bg: #b3dbff; --border-sharp: rg=
b(0 0 0/5%); --icon-secondary: #676767; --main-surface-primary: var(--white=
); --main-surface-primary-inverse: var(--gray-800); --main-surface-secondar=
y: var(--gray-50); --main-surface-tertiary: var(--gray-100); --sidebar-surf=
ace-primary: var(--gray-50); --sidebar-surface-secondary: var(--gray-100); =
--sidebar-surface-tertiary: var(--gray-200); --sidebar-title-primary: rgba(=
40,40,40,.5); --sidebar-body-primary: #0d0d0d; --sidebar-icon: #7d7d7d; --l=
ink: #2964aa; --link-hover: #749ac8; --selection: #007aff; }

@supports (color:oklch(.99 0 0)) {
  html { --sidebar-surface-floating-lightness: 1; --sidebar-surface-floatin=
g-alpha: 1; --sidebar-surface-pinned-lightness: .99; --sidebar-surface-pinn=
ed-alpha: 1; }
}

@media (prefers-reduced-transparency: reduce) {
  html { --message-surface: #f4f4f4; }
}

.dark { --main-surface-background: rgba(33,33,33,.9); --message-surface: rg=
ba(50,50,50,.85); --dot-color: var(--white); --text-primary: var(--gray-100=
); --text-secondary: var(--gray-400); --text-tertiary: var(--gray-500); --t=
ext-quaternary: var(--gray-600); --text-placeholder: hsla(0,0%,100%,.8); --=
text-error: #f93a37; --border-xlight: hsla(0,0%,100%,.05); --border-light: =
hsla(0,0%,100%,.1); --border-medium: hsla(0,0%,100%,.15); --border-heavy: h=
sla(0,0%,100%,.2); --border-xheavy: hsla(0,0%,100%,.25); --border-sharp: hs=
la(0,0%,100%,.05); --main-surface-primary: var(--gray-800); --main-surface-=
primary-inverse: var(--white); --main-surface-secondary: var(--gray-750); -=
-main-surface-tertiary: var(--gray-700); --sidebar-surface-primary: var(--g=
ray-900); --sidebar-surface-secondary: var(--gray-800); --sidebar-surface-t=
ertiary: var(--gray-750); --sidebar-title-primary: hsla(0,0%,94%,.5); --sid=
ebar-body-primary: #ededed; --sidebar-icon: #a4a4a4; --link: #7ab7ff; --lin=
k-hover: #5e83b3; --surface-error: 249 58 55; }

@supports (color:oklch(.99 0 0)) {
  .dark { --sidebar-surface-floating-lightness: .3; --sidebar-surface-float=
ing-alpha: 1; --sidebar-surface-pinned-lightness: .29; --sidebar-surface-pi=
nned-alpha: 1; }
}

@media (prefers-reduced-transparency: reduce) {
  .dark { --message-surface: #2f2f2f; }
}

.popover { --main-surface-primary: var(--white) !important; --main-surface-=
secondary: var(--gray-100) !important; --main-surface-tertiary: var(--gray-=
200) !important; --sidebar-surface-primary: var(--white) !important; }

.dark .popover, .dark.popover, .popover .dark { --main-surface-primary: var=
(--gray-750) !important; --main-surface-secondary: var(--gray-700) !importa=
nt; --main-surface-tertiary: var(--gray-600) !important; --text-primary: va=
r(--gray-50) !important; --text-secondary: var(--gray-200) !important; --te=
xt-tertiary: var(--gray-400) !important; --text-quaternary: var(--gray-500)=
 !important; --sidebar-surface-primary: var(--gray-750) !important; }

.light:has(input#canvas-state:checked) { --main-surface-primary: #f9f9f9; -=
-message-surface: #eee; }

.light #thread { background: var(--main-surface-primary); }

textarea:focus { border-color: inherit; box-shadow: none; outline: none; }

.container { width: 100%; }

@media (min-width: 480px) {
  .container { max-width: 480px; }
}

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.prose { color: var(--tw-prose-body); max-width: 65ch; }

.prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { co=
lor: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bott=
om: 1.2em; margin-top: 1.2em; }

.prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-pr=
ose-links); font-weight: 500; text-decoration: underline; }

.prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(--=
tw-prose-bold); font-weight: 600; }

.prose :where(a strong):not(:where([class~=3D"not-prose"] *)) { color: inhe=
rit; }

.prose :where(blockquote strong):not(:where([class~=3D"not-prose"] *)) { co=
lor: inherit; }

.prose :where(thead th strong):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
decimal; margin-bottom: 1.25em; margin-top: 1.25em; }

[dir=3D"ltr"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { pad=
ding-left: 1.625em; }

[dir=3D"rtl"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { pad=
ding-right: 1.625em; }

.prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-alpha; }

.prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-alpha; }

.prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-roman; }

.prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-roman; }

.prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: decimal; }

.prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
disc; margin-bottom: 1.25em; margin-top: 1.25em; }

[dir=3D"ltr"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { pad=
ding-left: 1.625em; }

[dir=3D"rtl"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { pad=
ding-right: 1.625em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-counters); font-weight: 400; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-bullets); }

.prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: var=
(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3em=
; }

.prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-bottom: =
1.6em; margin-top: 1.6em; quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=
=80=99"; }

[dir=3D"ltr"] .prose :where(blockquote):not(:where([class~=3D"not-prose"] *=
)) { border-left-color: var(--tw-prose-quote-borders); border-left-width: 0=
.25rem; padding-left: 1em; }

[dir=3D"rtl"] .prose :where(blockquote):not(:where([class~=3D"not-prose"] *=
)) { border-right-color: var(--tw-prose-quote-borders); border-right-width:=
 0.25rem; padding-right: 1em; }

.prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose"]=
 *))::before { content: open-quote; }

.prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"] =
*))::after { content: close-quote; }

.prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111; =
margin-bottom: 0.888889em; margin-top: 0px; }

.prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 900; }

.prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333; m=
argin-bottom: 1em; margin-top: 2em; }

.prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 800; }

.prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; marg=
in-bottom: 0.6em; margin-top: 1.6em; }

.prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em; m=
argin-top: 1.5em; }

.prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2=
em; margin-top: 2em; }

.prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-bo=
ttom: 0px; margin-top: 0px; }

.prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-to=
p: 0.857143em; }

.prose :where(code):not(:where([class~=3D"not-prose"] *)) { background-colo=
r: var(--gray-100); border-radius: 0.25rem; color: var(--tw-prose-code); fo=
nt-size: 0.875em; font-weight: 500; padding: 0.15rem 0.3rem; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::before { content=
: none; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::after { content:=
 none; }

.prose :where(a code):not(:where([class~=3D"not-prose"] *)) { color: inheri=
t; }

.prose :where(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.875em; }

.prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.9em; }

.prose :where(h4 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(thead th code):not(:where([class~=3D"not-prose"] *)) { color:=
 inherit; }

.prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-color=
: transparent; border-radius: 0.375rem; color: currentcolor; font-size: 0.8=
75em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-x: auto=
; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { background-=
color: transparent; border-radius: 0px; border-width: 0px; color: inherit; =
font-family: inherit; font-size: inherit; font-weight: inherit; line-height=
: inherit; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { con=
tent: none; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after { cont=
ent: none; }

.prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0.8=
75em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-layo=
ut: auto; width: 100%; }

[dir=3D"ltr"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) { =
text-align: left; }

[dir=3D"rtl"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) { =
text-align: right; }

.prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-bottom-=
color: var(--tw-prose-th-borders); border-bottom-width: 1px; }

.prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; padding=
-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }

.prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bott=
om-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }

.prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) { =
border-bottom-width: 0px; }

.prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: baseline; }

.prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-col=
or: var(--tw-prose-th-borders); border-top-width: 1px; }

.prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: top; }

.prose { --tw-prose-body: var(--text-primary); --tw-prose-headings: var(--t=
ext-primary); --tw-prose-lead: var(--text-primary); --tw-prose-links: var(-=
-text-primary); --tw-prose-bold: var(--text-primary); --tw-prose-counters: =
var(--text-primary); --tw-prose-bullets: var(--text-primary); --tw-prose-hr=
: var(--border-xheavy); --tw-prose-quotes: var(--text-primary); --tw-prose-=
quote-borders: #e5e7eb; --tw-prose-captions: var(--text-secondary); --tw-pr=
ose-code: var(--text-primary); --tw-prose-pre-code: #e5e7eb; --tw-prose-pre=
-bg: #1f2937; --tw-prose-th-borders: #d1d5db; --tw-prose-td-borders: #e5e7e=
b; --tw-prose-invert-body: var(--text-primary); --tw-prose-invert-headings:=
 var(--text-primary); --tw-prose-invert-lead: var(--text-primary); --tw-pro=
se-invert-links: var(--text-primary); --tw-prose-invert-bold: var(--text-pr=
imary); --tw-prose-invert-counters: var(--text-primary); --tw-prose-invert-=
bullets: var(--text-primary); --tw-prose-invert-hr: var(--border-xheavy); -=
-tw-prose-invert-quotes: var(--text-primary); --tw-prose-invert-quote-borde=
rs: #374151; --tw-prose-invert-captions: var(--text-secondary); --tw-prose-=
invert-code: var(--text-primary); --tw-prose-invert-pre-code: #d1d5db; --tw=
-prose-invert-pre-bg: rgba(0,0,0,.5); --tw-prose-invert-th-borders: #4b5563=
; --tw-prose-invert-td-borders: #374151; font-size: 1rem; line-height: 1.75=
; }

.prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1.2=
5em; margin-top: 1.25em; }

.prose :where(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }

.prose :where(figure):not(:where([class~=3D"not-prose"] *)) { margin-bottom=
: 2em; margin-top: 2em; }

.prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 0.=
5em; margin-top: 0.5em; }

[dir=3D"ltr"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)) =
{ padding-left: 0.375em; }

[dir=3D"rtl"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)) =
{ padding-right: 0.375em; }

[dir=3D"ltr"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *)) =
{ padding-left: 0.375em; }

[dir=3D"rtl"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *)) =
{ padding-right: 0.375em; }

.prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) { m=
argin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose"]=
 *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(hr + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h3 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h4 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

[dir=3D"ltr"] .prose :where(thead th:first-child):not(:where([class~=3D"not=
-prose"] *)) { padding-left: 0px; }

[dir=3D"rtl"] .prose :where(thead th:first-child):not(:where([class~=3D"not=
-prose"] *)) { padding-right: 0px; }

[dir=3D"ltr"] .prose :where(thead th:last-child):not(:where([class~=3D"not-=
prose"] *)) { padding-right: 0px; }

[dir=3D"rtl"] .prose :where(thead th:last-child):not(:where([class~=3D"not-=
prose"] *)) { padding-left: 0px; }

.prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) { p=
adding: 0.571429em; }

[dir=3D"ltr"] .prose :where(tbody td:first-child, tfoot td:first-child):not=
(:where([class~=3D"not-prose"] *)) { padding-left: 0px; }

[dir=3D"rtl"] .prose :where(tbody td:first-child, tfoot td:first-child):not=
(:where([class~=3D"not-prose"] *)) { padding-right: 0px; }

[dir=3D"ltr"] .prose :where(tbody td:last-child, tfoot td:last-child):not(:=
where([class~=3D"not-prose"] *)) { padding-right: 0px; }

[dir=3D"rtl"] .prose :where(tbody td:last-child, tfoot td:last-child):not(:=
where([class~=3D"not-prose"] *)) { padding-left: 0px; }

.prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)) =
{ margin-top: 0px; }

.prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0px; }

.prose-sm :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.571429em; margin-top: 0.571429em; }

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-sm :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-base :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > :first-child):not(:where([class~=3D"not-prose"]=
 *)) { margin-top: 0px; }

.prose-base :where(.prose > :last-child):not(:where([class~=3D"not-prose"] =
*)) { margin-bottom: 0px; }

.prose-lg :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.888889em; margin-top: 0.888889em; }

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-lg :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.8em; margin-top: 0.8em; }

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-2xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0.833333em; margin-top: 0.833333em; }

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] =
*)) { margin-top: 0px; }

.prose-2xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *=
)) { margin-bottom: 0px; }

.form-input, .form-multiselect, .form-select, .form-textarea { --tw-shadow:=
 0 0 #0000; appearance: none; background-color: rgb(255, 255, 255); border-=
color: rgb(155, 155, 155); border-radius: 0px; border-width: 1px; font-size=
: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

.form-input:focus, .form-multiselect:focus, .form-select:focus, .form-texta=
rea:focus { --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw=
-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 v=
ar(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: v=
ar(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-=
ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent sol=
id 2px; outline-offset: 2px; }

[dir=3D"ltr"] .form-input:focus, [dir=3D"ltr"] .form-multiselect:focus, [di=
r=3D"ltr"] .form-select:focus, [dir=3D"ltr"] .form-textarea:focus { --tw-ri=
ng-inset: var(--tw-empty, ); }

[dir=3D"rtl"] .form-input:focus, [dir=3D"rtl"] .form-multiselect:focus, [di=
r=3D"rtl"] .form-select:focus, [dir=3D"rtl"] .form-textarea:focus { --tw-ri=
ng-inset: var(--tw-empty, ); }

.form-input::placeholder, .form-textarea::placeholder { color: rgb(155, 155=
, 155); opacity: 1; }

.form-input::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

.form-input::-webkit-date-and-time-value { min-height: 1.5em; }

.form-input::-webkit-datetime-edit, .form-input::-webkit-datetime-edit-day-=
field, .form-input::-webkit-datetime-edit-hour-field, .form-input::-webkit-=
datetime-edit-meridiem-field, .form-input::-webkit-datetime-edit-millisecon=
d-field, .form-input::-webkit-datetime-edit-minute-field, .form-input::-web=
kit-datetime-edit-month-field, .form-input::-webkit-datetime-edit-second-fi=
eld, .form-input::-webkit-datetime-edit-year-field { padding-bottom: 0px; p=
adding-top: 0px; }

.btn { align-items: center; border-color: transparent; border-radius: 9999p=
x; border-width: 1px; display: inline-flex; flex-shrink: 0; font-size: 0.87=
5rem; font-weight: 500; justify-content: center; line-height: 1.25rem; min-=
height: 38px; padding: 0.5rem 0.875rem; pointer-events: auto; }

.btn:focus { outline: transparent solid 2px; outline-offset: 2px; }

.btn:focus-visible { outline: transparent solid 2px; outline-offset: 2px; }

.btn:disabled { cursor: not-allowed; opacity: 0.5; }

.btn:active { opacity: 0.8; }

.btn-green { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rg=
b(16 163 127/var(--tw-bg-opacity)); color: rgb(255 255 255/var(--tw-text-op=
acity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-green:hover { --tw-bg-opacity: 1; background-color: rgb(26 127 100/v=
ar(--tw-bg-opacity)); }
}

.btn-green:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 =
0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shad=
ow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(=
--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(25 195 125/var=
(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-rin=
g-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.btn-blue { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgb=
(0 102 222/var(--tw-bg-opacity)); color: rgb(255 255 255/var(--tw-text-opac=
ity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-blue:hover { --tw-bg-opacity: 1; background-color: rgb(29 78 216/var=
(--tw-bg-opacity)); }
}

.btn-blue:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0=
 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shado=
w: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(-=
-tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(29 78 216/var(-=
-tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-=
offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: =
rgb(13 13 13/var(--tw-bg-opacity)); color: rgb(255 255 255/var(--tw-text-op=
acity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-primary:hover { --tw-bg-opacity: 1; background-color: rgb(33 33 33/v=
ar(--tw-bg-opacity)); }
}

.btn-primary:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) =
0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sh=
adow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) va=
r(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(155 155 155/=
var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-=
ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.btn-primary:is(.dark *) { --tw-bg-opacity: 1; --tw-text-opacity: 1; backgr=
ound-color: rgb(249 249 249/var(--tw-bg-opacity)); color: rgb(13 13 13/var(=
--tw-text-opacity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-primary:hover:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(236 236 236/var(--tw-bg-opacity)); }
}

.btn-danger { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: r=
gb(239 68 68/var(--tw-bg-opacity)); color: rgb(255 255 255/var(--tw-text-op=
acity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-danger:hover { --tw-bg-opacity: 1; background-color: rgb(185 28 28/v=
ar(--tw-bg-opacity)); }
}

.btn-danger:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0=
 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sha=
dow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var=
(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(248 113 113/v=
ar(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-r=
ing-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

@media (hover: hover) and (pointer: fine) {
  .btn-danger:disabled:hover { --tw-bg-opacity: 1; background-color: rgb(18=
5 28 28/var(--tw-bg-opacity)); }
}

.btn-danger-outline { --tw-border-opacity: 1; --tw-text-opacity: 1; backgro=
und-color: var(--main-surface-primary); border-color: rgb(220 38 38/var(--t=
w-border-opacity)); border-width: 1px; color: rgb(220 38 38/var(--tw-text-o=
pacity)); }

@media (hover: hover) and (pointer: fine) {
  .btn-danger-outline:hover { background-color: var(--main-surface-secondar=
y); }
}

.btn-danger-outline:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-=
inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-=
ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-wid=
th)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(220 3=
8 38/var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(=
--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); =
}

.btn-secondary { background-color: var(--main-surface-primary); border-colo=
r: var(--border-medium); border-width: 1px; color: var(--text-primary); fon=
t-size: 0.875rem; line-height: 1.25rem; }

@media (hover: hover) and (pointer: fine) {
  .btn-secondary:hover { background-color: var(--main-surface-secondary); }
}

.btn-secondary:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset=
) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-=
shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) =
var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgb(103 103 10=
3/var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--t=
w-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

@media (hover: hover) and (pointer: fine) {
  .btn-ghost:hover { background-color: rgba(0, 0, 0, 0.05); }
}

.btn-ghost:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 =
0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shad=
ow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(=
--tw-ring-color); --tw-ring-color: rgba(0,0,0,.05); box-shadow: var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); outline=
: transparent solid 2px; outline-offset: 2px; }

@media (hover: hover) and (pointer: fine) {
  .btn-ghost:hover:is(.dark *) { background-color: rgba(255, 255, 255, 0.1)=
; }
}

.text-danger { --tw-text-opacity: 1; color: rgb(239 68 68/var(--tw-text-opa=
city)); }

.btn-xs { font-size: 0.75rem; line-height: 1rem; min-height: 26px; padding:=
 0.25rem 0.75rem; }

.btn-small { min-height: 30px; padding: 0.25rem 0.75rem; }

.btn-giant, .btn-large { min-height: 46px; }

.btn-large { padding: 0.75rem 1rem; }

.btn-giant { font-size: 1rem; font-weight: 600; line-height: 1.5rem; paddin=
g: 0.625rem 1.5rem; }

body, html { background-color: var(--main-surface-primary); }

#__next, #root, body, html { height: 100%; }

.markdown { max-width: unset; }

.markdown pre { margin-top: 0.5rem; }

.markdown h1 { font-weight: 700; letter-spacing: -0.04rem; }

.markdown h1:first-child { margin-top: 0px; }

.markdown h2 { font-weight: 600; margin-bottom: 1rem; margin-top: 2rem; }

.markdown h2:first-child { margin-top: 0px; }

.markdown h3 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h3:first-child { margin-top: 0px; }

.markdown h4 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h4:first-child { margin-top: 0px; }

.markdown h5 { font-weight: 600; }

.markdown h5:first-child { margin-top: 0px; }

.markdown blockquote { --tw-border-opacity: 1; border-color: rgb(155 155 15=
5/var(--tw-border-opacity)); line-height: 1.5rem; margin: 0px; padding-bott=
om: 0.5rem; padding-top: 0.5rem; }

[dir=3D"ltr"] .markdown blockquote { border-left-width: 2px; padding-left: =
1rem; }

[dir=3D"rtl"] .markdown blockquote { border-right-width: 2px; padding-right=
: 1rem; }

.markdown blockquote > p { margin: 0px; }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown table { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; b=
order-collapse: separate; border-spacing: var(--tw-border-spacing-x) var(--=
tw-border-spacing-y); margin-bottom: 0.25rem; margin-top: 0.25rem; width: 1=
00%; }

.markdown p { margin-bottom: 0.5rem; }

.markdown p + :where(ol, ul) { margin-top: 0px; }

.markdown :where(ol, ul) > li > :last-child { margin-bottom: 0px; }

.markdown :where(ol, ul) > li > :first-child { margin-bottom: 0px; margin-t=
op: 0px; }

.markdown th { background-color: var(--border-light); border-bottom-width: =
1px; border-color: var(--border-medium); border-top-width: 1px; padding: 0.=
25rem 0.75rem; }

[dir=3D"ltr"] .markdown th { border-left-width: 1px; }

[dir=3D"rtl"] .markdown th { border-right-width: 1px; }

[dir=3D"ltr"] .markdown th:first-child { border-top-left-radius: 0.375rem; =
padding-left: 0.75rem; }

[dir=3D"rtl"] .markdown th:first-child { border-top-right-radius: 0.375rem;=
 padding-right: 0.75rem; }

[dir=3D"ltr"] .markdown th:last-child { border-right-width: 1px; border-top=
-right-radius: 0.375rem; padding-right: 0.75rem; }

[dir=3D"rtl"] .markdown th:last-child { border-left-width: 1px; border-top-=
left-radius: 0.375rem; padding-left: 0.75rem; }

.markdown td { border-bottom-width: 1px; border-color: var(--border-medium)=
; padding: 0.25rem 0.75rem; }

[dir=3D"ltr"] .markdown td { border-left-width: 1px; }

[dir=3D"rtl"] .markdown td { border-right-width: 1px; }

[dir=3D"ltr"] .markdown td:first-child { padding-left: 0.75rem; }

[dir=3D"rtl"] .markdown td:first-child { padding-right: 0.75rem; }

[dir=3D"ltr"] .markdown td:last-child { border-right-width: 1px; padding-ri=
ght: 0.75rem; }

[dir=3D"rtl"] .markdown td:last-child { border-left-width: 1px; padding-lef=
t: 0.75rem; }

[dir=3D"ltr"] .markdown tbody tr:last-child td:first-child { border-bottom-=
left-radius: 0.375rem; }

[dir=3D"rtl"] .markdown tbody tr:last-child td:first-child { border-bottom-=
right-radius: 0.375rem; }

[dir=3D"ltr"] .markdown tbody tr:last-child td:last-child { border-bottom-r=
ight-radius: 0.375rem; }

[dir=3D"rtl"] .markdown tbody tr:last-child td:last-child { border-bottom-l=
eft-radius: 0.375rem; }

.markdown a { color: var(--link); font-weight: 400; text-decoration-line: n=
one; }

@media (hover: hover) and (pointer: fine) {
  .markdown a:hover { color: var(--link-hover); }
}

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

.markdown .float-image + p { margin-top: 0px; }

@keyframes fade-in {=20
  0% { opacity: var(--fade-in-from,0); }
  100% { opacity: 1; }
}

@keyframes fade-in-marker {=20
  0% { color: var(--fade-in-marker-from,transparent); }
}

.streaming-response a span, .streaming-response h1 span, .streaming-respons=
e h2 span, .streaming-response h3 span, .streaming-response h4 span, .strea=
ming-response h5 span, .streaming-response h6 span, .streaming-response li =
span:not([class^=3D"hljs-"]), .streaming-response p a, .streaming-response =
p span { --animation-duration: .5s; animation-duration: ; animation-timing-=
function: ; animation-iteration-count: ; animation-direction: ; animation-f=
ill-mode: ; animation-name: ; animation-timeline: ; animation-range-start: =
; animation-range-end: ; animation-delay: calc((var(--animation-count, 0) -=
 var(--animation-catch-up, 0))*var(--animation-rate, 70ms)); animation-play=
-state: var(--streaming-animation-state,paused); opacity: var(--turn-block-=
opacity,var(--turn-block-default-opacity,0)); }

.streaming-response li::marker { color: var(--marker-color); transition-pro=
perty: ; transition-duration: ; transition-timing-function: ; transition-be=
havior: ; transition-delay: calc((var(--animation-marker-count, 0) - var(--=
animation-catch-up, 0))*var(--animation-rate, 70ms)); }

.markdown.headers-v2 h1 { font-size: 1.125rem; font-weight: 600; line-heigh=
t: 1.75rem; margin-bottom: 0.75rem; margin-top: 0.25rem; }

.markdown.headers-v2 p:not(:first-child) { margin-top: 0.5rem; }

@keyframes blink {=20
  100% { visibility: hidden; }
}

.result-streaming > :not(ol):not(ul):not(pre):not(div):last-child::after, .=
result-streaming > pre:last-child code::after { content: "=E2=97=8F"; font-=
family: Circle, system-ui, sans-serif; line-height: normal; vertical-align:=
 baseline; }

.result-streaming.no-flow > :not(ol):not(ul):not(pre):last-child::after, .r=
esult-streaming.no-flow > pre:last-child code::after { margin-top: 0.25rem;=
 position: absolute; }

textarea::placeholder { color: var(--text-placeholder); }

.result-thinking:empty:last-child::after { -webkit-font-smoothing: subpixel=
-antialiased; animation: 1.25s ease-in-out 0s infinite normal none running =
pulseSize; backface-visibility: hidden; background-color: var(--text-primar=
y); border-radius: 50%; box-sizing: border-box; content: " "; display: bloc=
k; height: 12px; position: absolute; top: 7px; transform: translateZ(0px); =
transform-origin: center center; width: 12px; will-change: transform; }

@supports (selector(:has(*))) {
  .result-streaming:not(.streaming-response) > :is(ul, ol):last-child > li:=
last-child:not(:has(* > li))::after, .result-streaming:not(.streaming-respo=
nse) > :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li=
:last-child::after, .result-streaming:not(.streaming-response) > :is(ul, ol=
):last-child > li:last-child > :is(ul, ol):last-child > li:last-child > :is=
(ul, ol):last-child > li:last-child::after { content: "=E2=97=8F"; font-fam=
ily: Circle, system-ui, sans-serif; line-height: normal; vertical-align: ba=
seline; }
  [dir=3D"ltr"] .result-streaming:not(.streaming-response) > :is(ul, ol):la=
st-child > li:last-child:not(:has(* > li))::after, [dir=3D"ltr"] .result-st=
reaming:not(.streaming-response) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child::after, [dir=3D"ltr"] .result-strea=
ming:not(.streaming-response) > :is(ul, ol):last-child > li:last-child > :i=
s(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-chi=
ld::after { margin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming:not(.streaming-response) > :is(ul, ol):la=
st-child > li:last-child:not(:has(* > li))::after, [dir=3D"rtl"] .result-st=
reaming:not(.streaming-response) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child::after, [dir=3D"rtl"] .result-strea=
ming:not(.streaming-response) > :is(ul, ol):last-child > li:last-child > :i=
s(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-chi=
ld::after { margin-right: 0.25rem; }
}

@supports not (selector(:has(*))) {
  .result-streaming:not(.streaming-response) > ol:last-child > li:last-chil=
d::after, .result-streaming:not(.streaming-response) > ul:last-child > li:l=
ast-child::after { content: "=E2=97=8F"; font-family: Circle, system-ui, sa=
ns-serif; line-height: normal; vertical-align: baseline; }
  [dir=3D"ltr"] .result-streaming:not(.streaming-response) > ol:last-child =
> li:last-child::after, [dir=3D"ltr"] .result-streaming:not(.streaming-resp=
onse) > ul:last-child > li:last-child::after { margin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming:not(.streaming-response) > ol:last-child =
> li:last-child::after, [dir=3D"rtl"] .result-streaming:not(.streaming-resp=
onse) > ul:last-child > li:last-child::after { margin-right: 0.25rem; }
}

.result-streaming .katex-error, .streaming-response .katex-error { display:=
 none; }

@keyframes pulse-dot {=20
  100% { transform: scale(var(--pulse-scale,1.3)); }
}

.pulsing-dot { aspect-ratio: 1 / 1; background: var(--dot-color); border-ra=
dius: 50%; opacity: var(--dot-opacity,1); width: 1rem; }

@media (prefers-reduced-motion: no-preference) {
  .pulsing-dot { animation: pulse-dot 1s infinite var(--easing-common) alte=
rnate-reverse; transition: .2s opacity var(--easing-common); translate: 0px=
 3px; }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: 0.24s cubic-bezier(0, 0, 0.2, 1); }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1) 0s 1 normal both runn=
ing toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.title { font-feature-settings: normal; font-family: ui-sans-serif, system-=
ui, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color E=
moji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variat=
ion-settings: normal; }

.icon-xs { stroke-width: 1.5; flex-shrink: 0; height: 0.75rem; width: 0.75r=
em; }

.icon-sm { stroke-width: 2; }

.icon-sm, .icon-sm-heavy { flex-shrink: 0; height: 1rem; width: 1rem; }

.icon-sm-heavy { stroke-width: 2.5; }

.icon-md { height: 18px; width: 18px; }

.icon-md, .icon-sidebar { stroke-width: 1.5; flex-shrink: 0; }

.icon-sidebar { height: 20px; width: 20px; }

.icon-md-heavy { stroke-width: 2.5; flex-shrink: 0; height: 18px; width: 18=
px; }

.icon-lg { stroke-width: 1.5; flex-shrink: 0; height: 1.5rem; width: 1.5rem=
; }

.icon-lg-heavy { stroke-width: 2; flex-shrink: 0; height: 22px; width: 22px=
; }

.icon-xl { stroke-width: 1.5; flex-shrink: 0; height: 1.75rem; width: 1.75r=
em; }

.icon-xl-heavy { stroke-width: 2; flex-shrink: 0; height: 24px; width: 24px=
; }

.icon-2xl { stroke-width: 1.5; flex-shrink: 0; height: 2rem; width: 2rem; }

.icon-workspace-avatar-preview { stroke-width: 1.5; height: 96px; width: 96=
px; }

.icon-cover { stroke-width: 1.5; height: 234px; width: 234px; }

.icon-shimmer { animation: 5s cubic-bezier(0.2, 0.44, 0.38, 1.02) 0s infini=
te normal none running icon-shimmer; background-repeat: no-repeat; mask: li=
near-gradient(80deg, currentcolor 30%, rgba(0, 0, 0, 0.333), currentcolor 7=
0%) right center / 300% 100%; }

@keyframes icon-shimmer {=20
  0% { mask-position: right center; }
  20% { mask-position: left center; }
  100% { mask-position: left center; }
}

.loading-results-shimmer { animation: 3s linear 0s infinite normal none run=
ning loading-results-shimmer; background-image: ; background-position-x: ; =
background-position-y: ; background-repeat: ; background-attachment: ; back=
ground-origin: ; background-clip: ; background-color: ; background-size: 10=
00px 100%; }

@keyframes loading-results-shimmer {=20
  0% { background-position: -1000px 0px; }
  100% { background-position: 1000px 0px; }
}

.loading-shimmer-pure-text { -webkit-text-fill-color: transparent; animatio=
n-delay: 0.5s; animation-duration: 3s; animation-iteration-count: infinite;=
 animation-name: loading-shimmer; background-image: ; background-position-x=
: ; background-position-y: ; background-attachment: ; background-origin: ; =
background-color: ; background-clip: text; background-repeat: no-repeat; ba=
ckground-size: 50% 200%; display: inline-block; }

[dir=3D"ltr"] .loading-shimmer-pure-text { background-position: -100% top; =
}

[dir=3D"rtl"] .loading-shimmer-pure-text { background-position: 200% top; }

.loading-shimmer { -webkit-text-fill-color: transparent; animation-delay: 0=
.5s; animation-duration: 3s; animation-iteration-count: infinite; animation=
-name: loading-shimmer; background-image: ; background-position-x: ; backgr=
ound-position-y: ; background-attachment: ; background-origin: ; background=
-color: ; background-clip: text; background-repeat: no-repeat; background-s=
ize: 50% 200%; display: inline-block; }

[dir=3D"ltr"] .loading-shimmer { background-position: -100% top; }

[dir=3D"rtl"] .loading-shimmer { background-position: 200% top; }

.loading-shimmer:hover { -webkit-text-fill-color: var(--text-primary); anim=
ation: auto ease 0s 1 normal none running none; background: transparent; }

.hint-pill { color: var(--hint-text); font-weight: 600; }

@keyframes loading-shimmer {=20
  0% { background-position: -100% top; }
  100% { background-position: 250% top; }
}

.gizmo-shadow-stroke { position: relative; }

.gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px rgba(0,0,0,.1); =
--tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); border-radius:=
 9999px; box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-s=
hadow,0 0 #0000),var(--tw-shadow); content: ""; inset: 0px; position: absol=
ute; }

.dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px hsla(0,0%,=
100%,.2); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); box-=
shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #00=
00),var(--tw-shadow); }

* { scrollbar-color: var(--main-surface-tertiary) transparent; }

:hover { scrollbar-color: var(--gray-200) transparent; }

.dark :hover { scrollbar-color: var(--gray-600) transparent; }

.no-scrollbar::-webkit-scrollbar { display: none; }

.no-scrollbar { scrollbar-width: none; }

.gizmo-bot-avatar { outline: solid 1px var(--main-surface-tertiary); }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { left: min(0px,var(--radix-popper-available-width) + (-1 * var(-=
-radix-popper-anchor-width))) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { right: min(0px,var(--radix-popper-available-width) + (-1 * var(=
--radix-popper-anchor-width))) !important; }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { left: max(0px,(-1 * var(--radix-popper-available-width)) + var(-=
-radix-popper-anchor-width)) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { right: max(0px,(-1 * var(--radix-popper-available-width)) + var(=
--radix-popper-anchor-width)) !important; }

.dark\:prose-invert:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-bo=
dy); --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead:=
 var(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links=
); --tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(-=
-tw-prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bulle=
ts); --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-=
prose-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote=
-borders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose=
-code: var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-inv=
ert-pre-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-prose=
-th-borders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: var(=
--tw-prose-invert-td-borders); }

.dark\:prose-invert:is(.dark *) :where(pre):not(:where([class~=3D"not-prose=
"] *)) code { background-color: transparent; }

.dark\:prose-invert:is(.dark *) :where(code):not(:where([class~=3D"not-pros=
e"] *)) { background-color: var(--gray-700); }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:inset-x-4 { left: 1rem; right: 1rem; }
  .sm\:bottom-snc-1 { bottom: var(--snc-1); }
  [dir=3D"ltr"] .sm\:left-1\/2 { left: 50%; }
  [dir=3D"rtl"] .sm\:left-1\/2 { right: 50%; }
  [dir=3D"ltr"] .sm\:left-16 { left: 4rem; }
  [dir=3D"rtl"] .sm\:left-16 { right: 4rem; }
  [dir=3D"ltr"] .sm\:left-6 { left: 1.5rem; }
  [dir=3D"rtl"] .sm\:left-6, [dir=3D"ltr"] .sm\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .sm\:right-6 { left: 1.5rem; }
  .sm\:top-6 { top: 1.5rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-16 { margin-left: 4rem; margin-right: 4rem; }
  .sm\:-mt-12 { margin-top: -3rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-2\.5 { margin-bottom: 0.625rem; }
  .sm\:mb-3 { margin-bottom: 0.75rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mb-6 { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .sm\:ml-7 { margin-left: 1.75rem; }
  [dir=3D"rtl"] .sm\:ml-7 { margin-right: 1.75rem; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:mt-auto { margin-top: auto; }
  .sm\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  .sm\:hidden { display: none; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-32 { height: 8rem; }
  .sm\:h-\[172px\] { height: 172px; }
  .sm\:h-full { height: 100%; }
  .sm\:h-snc-input-height { height: var(--snc-input-height); }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-32 { width: 8rem; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[calc\(\(100\%-1rem\)\/4\)\] { width: calc(25% - 0.25rem); }
  .sm\:w-\[calc\(100cqw-62px\)\] { width: calc(100cqw - 62px); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[552px\] { max-width: 552px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grow { flex-grow: 1; }
  .sm\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-1 { gap: 0.25rem; }
  .sm\:gap-2 { gap: 0.5rem; }
  .sm\:gap-2\.5 { gap: 0.625rem; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-4 { gap: 1rem; }
  .sm\:gap-6 { gap: 1.5rem; }
  .sm\:gap-x-16 { column-gap: 4rem; }
  .sm\:gap-x-2 { column-gap: 0.5rem; }
  .sm\:gap-x-2\.5 { column-gap: 0.625rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:gap-y-2 { row-gap: 0.5rem; }
  .sm\:gap-y-4 { row-gap: 1rem; }
  .sm\:gap-y-5 { row-gap: 1.25rem; }
  .sm\:overflow-hidden { overflow: hidden; }
  .sm\:rounded-full { border-radius: 9999px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  [dir=3D"ltr"] .sm\:rounded-bl-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-bl-xl, [dir=3D"ltr"] .sm\:rounded-br-xl { bord=
er-bottom-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-br-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"ltr"] .sm\:rounded-tl-xl { border-top-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tl-xl, [dir=3D"ltr"] .sm\:rounded-tr-xl { bord=
er-top-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tr-xl { border-top-left-radius: 0.75rem; }
  .sm\:border-none { border-style: none; }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-10 { padding: 2.5rem; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .sm\:px-snc-results-padding { padding-left: var(--snc-results-padding); p=
adding-right: var(--snc-results-padding); }
  .sm\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .sm\:py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }
  .sm\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .sm\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-10 { padding-bottom: 2.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pb-8 { padding-bottom: 2rem; }
  [dir=3D"ltr"] .sm\:pl-3 { padding-left: 0.75rem; }
  [dir=3D"rtl"] .sm\:pl-3 { padding-right: 0.75rem; }
  [dir=3D"ltr"] .sm\:pl-5 { padding-left: 1.25rem; }
  [dir=3D"rtl"] .sm\:pl-5 { padding-right: 1.25rem; }
  [dir=3D"ltr"] .sm\:pl-\[3\.25rem\] { padding-left: 3.25rem; }
  [dir=3D"rtl"] .sm\:pl-\[3\.25rem\] { padding-right: 3.25rem; }
  [dir=3D"ltr"] .sm\:pr-2 { padding-right: 0.5rem; }
  [dir=3D"rtl"] .sm\:pr-2 { padding-left: 0.5rem; }
  [dir=3D"ltr"] .sm\:pr-5 { padding-right: 1.25rem; }
  [dir=3D"rtl"] .sm\:pr-5 { padding-left: 1.25rem; }
  .sm\:pt-12 { padding-top: 3rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}

@media (min-width: 768px) {
  .md\:sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height:=
 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; whi=
te-space: nowrap; width: 1px; }
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:absolute { position: absolute; }
  .md\:bottom-4 { bottom: 1rem; }
  [dir=3D"ltr"] .md\:left-\[-250px\] { left: -250px; }
  [dir=3D"rtl"] .md\:left-\[-250px\] { right: -250px; }
  [dir=3D"ltr"] .md\:right-12 { right: 3rem; }
  [dir=3D"rtl"] .md\:right-12 { left: 3rem; }
  [dir=3D"ltr"] .md\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .md\:right-6 { left: 1.5rem; }
  .md\:top-6 { top: 1.5rem; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-\[5\.75rem\] { top: 5.75rem; }
  .md\:top-header-height { top: 3.5rem; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-2 { margin-bottom: 0.5rem; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:mb-6 { margin-bottom: 1.5rem; }
  .md\:mb-8 { margin-bottom: 2rem; }
  [dir=3D"ltr"] .md\:ml-0 { margin-left: 0px; }
  [dir=3D"rtl"] .md\:ml-0 { margin-right: 0px; }
  [dir=3D"ltr"] .md\:ml-8 { margin-left: 2rem; }
  [dir=3D"rtl"] .md\:ml-8 { margin-right: 2rem; }
  [dir=3D"ltr"] .md\:ml-\[-8px\] { margin-left: -8px; }
  [dir=3D"rtl"] .md\:ml-\[-8px\] { margin-right: -8px; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:mt-7 { margin-top: 1.75rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:mt-px { margin-top: 1px; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:aspect-\[140\/67\] { aspect-ratio: 140 / 67; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:h-\[30rem\] { height: 30rem; }
  .md\:h-header-height { height: 3.5rem; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[20rem\] { min-height: 20rem; }
  .md\:min-h-\[30rem\] { min-height: 30rem; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[720px\] { width: 720px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[680px\] { min-width: 680px; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-5xl { max-width: 64rem; }
  .md\:max-w-96 { max-width: 24rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:shrink { flex-shrink: 1; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:translate-y-\[30px\] { --tw-translate-y: 30px; transform: translate(=
var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(=
var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(=
var(--tw-scale-y)); }
  .md\:columns-3 { column-count: 3; }
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-1 { grid-template-rows: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_20px\] { grid-template-rows: m=
inmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-row-reverse { flex-direction: row-reverse; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-center { align-items: center; }
  .md\:justify-center { justify-content: center; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-0 { gap: 0px; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-5 { gap: 1.25rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:self-end { align-self: flex-end; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  [dir=3D"ltr"] .md\:border-l { border-left-width: 1px; }
  [dir=3D"rtl"] .md\:border-l, [dir=3D"ltr"] .md\:border-r { border-right-w=
idth: 1px; }
  [dir=3D"rtl"] .md\:border-r { border-left-width: 1px; }
  [dir=3D"ltr"] .md\:border-r-0 { border-right-width: 0px; }
  [dir=3D"rtl"] .md\:border-r-0 { border-left-width: 0px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgb(236 236 =
236/var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  [dir=3D"ltr"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  [dir=3D"rtl"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(-180deg, rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-20 { padding: 5rem; }
  .md\:p-4 { padding: 1rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-20 { padding-left: 5rem; padding-right: 5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-0 { padding-bottom: 0px; padding-top: 0px; }
  .md\:py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }
  .md\:py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }
  .md\:py-16 { padding-bottom: 4rem; padding-top: 4rem; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-10 { padding-bottom: 2.5rem; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-6 { padding-bottom: 1.5rem; }
  .md\:pb-9 { padding-bottom: 2.25rem; }
  [dir=3D"ltr"] .md\:pl-2 { padding-left: 0.5rem; }
  [dir=3D"rtl"] .md\:pl-2 { padding-right: 0.5rem; }
  [dir=3D"ltr"] .md\:pl-4 { padding-left: 1rem; }
  [dir=3D"rtl"] .md\:pl-4 { padding-right: 1rem; }
  [dir=3D"ltr"] .md\:pl-6 { padding-left: 1.5rem; }
  [dir=3D"rtl"] .md\:pl-6 { padding-right: 1.5rem; }
  [dir=3D"ltr"] .md\:pr-3 { padding-right: 0.75rem; }
  [dir=3D"rtl"] .md\:pr-3 { padding-left: 0.75rem; }
  [dir=3D"ltr"] .md\:pr-8 { padding-right: 2rem; }
  [dir=3D"rtl"] .md\:pr-8 { padding-left: 2rem; }
  .md\:ps-0 { padding-inline-start: 0px; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:pt-\[4\.5rem\] { padding-top: 4.5rem; }
  [dir=3D"ltr"] .md\:text-left { text-align: left; }
  [dir=3D"rtl"] .md\:text-left { text-align: right; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:text-xs { font-size: 0.75rem; line-height: 1rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  [dir=3D"ltr"] .md\:first\:ml-0:first-child { margin-left: 0px; }
  [dir=3D"rtl"] .md\:first\:ml-0:first-child { margin-right: 0px; }
  [dir=3D"ltr"] .md\:first\:rounded-bl-xl:first-child { border-bottom-left-=
radius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-bl-xl:first-child { border-bottom-right=
-radius: 0.75rem; }
  [dir=3D"ltr"] .md\:first\:rounded-tl-xl:first-child { border-top-left-rad=
ius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-tl-xl:first-child { border-top-right-ra=
dius: 0.75rem; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .md\:last\:mr-0:last-child { margin-right: 0px; }
  [dir=3D"rtl"] .md\:last\:mr-0:last-child { margin-left: 0px; }
  [dir=3D"ltr"] .md\:last\:rounded-br-xl:last-child { border-bottom-right-r=
adius: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-br-xl:last-child { border-bottom-left-ra=
dius: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:rounded-tr-xl:last-child { border-top-right-radi=
us: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-tr-xl:last-child { border-top-left-radiu=
s: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:border-r:last-child { border-right-width: 1px; }
  [dir=3D"rtl"] .md\:last\:border-r:last-child { border-left-width: 1px; }
  @media (hover: hover) and (pointer: fine) {
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(=
249 249 249/var(--tw-bg-opacity)); }
}
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .md\:dark\:border-gray-700:is(.dark *) { --tw-border-opacity: 1; border-c=
olor: rgb(66 66 66/var(--tw-border-opacity)); }
  .md\:dark\:border-transparent:is(.dark *) { border-color: transparent; }
  .dark\:md\:bg-transparent:is(.dark *) { background-color: transparent; }
  @media (hover: hover) and (pointer: fine) {
  .dark\:md\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgb(66 66 66/var(--tw-bg-opacity)); }
}
}

@media (min-width: 1536px) {
  [dir=3D"ltr"] .\32 xl\:left-\[-400px\] { left: -400px; }
  [dir=3D"rtl"] .\32 xl\:left-\[-400px\] { right: -400px; }
  .\32 xl\:w-\[400px\] { width: 400px; }
  .\32 xl\:max-w-\[800px\] { max-width: 800px; }
  .\32 xl\:pt-12 { padding-top: 3rem; }
  .\32 xl\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }
}

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/assets/KaTeX_AMS-Regular-e1why8ff.woff2=
") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Bold-n=
63xiolk.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Regula=
r-npwmqylf.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Bold-ikhebgtj.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Regular-i0egur=
y6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Bold-ktk38ybk.woff2"=
) format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-BoldItalic-oj033t4i.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Italic-2p4bq1jf.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Regular-hbkzldb8.wof=
f2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-BoldItalic-jdo1yxu8.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-Italic-cz4b2ure.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Bold-otxc8=
itm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Italic-k4k=
ksncm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Regular-lt=
w53ck4.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/assets/KaTeX_Script-Regular-oybd33cp=
.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size1-Regular-cjccv44r.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size2-Regular-onxq3bzc.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("data:font/woff2;base64,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") forma=
t("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size4-Regular-nv9nppzf.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Typewriter-Regular-=
iqvr3vwu.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

[dir=3D"ltr"] .katex .vlist-t2 { margin-right: -2px; }

[dir=3D"rtl"] .katex .vlist-t2 { margin-left: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

[dir=3D"ltr"] .katex .msupsub { text-align: left; }

[dir=3D"rtl"] .katex .msupsub { text-align: right; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

[dir=3D"ltr"] .katex .llap > .inner { right: 0px; }

[dir=3D"rtl"] .katex .llap > .inner { left: 0px; }

[dir=3D"ltr"] .katex .clap > .inner, [dir=3D"ltr"] .katex .rlap > .inner { =
left: 0px; }

[dir=3D"rtl"] .katex .clap > .inner, [dir=3D"rtl"] .katex .rlap > .inner { =
right: 0px; }

[dir=3D"ltr"] .katex .clap > .inner > span { margin-left: -50%; margin-righ=
t: 50%; }

[dir=3D"rtl"] .katex .clap > .inner > span { margin-left: 50%; margin-right=
: -50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

[dir=3D"ltr"] .katex .sqrt > .root { margin-left: 0.277778em; margin-right:=
 -0.555556em; }

[dir=3D"rtl"] .katex .sqrt > .root { margin-left: -0.555556em; margin-right=
: 0.277778em; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

[dir=3D"ltr"] .katex .mtable .col-align-l > .vlist-t { text-align: left; }

[dir=3D"rtl"] .katex .mtable .col-align-l > .vlist-t { text-align: right; }

[dir=3D"ltr"] .katex .mtable .col-align-r > .vlist-t { text-align: right; }

[dir=3D"rtl"] .katex .mtable .col-align-r > .vlist-t { text-align: left; }

[dir=3D"ltr"] .katex .svg-align { text-align: left; }

[dir=3D"rtl"] .katex .svg-align { text-align: right; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { overflow: hidden; position: absolute; width: 50.2%=
; }

[dir=3D"ltr"] .katex .halfarrow-left { left: 0px; }

[dir=3D"rtl"] .katex .halfarrow-left { right: 0px; }

.katex .halfarrow-right { overflow: hidden; position: absolute; width: 50.2=
%; }

[dir=3D"ltr"] .katex .halfarrow-right { right: 0px; }

[dir=3D"rtl"] .katex .halfarrow-right { left: 0px; }

.katex .brace-left { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-left { left: 0px; }

[dir=3D"rtl"] .katex .brace-left { right: 0px; }

.katex .brace-center { overflow: hidden; position: absolute; width: 50%; }

[dir=3D"ltr"] .katex .brace-center { left: 25%; }

[dir=3D"rtl"] .katex .brace-center { right: 25%; }

.katex .brace-right { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-right { right: 0px; }

[dir=3D"rtl"] .katex .brace-right { left: 0px; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

[dir=3D"ltr"] .katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; =
}

[dir=3D"rtl"] .katex .cd-arrow-pad { padding: 0px 0.27778em 0px 0.55556em; =
}

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-top: 0.049em solid; box-sizing: border-box; }

[dir=3D"ltr"] .katex .angl { border-right: 0.049em solid; margin-right: 0.0=
3889em; }

[dir=3D"rtl"] .katex .angl { border-left: 0.049em solid; margin-left: 0.038=
89em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-left { right: calc(50% + 0.3em); text-align:=
 left; }

[dir=3D"rtl"] .katex .cd-label-left { left: calc(50% + 0.3em); text-align: =
right; }

.katex .cd-label-right { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-right { left: calc(50% + 0.3em); text-align:=
 right; }

[dir=3D"rtl"] .katex .cd-label-right { right: calc(50% + 0.3em); text-align=
: left; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; }

[dir=3D"ltr"] .katex-display > .katex > .katex-html > .tag { right: 0px; }

[dir=3D"rtl"] .katex-display > .katex > .katex-html > .tag { left: 0px; }

[dir=3D"ltr"] .katex-display.leqno > .katex > .katex-html > .tag { left: 0p=
x; right: auto; }

[dir=3D"rtl"] .katex-display.leqno > .katex > .katex-html > .tag { left: au=
to; right: 0px; }

[dir=3D"ltr"] .katex-display.fleqn > .katex { padding-left: 2em; text-align=
: left; }

[dir=3D"rtl"] .katex-display.fleqn > .katex { padding-right: 2em; text-alig=
n: right; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

.sdtrn-root { font-size: 14px; line-height: 20px; background: unset !import=
ant; }

.sdtrn-root .draggable { app-region: drag; }

.sdtrn-root .no-draggable { app-region: no-drag; }

.sdtrn-root .no-draggable-children * { app-region: no-drag; user-select: no=
ne; }

.sdtrn-root [data-radix-popper-content-wrapper], .sdtrn-root [role=3D"dialo=
g"] { app-region: no-drag; }

.sdtrn-root [role=3D"button"], .sdtrn-root button, .sdtrn-root div[role=3D"=
menu"], .sdtrn-root input[type=3D"button"], .sdtrn-root input[type=3D"reset=
"], .sdtrn-root input[type=3D"submit"] { cursor: default; }

.sdtrn-root nav a { cursor: default; user-select: none; }

.sdtrn-root { font-family: "Segoe UI Variable Text", ui-sans-serif, -apple-=
system, system-ui, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-=
serif, "Segoe UI Emoji", "Segoe UI Symbol"; }

.sdtrn-root .text-xs { font-family: "Segoe UI Variable Small", ui-sans-seri=
f, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Color Emoji", Ar=
ial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; font-size: 12px; line=
-height: 16px; }

.sdtrn-root .text-base, .sdtrn-root .text-sm { font-family: "Segoe UI Varia=
ble Text", ui-sans-serif, -apple-system, system-ui, "Segoe UI", Helvetica, =
"Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"=
; font-size: 14px; line-height: 20px; }

.sdtrn-root .\!text-base { font-family: "Segoe UI Variable Text", ui-sans-s=
erif, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Color Emoji",=
 Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol" !important; font-si=
ze: 14px !important; line-height: 20px !important; }

.sdtrn-root .text-lg { font-family: "Segoe UI Variable Text", ui-sans-serif=
, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Color Emoji", Ari=
al, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }

.sdtrn-root .text-2xl, .sdtrn-root .text-3xl, .sdtrn-root .text-xl { font-f=
amily: "Segoe UI Variable Display", ui-sans-serif, -apple-system, system-ui=
, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI =
Emoji", "Segoe UI Symbol"; }

.sdtrn-root .cursor-pointer { cursor: default; user-select: none; }

@media (hover: hover) and (pointer: fine) {
  .hover\:z-50:hover { z-index: 50; }
  .hover\:scale-110:hover { --tw-scale-x: 1.1; --tw-scale-y: 1.1; transform=
: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-ro=
tate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale=
-x)) scaleY(var(--tw-scale-y)); }
  .hover\:scale-\[103\%\]:hover { --tw-scale-x: 103%; --tw-scale-y: 103%; t=
ransform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var=
(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--=
tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .hover\:cursor-default:hover { cursor: default; }
  .hover\:cursor-pointer:hover { cursor: pointer; }
  .hover\:rounded-xl:hover { border-radius: 0.75rem; }
  .hover\:border:hover { border-width: 1px; }
  .hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgb=
(236 236 236/var(--tw-border-opacity)); }
  .hover\:border-red-500\/50:hover { border-color: rgba(239, 68, 68, 0.5); =
}
  .hover\:border-token-border-heavy:hover { border-color: var(--border-heav=
y); }
  .hover\:border-token-border-medium:hover { border-color: var(--border-med=
ium); }
  .hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(0 119 255/var(--tw-bg-opacity)); }
  .hover\:bg-\[\#BDDCF4\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(189 220 244/var(--tw-bg-opacity)); }
  .hover\:bg-\[\#f5f5f5\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(245 245 245/var(--tw-bg-opacity)); }
  .hover\:bg-\[var\(--snc-hover\)\]:hover { background-color: var(--snc-hov=
er); }
  .hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgb(0 0 0/=
var(--tw-bg-opacity)); }
  .hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }
  .hover\:bg-black\/75:hover { background-color: rgba(0, 0, 0, 0.75); }
  .hover\:bg-blue-600:hover { --tw-bg-opacity: 1; background-color: rgb(37 =
99 235/var(--tw-bg-opacity)); }
  .hover\:bg-blue-800:hover { --tw-bg-opacity: 1; background-color: rgb(30 =
64 175/var(--tw-bg-opacity)); }
  .hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgb(236=
 236 236/var(--tw-bg-opacity)); }
  .hover\:bg-gray-100\/75:hover { background-color: rgba(237, 237, 237, 0.7=
5); }
  .hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgb(227=
 227 227/var(--tw-bg-opacity)); }
  .hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(249 =
249 249/var(--tw-bg-opacity)); }
  .hover\:bg-gray-500\/10:hover { background-color: rgba(156, 156, 156, 0.1=
); }
  .hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-color: rgb(33 =
33 33/var(--tw-bg-opacity)); }
  .hover\:bg-green-200:hover { --tw-bg-opacity: 1; background-color: rgb(18=
5 238 188/var(--tw-bg-opacity)); }
  .hover\:bg-orange-400\/10:hover { background-color: rgba(255, 96, 0, 0.1)=
; }
  .hover\:bg-red-200:hover { --tw-bg-opacity: 1; background-color: rgb(254 =
202 202/var(--tw-bg-opacity)); }
  .hover\:bg-red-500:hover { --tw-bg-opacity: 1; background-color: rgb(239 =
68 68/var(--tw-bg-opacity)); }
  .hover\:bg-red-500\/15:hover { background-color: rgba(239, 68, 68, 0.15);=
 }
  .hover\:bg-token-hint-text:hover { background-color: var(--hint-text); }
  .hover\:bg-token-main-surface-secondary:hover { background-color: var(--m=
ain-surface-secondary); }
  .hover\:bg-token-main-surface-tertiary:hover { background-color: var(--ma=
in-surface-tertiary); }
  .hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(=
--sidebar-surface-secondary); }
  .hover\:bg-token-sidebar-surface-tertiary:hover { background-color: var(-=
-sidebar-surface-tertiary); }
  .hover\:bg-token-surface-error\/10:hover { background-color: rgb(var(--su=
rface-error)/.1); }
  .hover\:bg-token-text-primary:hover { background-color: var(--text-primar=
y); }
  .hover\:bg-transparent:hover { background-color: transparent; }
  .hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 25=
5 255/var(--tw-bg-opacity)); }
  .hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); =
}
  .hover\:bg-opacity-30:hover { --tw-bg-opacity: .3; }
  .hover\:\!text-token-main-surface-secondary:hover { color: var(--main-sur=
face-secondary) !important; }
  .hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgb(239 68 68/v=
ar(--tw-text-opacity)); }
  .hover\:text-red-700:hover { --tw-text-opacity: 1; color: rgb(185 28 28/v=
ar(--tw-text-opacity)); }
  .hover\:text-token-link-hover:hover { color: var(--link-hover); }
  .hover\:text-token-main-surface-tertiary:hover { color: var(--main-surfac=
e-tertiary); }
  .hover\:text-token-text-primary:hover { color: var(--text-primary); }
  .hover\:text-token-text-quaternary:hover { color: var(--text-quaternary);=
 }
  .hover\:text-token-text-secondary:hover { color: var(--text-secondary); }
  .hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }
  .hover\:text-white:hover { --tw-text-opacity: 1; color: rgb(255 255 255/v=
ar(--tw-text-opacity)); }
  .hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }
  .hover\:underline:hover { text-decoration-line: underline; }
  .hover\:no-underline:hover { text-decoration-line: none; }
  .hover\:opacity-100:hover { opacity: 1; }
  .hover\:opacity-65:hover { opacity: 0.65; }
  .hover\:opacity-70:hover { opacity: 0.7; }
  .hover\:opacity-75:hover { opacity: 0.75; }
  .hover\:opacity-80:hover { opacity: 0.8; }
  .hover\:opacity-85:hover { opacity: 0.85; }
  .hover\:opacity-90:hover { opacity: 0.9; }
  .hover\:delay-0:hover { transition-delay: 0s; }
  .sdtrn-root .hover\:cursor-pointer:hover { cursor: default; user-select: =
none; }
}

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:inset-x-4 { left: 1rem; right: 1rem; }
  .sm\:bottom-snc-1 { bottom: var(--snc-1); }
  [dir=3D"ltr"] .sm\:left-1\/2 { left: 50%; }
  [dir=3D"rtl"] .sm\:left-1\/2 { right: 50%; }
  [dir=3D"ltr"] .sm\:left-16 { left: 4rem; }
  [dir=3D"rtl"] .sm\:left-16 { right: 4rem; }
  [dir=3D"ltr"] .sm\:left-6 { left: 1.5rem; }
  [dir=3D"rtl"] .sm\:left-6, [dir=3D"ltr"] .sm\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .sm\:right-6 { left: 1.5rem; }
  .sm\:top-6 { top: 1.5rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-16 { margin-left: 4rem; margin-right: 4rem; }
  .sm\:-mt-12 { margin-top: -3rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-2\.5 { margin-bottom: 0.625rem; }
  .sm\:mb-3 { margin-bottom: 0.75rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mb-6 { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .sm\:ml-7 { margin-left: 1.75rem; }
  [dir=3D"rtl"] .sm\:ml-7 { margin-right: 1.75rem; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:mt-auto { margin-top: auto; }
  .sm\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  .sm\:hidden { display: none; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-32 { height: 8rem; }
  .sm\:h-\[172px\] { height: 172px; }
  .sm\:h-full { height: 100%; }
  .sm\:h-snc-input-height { height: var(--snc-input-height); }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-32 { width: 8rem; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[calc\(\(100\%-1rem\)\/4\)\] { width: calc(25% - 0.25rem); }
  .sm\:w-\[calc\(100cqw-62px\)\] { width: calc(100cqw - 62px); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[552px\] { max-width: 552px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grow { flex-grow: 1; }
  .sm\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-1 { gap: 0.25rem; }
  .sm\:gap-2 { gap: 0.5rem; }
  .sm\:gap-2\.5 { gap: 0.625rem; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-4 { gap: 1rem; }
  .sm\:gap-6 { gap: 1.5rem; }
  .sm\:gap-x-16 { column-gap: 4rem; }
  .sm\:gap-x-2 { column-gap: 0.5rem; }
  .sm\:gap-x-2\.5 { column-gap: 0.625rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:gap-y-2 { row-gap: 0.5rem; }
  .sm\:gap-y-4 { row-gap: 1rem; }
  .sm\:gap-y-5 { row-gap: 1.25rem; }
  .sm\:overflow-hidden { overflow: hidden; }
  .sm\:rounded-full { border-radius: 9999px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  [dir=3D"ltr"] .sm\:rounded-bl-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-bl-xl, [dir=3D"ltr"] .sm\:rounded-br-xl { bord=
er-bottom-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-br-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"ltr"] .sm\:rounded-tl-xl { border-top-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tl-xl, [dir=3D"ltr"] .sm\:rounded-tr-xl { bord=
er-top-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tr-xl { border-top-left-radius: 0.75rem; }
  .sm\:border-none { border-style: none; }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-10 { padding: 2.5rem; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .sm\:px-snc-results-padding { padding-left: var(--snc-results-padding); p=
adding-right: var(--snc-results-padding); }
  .sm\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .sm\:py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }
  .sm\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .sm\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-10 { padding-bottom: 2.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pb-8 { padding-bottom: 2rem; }
  [dir=3D"ltr"] .sm\:pl-3 { padding-left: 0.75rem; }
  [dir=3D"rtl"] .sm\:pl-3 { padding-right: 0.75rem; }
  [dir=3D"ltr"] .sm\:pl-5 { padding-left: 1.25rem; }
  [dir=3D"rtl"] .sm\:pl-5 { padding-right: 1.25rem; }
  [dir=3D"ltr"] .sm\:pl-\[3\.25rem\] { padding-left: 3.25rem; }
  [dir=3D"rtl"] .sm\:pl-\[3\.25rem\] { padding-right: 3.25rem; }
  [dir=3D"ltr"] .sm\:pr-2 { padding-right: 0.5rem; }
  [dir=3D"rtl"] .sm\:pr-2 { padding-left: 0.5rem; }
  [dir=3D"ltr"] .sm\:pr-5 { padding-right: 1.25rem; }
  [dir=3D"rtl"] .sm\:pr-5 { padding-left: 1.25rem; }
  .sm\:pt-12 { padding-top: 3rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  .sdtrn-root .sm\:text-base, .sdtrn-root .sm\:text-sm { font-family: "Sego=
e UI Variable Text", ui-sans-serif, -apple-system, system-ui, "Segoe UI", H=
elvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe =
UI Symbol"; font-size: 14px; line-height: 20px; }
  .sdtrn-root .sm\:text-2xl { font-family: "Segoe UI Variable Display", ui-=
sans-serif, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Color E=
moji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}

@media (min-width: 768px) {
  .md\:sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height:=
 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; whi=
te-space: nowrap; width: 1px; }
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:absolute { position: absolute; }
  .md\:bottom-4 { bottom: 1rem; }
  [dir=3D"ltr"] .md\:left-\[-250px\] { left: -250px; }
  [dir=3D"rtl"] .md\:left-\[-250px\] { right: -250px; }
  [dir=3D"ltr"] .md\:right-12 { right: 3rem; }
  [dir=3D"rtl"] .md\:right-12 { left: 3rem; }
  [dir=3D"ltr"] .md\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .md\:right-6 { left: 1.5rem; }
  .md\:top-6 { top: 1.5rem; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-\[5\.75rem\] { top: 5.75rem; }
  .md\:top-header-height { top: 3.5rem; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-2 { margin-bottom: 0.5rem; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:mb-6 { margin-bottom: 1.5rem; }
  .md\:mb-8 { margin-bottom: 2rem; }
  [dir=3D"ltr"] .md\:ml-0 { margin-left: 0px; }
  [dir=3D"rtl"] .md\:ml-0 { margin-right: 0px; }
  [dir=3D"ltr"] .md\:ml-8 { margin-left: 2rem; }
  [dir=3D"rtl"] .md\:ml-8 { margin-right: 2rem; }
  [dir=3D"ltr"] .md\:ml-\[-8px\] { margin-left: -8px; }
  [dir=3D"rtl"] .md\:ml-\[-8px\] { margin-right: -8px; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:mt-7 { margin-top: 1.75rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:mt-px { margin-top: 1px; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:aspect-\[140\/67\] { aspect-ratio: 140 / 67; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:h-\[30rem\] { height: 30rem; }
  .md\:h-header-height { height: 3.5rem; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[20rem\] { min-height: 20rem; }
  .md\:min-h-\[30rem\] { min-height: 30rem; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[720px\] { width: 720px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[680px\] { min-width: 680px; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-5xl { max-width: 64rem; }
  .md\:max-w-96 { max-width: 24rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:shrink { flex-shrink: 1; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:translate-y-\[30px\] { --tw-translate-y: 30px; transform: translate(=
var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(=
var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(=
var(--tw-scale-y)); }
  .md\:columns-3 { column-count: 3; }
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-1 { grid-template-rows: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_20px\] { grid-template-rows: m=
inmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-row-reverse { flex-direction: row-reverse; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-center { align-items: center; }
  .md\:justify-center { justify-content: center; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-0 { gap: 0px; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-5 { gap: 1.25rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:self-end { align-self: flex-end; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  [dir=3D"ltr"] .md\:border-l { border-left-width: 1px; }
  [dir=3D"rtl"] .md\:border-l, [dir=3D"ltr"] .md\:border-r { border-right-w=
idth: 1px; }
  [dir=3D"rtl"] .md\:border-r { border-left-width: 1px; }
  [dir=3D"ltr"] .md\:border-r-0 { border-right-width: 0px; }
  [dir=3D"rtl"] .md\:border-r-0 { border-left-width: 0px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgb(236 236 =
236/var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  [dir=3D"ltr"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  [dir=3D"rtl"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(-180deg, rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-20 { padding: 5rem; }
  .md\:p-4 { padding: 1rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-20 { padding-left: 5rem; padding-right: 5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-0 { padding-bottom: 0px; padding-top: 0px; }
  .md\:py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }
  .md\:py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }
  .md\:py-16 { padding-bottom: 4rem; padding-top: 4rem; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-10 { padding-bottom: 2.5rem; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-6 { padding-bottom: 1.5rem; }
  .md\:pb-9 { padding-bottom: 2.25rem; }
  [dir=3D"ltr"] .md\:pl-2 { padding-left: 0.5rem; }
  [dir=3D"rtl"] .md\:pl-2 { padding-right: 0.5rem; }
  [dir=3D"ltr"] .md\:pl-4 { padding-left: 1rem; }
  [dir=3D"rtl"] .md\:pl-4 { padding-right: 1rem; }
  [dir=3D"ltr"] .md\:pl-6 { padding-left: 1.5rem; }
  [dir=3D"rtl"] .md\:pl-6 { padding-right: 1.5rem; }
  [dir=3D"ltr"] .md\:pr-3 { padding-right: 0.75rem; }
  [dir=3D"rtl"] .md\:pr-3 { padding-left: 0.75rem; }
  [dir=3D"ltr"] .md\:pr-8 { padding-right: 2rem; }
  [dir=3D"rtl"] .md\:pr-8 { padding-left: 2rem; }
  .md\:ps-0 { padding-inline-start: 0px; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:pt-\[4\.5rem\] { padding-top: 4.5rem; }
  [dir=3D"ltr"] .md\:text-left { text-align: left; }
  [dir=3D"rtl"] .md\:text-left { text-align: right; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:text-xs { font-size: 0.75rem; line-height: 1rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .sdtrn-root .md\:text-xs { font-family: "Segoe UI Variable Small", ui-san=
s-serif, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Color Emoj=
i", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; font-size: 12px=
; line-height: 16px; }
  .sdtrn-root .md\:text-base { font-size: 14px; line-height: 20px; }
  .sdtrn-root .md\:text-base, .sdtrn-root .md\:text-lg { font-family: "Sego=
e UI Variable Text", ui-sans-serif, -apple-system, system-ui, "Segoe UI", H=
elvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe =
UI Symbol"; }
  .sdtrn-root .md\:text-2xl, .sdtrn-root .md\:text-3xl { font-family: "Sego=
e UI Variable Display", ui-sans-serif, -apple-system, system-ui, "Segoe UI"=
, Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Seg=
oe UI Symbol"; }
  [dir=3D"ltr"] .md\:first\:ml-0:first-child { margin-left: 0px; }
  [dir=3D"rtl"] .md\:first\:ml-0:first-child { margin-right: 0px; }
  [dir=3D"ltr"] .md\:first\:rounded-bl-xl:first-child { border-bottom-left-=
radius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-bl-xl:first-child { border-bottom-right=
-radius: 0.75rem; }
  [dir=3D"ltr"] .md\:first\:rounded-tl-xl:first-child { border-top-left-rad=
ius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-tl-xl:first-child { border-top-right-ra=
dius: 0.75rem; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .md\:last\:mr-0:last-child { margin-right: 0px; }
  [dir=3D"rtl"] .md\:last\:mr-0:last-child { margin-left: 0px; }
  [dir=3D"ltr"] .md\:last\:rounded-br-xl:last-child { border-bottom-right-r=
adius: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-br-xl:last-child { border-bottom-left-ra=
dius: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:rounded-tr-xl:last-child { border-top-right-radi=
us: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-tr-xl:last-child { border-top-left-radiu=
s: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:border-r:last-child { border-right-width: 1px; }
  [dir=3D"rtl"] .md\:last\:border-r:last-child { border-left-width: 1px; }
  @media (hover: hover) and (pointer: fine) {
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(=
249 249 249/var(--tw-bg-opacity)); }
}
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .md\:dark\:border-gray-700:is(.dark *) { --tw-border-opacity: 1; border-c=
olor: rgb(66 66 66/var(--tw-border-opacity)); }
  .md\:dark\:border-transparent:is(.dark *) { border-color: transparent; }
  .dark\:md\:bg-transparent:is(.dark *) { background-color: transparent; }
  @media (hover: hover) and (pointer: fine) {
  .dark\:md\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgb(66 66 66/var(--tw-bg-opacity)); }
}
}

@media (min-width: 1536px) {
  [dir=3D"ltr"] .\32 xl\:left-\[-400px\] { left: -400px; }
  [dir=3D"rtl"] .\32 xl\:left-\[-400px\] { right: -400px; }
  .\32 xl\:w-\[400px\] { width: 400px; }
  .\32 xl\:max-w-\[800px\] { max-width: 800px; }
  .\32 xl\:pt-12 { padding-top: 3rem; }
  .\32 xl\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }
  .sdtrn-root .\32 xl\:text-xl { font-family: "Segoe UI Variable Display", =
ui-sans-serif, -apple-system, system-ui, "Segoe UI", Helvetica, "Apple Colo=
r Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
}

.snc-root { font-size: var(--snc-text-base); }

.snc { --snc-1: 1.5rem; --snc-2: 1.75rem; --snc-3: 3rem; --snc-results-padd=
ing: 1rem; --snc-input-height: 2.875rem; --snc-text-base: 16px; --snc-hover=
: rgb(0 0 0/3%); --main-surface-secondary: #f7f7f7; --main-surface-tertiary=
: #f1f1f1; --text-secondary: var(--gray-600); --text-tertiary: var(--gray-5=
00); }

.snc .snc-accent-border { border: 0px; }

.snc { --snc-result-search-input-shadow: 0 12px 20px -8px; --snc-answer-fol=
lowup-input-shadow: 0 -12px 20px -8px; --snc-input-shadow-mult: 0; }

.snc ::-webkit-scrollbar { background: transparent; width: 16px; }

.snc ::-webkit-scrollbar-thumb { background: var(--main-surface-tertiary); =
border: 4px solid var(--main-surface-primary); border-radius: 8px; }

.snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-200); }

.dark .snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-600); }

@media (min-width: 640px) {
  .snc { --snc-input-shadow-mult: .1; --snc-input-height: 3.25rem; }
}

.dark .snc, .dark .snc .dark { --snc-hover: hsla(0,0%,100%,.03); --snc-focu=
s-border: hsla(0,0%,100%,.75); --main-surface-primary: var(--gray-950); --m=
ain-surface-secondary: var(--gray-900); --main-surface-tertiary: var(--gray=
-700); --text-secondary: var(--gray-300); --text-tertiary: var(--gray-500);=
 --border-light: hsla(0,0%,100%,.05); --border-medium: hsla(0,0%,100%,.12);=
 --border-xheavy: hsla(0,0%,100%,.2); --gray-950: #141414; }

.dark .snc .dark .snc-accent-border, .dark .snc .snc-accent-border { border=
: .5px solid var(--border-xheavy); }

.dark .snc, .dark .snc .dark { --snc-result-search-input-shadow: 0 8px 12px=
 -8px; --snc-answer-followup-input-shadow: 0 -8px 12px -8px; }

@media (min-width: 640px) {
  .dark .snc, .dark .snc .dark { --snc-input-shadow-mult: 1; }
}

.snc .user-query .prose p:first-child { margin-bottom: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) { max-width: 100%; }

.snc .prose :not(.not-prose):not(.not-prose *) a { color: var(--link); font=
-weight: 400; text-decoration-line: none; text-underline-offset: 2px; }

.snc .prose :not(.not-prose):not(.not-prose *) > h1:first-child { font-size=
: 1.125rem; }

@media (min-width: 1536px) {
  .snc .prose :not(.not-prose):not(.not-prose *) > h1:first-child { font-si=
ze: 1.25rem; }
}

.snc .prose :not(.not-prose):not(.not-prose *) h1, .snc .prose :not(.not-pr=
ose):not(.not-prose *) h2, .snc .prose :not(.not-prose):not(.not-prose *) h=
3, .snc .prose :not(.not-prose):not(.not-prose *) h4, .snc .prose :not(.not=
-prose):not(.not-prose *) h5 { font-size: 1rem; font-weight: 600; }

.snc .prose :not(.not-prose):not(.not-prose *) h3, .snc .prose :not(.not-pr=
ose):not(.not-prose *) h4 { margin-bottom: 0.25rem; }

.snc .prose :not(.not-prose):not(.not-prose *) h3:first-child a { font-size=
: 1.25rem; font-weight: 500; }

.snc .prose :not(.not-prose):not(.not-prose *) ol, .snc .prose :not(.not-pr=
ose):not(.not-prose *) p, .snc .prose :not(.not-prose):not(.not-prose *) ul=
 { margin-bottom: 1rem; }

.snc .prose :not(.not-prose):not(.not-prose *) ol:last-child, .snc .prose :=
not(.not-prose):not(.not-prose *) p:last-child, .snc .prose :not(.not-prose=
):not(.not-prose *) ul:last-child { margin-bottom: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol, .snc .prose :not(.not-pr=
ose):not(.not-prose *) ul { display: contents; list-style-position: inside;=
 list-style-type: none; margin-top: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li, .snc .prose :not(.n=
ot-prose):not(.not-prose *) ul > li { position: relative; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li:has(.title-citation)=
, .snc .prose :not(.not-prose):not(.not-prose *) ul > li:has(.title-citatio=
n) { margin-bottom: 0.75rem; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li:has(.title-citation)=
:last-child, .snc .prose :not(.not-prose):not(.not-prose *) ul > li:has(.ti=
tle-citation):last-child { margin-bottom: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li::before, .snc .prose=
 :not(.not-prose):not(.not-prose *) ul > li::before { position: absolute; }

[dir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li::befor=
e, [dir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li::be=
fore { left: 0px; }

[dir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li::befor=
e, [dir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li::be=
fore { right: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li button, .snc .prose =
:not(.not-prose):not(.not-prose *) ol > li > a, .snc .prose :not(.not-prose=
):not(.not-prose *) ul > li button, .snc .prose :not(.not-prose):not(.not-p=
rose *) ul > li > a { margin-bottom: 0px; margin-top: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li p, .snc .prose :not(=
.not-prose):not(.not-prose *) ul > li p { margin-bottom: 0.5rem; margin-top=
: 0px; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li ol, .snc .prose :not=
(.not-prose):not(.not-prose *) ol > li ul, .snc .prose :not(.not-prose):not=
(.not-prose *) ul > li ol, .snc .prose :not(.not-prose):not(.not-prose *) u=
l > li ul { display: block; margin-bottom: 0px; margin-top: 0px; padding: 0=
px; }

[dir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li ol, [d=
ir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li ul, [dir=
=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li ol, [dir=
=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li ul { margi=
n-left: 1rem; }

[dir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li ol, [d=
ir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li ul, [dir=
=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li ol, [dir=
=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li ul { margi=
n-right: 1rem; }

.snc .prose :not(.not-prose):not(.not-prose *) ol { counter-reset: list-cou=
nter 0; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li { counter-increment:=
 list-counter 1; }

[dir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li { padd=
ing-left: 2rem; }

[dir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ol > li { padd=
ing-right: 2rem; }

.snc .prose :not(.not-prose):not(.not-prose *) ol > li::before { color: var=
(--text-secondary); content: counter(list-counter) "."; }

[dir=3D"ltr"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li { padd=
ing-left: 1.5rem; }

[dir=3D"rtl"] .snc .prose :not(.not-prose):not(.not-prose *) ul > li { padd=
ing-right: 1.5rem; }

.snc .prose :not(.not-prose):not(.not-prose *) ul > li::before { content: "=
=E2=80=A2"; }

.snc .prose :not(.not-prose):not(.not-prose *) strong { font-weight: 500; }

.snc .prose.result-streaming .context-list:last-child:has(p)::after { displ=
ay: none; }

.snc .prose.result-streaming .context-list:last-child p:last-child::after {=
 content: "=E2=97=8F"; display: inline; font-family: Circle, system-ui, san=
s-serif; line-height: normal; vertical-align: baseline; }

[dir=3D"ltr"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-left: 0.25rem; }

[dir=3D"rtl"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-right: 0.25rem; }

.sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px; =
margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-spa=
ce: nowrap; width: 1px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.visible { visibility: visible; }

.\!invisible { visibility: hidden !important; }

.invisible { visibility: hidden; }

.collapse { visibility: collapse; }

.\!static { position: static !important; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.\!sticky { position: sticky !important; }

.sticky { position: sticky; }

.-inset-4 { inset: -1rem; }

.inset-0 { inset: 0px; }

.inset-x-0 { left: 0px; right: 0px; }

.inset-x-px { left: 1px; right: 1px; }

.inset-y-0 { bottom: 0px; top: 0px; }

.-bottom-5 { bottom: -1.25rem; }

.-bottom-px { bottom: -1px; }

[dir=3D"ltr"] .-left-1 { left: -0.25rem; }

[dir=3D"rtl"] .-left-1 { right: -0.25rem; }

[dir=3D"ltr"] .-left-2 { left: -0.5rem; }

[dir=3D"rtl"] .-left-2 { right: -0.5rem; }

[dir=3D"ltr"] .-left-4 { left: -1rem; }

[dir=3D"rtl"] .-left-4 { right: -1rem; }

[dir=3D"ltr"] .-left-96 { left: -24rem; }

[dir=3D"rtl"] .-left-96 { right: -24rem; }

[dir=3D"ltr"] .-right-1 { right: -0.25rem; }

[dir=3D"rtl"] .-right-1 { left: -0.25rem; }

[dir=3D"ltr"] .-right-1\.5 { right: -0.375rem; }

[dir=3D"rtl"] .-right-1\.5 { left: -0.375rem; }

[dir=3D"ltr"] .-right-4 { right: -1rem; }

[dir=3D"rtl"] .-right-4 { left: -1rem; }

.-top-0 { top: 0px; }

.-top-1 { top: -0.25rem; }

.-top-1\.5 { top: -0.375rem; }

.-top-4 { top: -1rem; }

.-top-96 { top: -24rem; }

.-top-px { top: -1px; }

.bottom-0 { bottom: 0px; }

.bottom-1 { bottom: 0.25rem; }

.bottom-12 { bottom: 3rem; }

.bottom-2 { bottom: 0.5rem; }

.bottom-24 { bottom: 6rem; }

.bottom-3 { bottom: 0.75rem; }

.bottom-4 { bottom: 1rem; }

.bottom-5 { bottom: 1.25rem; }

.bottom-6 { bottom: 1.5rem; }

.bottom-7 { bottom: 1.75rem; }

.bottom-8 { bottom: 2rem; }

.bottom-\[-4px\] { bottom: -4px; }

.bottom-\[100\%\] { bottom: 100%; }

.bottom-\[20px\] { bottom: 20px; }

.bottom-\[3\.75rem\] { bottom: 3.75rem; }

.bottom-\[64px\] { bottom: 64px; }

.bottom-\[8px\] { bottom: 8px; }

.bottom-full { bottom: 100%; }

.bottom-snc-1 { bottom: var(--snc-1); }

.end-2 { inset-inline-end: 0.5rem; }

[dir=3D"ltr"] .left-0 { left: 0px; }

[dir=3D"rtl"] .left-0 { right: 0px; }

[dir=3D"ltr"] .left-1 { left: 0.25rem; }

[dir=3D"rtl"] .left-1 { right: 0.25rem; }

[dir=3D"ltr"] .left-1\/2 { left: 50%; }

[dir=3D"rtl"] .left-1\/2 { right: 50%; }

[dir=3D"ltr"] .left-2 { left: 0.5rem; }

[dir=3D"rtl"] .left-2 { right: 0.5rem; }

[dir=3D"ltr"] .left-3 { left: 0.75rem; }

[dir=3D"rtl"] .left-3 { right: 0.75rem; }

[dir=3D"ltr"] .left-4 { left: 1rem; }

[dir=3D"rtl"] .left-4 { right: 1rem; }

[dir=3D"ltr"] .left-5 { left: 1.25rem; }

[dir=3D"rtl"] .left-5 { right: 1.25rem; }

[dir=3D"ltr"] .left-6 { left: 1.5rem; }

[dir=3D"rtl"] .left-6 { right: 1.5rem; }

[dir=3D"ltr"] .left-\[-2px\] { left: -2px; }

[dir=3D"rtl"] .left-\[-2px\] { right: -2px; }

[dir=3D"ltr"] .left-\[-4px\] { left: -4px; }

[dir=3D"rtl"] .left-\[-4px\] { right: -4px; }

[dir=3D"ltr"] .left-\[17px\] { left: 17px; }

[dir=3D"rtl"] .left-\[17px\] { right: 17px; }

[dir=3D"ltr"] .left-\[3\.25rem\] { left: 3.25rem; }

[dir=3D"rtl"] .left-\[3\.25rem\] { right: 3.25rem; }

[dir=3D"ltr"] .left-\[7px\] { left: 7px; }

[dir=3D"rtl"] .left-\[7px\] { right: 7px; }

[dir=3D"ltr"] .left-\[env\(titlebar-area-x\,0\)\] { left: env(titlebar-area=
-x,0); }

[dir=3D"rtl"] .left-\[env\(titlebar-area-x\,0\)\] { right: env(titlebar-are=
a-x,0); }

[dir=3D"ltr"] .left-full { left: 100%; }

[dir=3D"rtl"] .left-full { right: 100%; }

[dir=3D"ltr"] .right-0 { right: 0px; }

[dir=3D"rtl"] .right-0 { left: 0px; }

[dir=3D"ltr"] .right-1 { right: 0.25rem; }

[dir=3D"rtl"] .right-1 { left: 0.25rem; }

[dir=3D"ltr"] .right-1\/2 { right: 50%; }

[dir=3D"rtl"] .right-1\/2 { left: 50%; }

[dir=3D"ltr"] .right-14 { right: 3.5rem; }

[dir=3D"rtl"] .right-14 { left: 3.5rem; }

[dir=3D"ltr"] .right-2 { right: 0.5rem; }

[dir=3D"rtl"] .right-2 { left: 0.5rem; }

[dir=3D"ltr"] .right-3 { right: 0.75rem; }

[dir=3D"rtl"] .right-3 { left: 0.75rem; }

[dir=3D"ltr"] .right-4 { right: 1rem; }

[dir=3D"rtl"] .right-4 { left: 1rem; }

[dir=3D"ltr"] .right-5 { right: 1.25rem; }

[dir=3D"rtl"] .right-5 { left: 1.25rem; }

[dir=3D"ltr"] .right-8 { right: 2rem; }

[dir=3D"rtl"] .right-8 { left: 2rem; }

[dir=3D"ltr"] .right-\[-135px\] { right: -135px; }

[dir=3D"rtl"] .right-\[-135px\] { left: -135px; }

[dir=3D"ltr"] .right-\[12px\] { right: 12px; }

[dir=3D"rtl"] .right-\[12px\] { left: 12px; }

[dir=3D"ltr"] .right-\[calc\(100dvw-env\(titlebar-area-width\,100dvw\)-env\=
(titlebar-area-x\,0\)\)\] { right: calc(100dvw - env(titlebar-area-width,10=
0dvw) - env(titlebar-area-x,0)); }

[dir=3D"rtl"] .right-\[calc\(100dvw-env\(titlebar-area-width\,100dvw\)-env\=
(titlebar-area-x\,0\)\)\] { left: calc(100dvw - env(titlebar-area-width,100=
dvw) - env(titlebar-area-x,0)); }

[dir=3D"ltr"] .right-full { right: 100%; }

[dir=3D"rtl"] .right-full { left: 100%; }

[dir=3D"ltr"] .right-snc-1 { right: var(--snc-1); }

[dir=3D"rtl"] .right-snc-1 { left: var(--snc-1); }

.start-1\/2 { inset-inline-start: 50%; }

.top-0 { top: 0px; }

.top-1 { top: 0.25rem; }

.top-1\/2 { top: 50%; }

.top-11 { top: 2.75rem; }

.top-12 { top: 3rem; }

.top-14 { top: 3.5rem; }

.top-2 { top: 0.5rem; }

.top-24 { top: 6rem; }

.top-3 { top: 0.75rem; }

.top-4 { top: 1rem; }

.top-48 { top: 12rem; }

.top-5 { top: 1.25rem; }

.top-6 { top: 1.5rem; }

.top-8 { top: 2rem; }

.top-9 { top: 2.25rem; }

.top-\[--sidebar-sticky-threshold\] { top: var(--sidebar-sticky-threshold);=
 }

.top-\[-0\.094rem\] { top: -0.094rem; }

.top-\[-1px\] { top: -1px; }

.top-\[-2px\] { top: -2px; }

.top-\[-3px\] { top: -3px; }

.top-\[-4px\] { top: -4px; }

.top-\[-5px\] { top: -5px; }

.top-\[-6px\] { top: -6px; }

.top-\[0\.125rem\] { top: 0.125rem; }

.top-\[100vh\] { top: 100vh; }

.top-\[20px\] { top: 20px; }

.top-\[calc\(100\%-10px\)\] { top: calc(100% - 10px); }

.top-\[var\(--sticky-title-offset\)\] { top: var(--sticky-title-offset); }

.top-\[var\(--thread-leading-height\)\] { top: var(--thread-leading-height)=
; }

.isolate { isolation: isolate; }

.-z-10 { z-index: -10; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-30 { z-index: 30; }

.z-40 { z-index: 40; }

.z-50 { z-index: 50; }

.z-\[-1\] { z-index: -1; }

.z-\[1000\] { z-index: 1000; }

.z-\[15\] { z-index: 15; }

.z-\[1\] { z-index: 1; }

.z-\[21\] { z-index: 21; }

.z-\[60\] { z-index: 60; }

.z-\[70\] { z-index: 70; }

.order-10 { order: 10; }

.col-auto { grid-column: auto; }

.col-span-1 { grid-column: span 1 / span 1; }

.col-span-2 { grid-column: span 2 / span 2; }

.col-span-3 { grid-column: span 3 / span 3; }

.col-start-1 { grid-column-start: 1; }

.col-start-2 { grid-column-start: 2; }

.col-end-2 { grid-column-end: 2; }

.row-auto { grid-row: auto; }

.row-span-4 { grid-row: span 4 / span 4; }

.row-start-1 { grid-row-start: 1; }

.row-start-2 { grid-row-start: 2; }

.row-end-2 { grid-row-end: 2; }

[dir=3D"ltr"] .float-right { float: right; }

[dir=3D"rtl"] .float-right, [dir=3D"ltr"] .float-left { float: left; }

[dir=3D"rtl"] .float-left { float: right; }

[dir=3D"ltr"] .clear-right { clear: right; }

[dir=3D"rtl"] .clear-right { clear: left; }

.m-0 { margin: 0px; }

.m-1 { margin: 0.25rem; }

.m-1\.5 { margin: 0.375rem; }

.m-2 { margin: 0.5rem; }

.m-4 { margin: 1rem; }

.m-6 { margin: 1.5rem; }

.m-8 { margin: 2rem; }

.m-\[24px\] { margin: 24px; }

.m-\[3px\] { margin: 3px; }

.m-auto { margin: auto; }

.-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }

.-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.-my-1 { margin-bottom: -0.25rem; margin-top: -0.25rem; }

.-my-2 { margin-bottom: -0.5rem; margin-top: -0.5rem; }

.mx-0 { margin-left: 0px; margin-right: 0px; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-1\.5 { margin-left: 0.375rem; margin-right: 0.375rem; }

.mx-16 { margin-left: 4rem; margin-right: 4rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mx-4 { margin-left: 1rem; margin-right: 1rem; }

.mx-5 { margin-left: 1.25rem; margin-right: 1.25rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.mx-8 { margin-left: 2rem; margin-right: 2rem; }

.mx-\[-16px\] { margin-left: -16px; margin-right: -16px; }

.mx-\[32px\] { margin-left: 32px; margin-right: 32px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mx-snc-results-padding { margin-left: var(--snc-results-padding); margin-r=
ight: var(--snc-results-padding); }

.my-0 { margin-bottom: 0px; margin-top: 0px; }

.my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem; }

.my-1\.5 { margin-bottom: 0.375rem; margin-top: 0.375rem; }

.my-10 { margin-bottom: 2.5rem; margin-top: 2.5rem; }

.my-2 { margin-bottom: 0.5rem; margin-top: 0.5rem; }

.my-2\.5 { margin-bottom: 0.625rem; margin-top: 0.625rem; }

.my-3 { margin-bottom: 0.75rem; margin-top: 0.75rem; }

.my-4 { margin-bottom: 1rem; margin-top: 1rem; }

.my-6 { margin-bottom: 1.5rem; margin-top: 1.5rem; }

.my-8 { margin-bottom: 2rem; margin-top: 2rem; }

.my-\[32px\] { margin-bottom: 32px; margin-top: 32px; }

.my-auto { margin-bottom: auto; margin-top: auto; }

.-mb-0 { margin-bottom: 0px; }

.-mb-0\.5 { margin-bottom: -0.125rem; }

.-mb-1 { margin-bottom: -0.25rem; }

.-mb-2 { margin-bottom: -0.5rem; }

.-mb-4 { margin-bottom: -1rem; }

[dir=3D"ltr"] .-ml-1 { margin-left: -0.25rem; }

[dir=3D"rtl"] .-ml-1 { margin-right: -0.25rem; }

[dir=3D"ltr"] .-ml-1\.5 { margin-left: -0.375rem; }

[dir=3D"rtl"] .-ml-1\.5 { margin-right: -0.375rem; }

[dir=3D"ltr"] .-ml-2 { margin-left: -0.5rem; }

[dir=3D"rtl"] .-ml-2 { margin-right: -0.5rem; }

[dir=3D"ltr"] .-ml-2\.5 { margin-left: -0.625rem; }

[dir=3D"rtl"] .-ml-2\.5 { margin-right: -0.625rem; }

[dir=3D"ltr"] .-ml-20 { margin-left: -5rem; }

[dir=3D"rtl"] .-ml-20 { margin-right: -5rem; }

[dir=3D"ltr"] .-ml-4 { margin-left: -1rem; }

[dir=3D"rtl"] .-ml-4 { margin-right: -1rem; }

[dir=3D"ltr"] .-mr-1 { margin-right: -0.25rem; }

[dir=3D"rtl"] .-mr-1 { margin-left: -0.25rem; }

[dir=3D"ltr"] .-mr-1\.5 { margin-right: -0.375rem; }

[dir=3D"rtl"] .-mr-1\.5 { margin-left: -0.375rem; }

[dir=3D"ltr"] .-mr-2 { margin-right: -0.5rem; }

[dir=3D"rtl"] .-mr-2 { margin-left: -0.5rem; }

[dir=3D"ltr"] .-mr-3 { margin-right: -0.75rem; }

[dir=3D"rtl"] .-mr-3 { margin-left: -0.75rem; }

[dir=3D"ltr"] .-mr-3\.5 { margin-right: -0.875rem; }

[dir=3D"rtl"] .-mr-3\.5 { margin-left: -0.875rem; }

.-ms-3 { margin-inline-start: -0.75rem; }

.-ms-3\.5 { margin-inline-start: -0.875rem; }

.-mt-0 { margin-top: 0px; }

.-mt-0\.5 { margin-top: -0.125rem; }

.-mt-1 { margin-top: -0.25rem; }

.-mt-2 { margin-top: -0.5rem; }

.-mt-3 { margin-top: -0.75rem; }

.-mt-4 { margin-top: -1rem; }

.-mt-5 { margin-top: -1.25rem; }

.mb-0 { margin-bottom: 0px; }

.mb-0\.5 { margin-bottom: 0.125rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-1\.5 { margin-bottom: 0.375rem; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-16 { margin-bottom: 4rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-32 { margin-bottom: 8rem; }

.mb-36 { margin-bottom: 9rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mb-7 { margin-bottom: 1.75rem; }

.mb-8 { margin-bottom: 2rem; }

.mb-9 { margin-bottom: 2.25rem; }

.mb-\[-1px\] { margin-bottom: -1px; }

.mb-\[-2px\] { margin-bottom: -2px; }

.mb-\[-5px\] { margin-bottom: -5px; }

.mb-\[-6px\] { margin-bottom: -6px; }

.mb-\[0\.3125rem\] { margin-bottom: 0.3125rem; }

.mb-\[0\.5px\] { margin-bottom: 0.5px; }

.mb-\[1px\] { margin-bottom: 1px; }

.mb-bar-bottom { margin-bottom: var(--bar-gap,.25rem); }

.mb-snc-1 { margin-bottom: var(--snc-1); }

.me-1 { margin-inline-end: 0.25rem; }

[dir=3D"ltr"] .ml-0 { margin-left: 0px; }

[dir=3D"rtl"] .ml-0 { margin-right: 0px; }

[dir=3D"ltr"] .ml-0\.5 { margin-left: 0.125rem; }

[dir=3D"rtl"] .ml-0\.5 { margin-right: 0.125rem; }

[dir=3D"ltr"] .ml-1 { margin-left: 0.25rem; }

[dir=3D"rtl"] .ml-1 { margin-right: 0.25rem; }

[dir=3D"ltr"] .ml-1\.5 { margin-left: 0.375rem; }

[dir=3D"rtl"] .ml-1\.5 { margin-right: 0.375rem; }

[dir=3D"ltr"] .ml-10 { margin-left: 2.5rem; }

[dir=3D"rtl"] .ml-10 { margin-right: 2.5rem; }

[dir=3D"ltr"] .ml-2 { margin-left: 0.5rem; }

[dir=3D"rtl"] .ml-2 { margin-right: 0.5rem; }

[dir=3D"ltr"] .ml-2\.5 { margin-left: 0.625rem; }

[dir=3D"rtl"] .ml-2\.5 { margin-right: 0.625rem; }

[dir=3D"ltr"] .ml-3 { margin-left: 0.75rem; }

[dir=3D"rtl"] .ml-3 { margin-right: 0.75rem; }

[dir=3D"ltr"] .ml-4 { margin-left: 1rem; }

[dir=3D"rtl"] .ml-4 { margin-right: 1rem; }

[dir=3D"ltr"] .ml-5 { margin-left: 1.25rem; }

[dir=3D"rtl"] .ml-5 { margin-right: 1.25rem; }

[dir=3D"ltr"] .ml-6 { margin-left: 1.5rem; }

[dir=3D"rtl"] .ml-6 { margin-right: 1.5rem; }

[dir=3D"ltr"] .ml-7 { margin-left: 1.75rem; }

[dir=3D"rtl"] .ml-7 { margin-right: 1.75rem; }

[dir=3D"ltr"] .ml-8 { margin-left: 2rem; }

[dir=3D"rtl"] .ml-8 { margin-right: 2rem; }

[dir=3D"ltr"] .ml-\[-4px\] { margin-left: -4px; }

[dir=3D"rtl"] .ml-\[-4px\] { margin-right: -4px; }

[dir=3D"ltr"] .ml-\[21px\] { margin-left: 21px; }

[dir=3D"rtl"] .ml-\[21px\] { margin-right: 21px; }

[dir=3D"ltr"] .ml-\[2px\] { margin-left: 2px; }

[dir=3D"rtl"] .ml-\[2px\] { margin-right: 2px; }

[dir=3D"ltr"] .ml-\[3px\] { margin-left: 3px; }

[dir=3D"rtl"] .ml-\[3px\] { margin-right: 3px; }

[dir=3D"ltr"] .ml-auto { margin-left: auto; }

[dir=3D"rtl"] .ml-auto { margin-right: auto; }

[dir=3D"ltr"] .mr-0 { margin-right: 0px; }

[dir=3D"rtl"] .mr-0 { margin-left: 0px; }

[dir=3D"ltr"] .mr-0\.5 { margin-right: 0.125rem; }

[dir=3D"rtl"] .mr-0\.5 { margin-left: 0.125rem; }

[dir=3D"ltr"] .mr-1 { margin-right: 0.25rem; }

[dir=3D"rtl"] .mr-1 { margin-left: 0.25rem; }

[dir=3D"ltr"] .mr-1\.5 { margin-right: 0.375rem; }

[dir=3D"rtl"] .mr-1\.5 { margin-left: 0.375rem; }

[dir=3D"ltr"] .mr-2 { margin-right: 0.5rem; }

[dir=3D"rtl"] .mr-2 { margin-left: 0.5rem; }

[dir=3D"ltr"] .mr-3 { margin-right: 0.75rem; }

[dir=3D"rtl"] .mr-3 { margin-left: 0.75rem; }

[dir=3D"ltr"] .mr-4 { margin-right: 1rem; }

[dir=3D"rtl"] .mr-4 { margin-left: 1rem; }

[dir=3D"ltr"] .mr-5 { margin-right: 1.25rem; }

[dir=3D"rtl"] .mr-5 { margin-left: 1.25rem; }

[dir=3D"ltr"] .mr-8 { margin-right: 2rem; }

[dir=3D"rtl"] .mr-8 { margin-left: 2rem; }

[dir=3D"ltr"] .mr-9 { margin-right: 2.25rem; }

[dir=3D"rtl"] .mr-9 { margin-left: 2.25rem; }

[dir=3D"ltr"] .mr-\[0\.1875rem\] { margin-right: 0.1875rem; }

[dir=3D"rtl"] .mr-\[0\.1875rem\] { margin-left: 0.1875rem; }

[dir=3D"ltr"] .mr-\[0\.5\] { }

[dir=3D"rtl"] .mr-\[0\.5\] { }

[dir=3D"ltr"] .mr-px { margin-right: 1px; }

[dir=3D"rtl"] .mr-px { margin-left: 1px; }

.ms-2 { margin-inline-start: 0.5rem; }

.mt-0 { margin-top: 0px; }

.mt-0\.5 { margin-top: 0.125rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-1\.5 { margin-top: 0.375rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-16 { margin-top: 4rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-2\.5 { margin-top: 0.625rem; }

.mt-20 { margin-top: 5rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-36 { margin-top: 9rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-7 { margin-top: 1.75rem; }

.mt-8 { margin-top: 2rem; }

.mt-\[-3px\] { margin-top: -3px; }

.mt-\[-4px\] { margin-top: -4px; }

.mt-\[0px\] { margin-top: 0px; }

.mt-\[1px\] { margin-top: 1px; }

.mt-\[2px\] { margin-top: 2px; }

.mt-\[calc\(var\(--threadFlyOut-leading-height\,57px\)\*-1\)\] { margin-top=
: calc(var(--threadFlyOut-leading-height,57px)*-1); }

.mt-\[var\(--screen-optical-compact-offset-amount\)\] { margin-top: var(--s=
creen-optical-compact-offset-amount); }

.mt-\[var\(--screen-optical-offset-amount\)\] { margin-top: var(--screen-op=
tical-offset-amount); }

.mt-snc-1 { margin-top: var(--snc-1); }

.box-border { box-sizing: border-box; }

.line-clamp-1 { -webkit-line-clamp: 1; }

.line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-2 { -webkit-line-clamp: 2; }

.line-clamp-3 { -webkit-line-clamp: 3; }

.line-clamp-3, .line-clamp-4 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-4 { -webkit-line-clamp: 4; }

.line-clamp-6 { -webkit-box-orient: vertical; -webkit-line-clamp: 6; displa=
y: -webkit-box; overflow: hidden; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.table-cell { display: table-cell; }

.table-row { display: table-row; }

.flow-root { display: flow-root; }

.grid { display: grid; }

.contents { display: contents; }

.list-item { display: list-item; }

.hidden { display: none; }

.aspect-\[4\/7\] { aspect-ratio: 4 / 7; }

.aspect-\[7\/4\] { aspect-ratio: 7 / 4; }

.aspect-square { aspect-ratio: 1 / 1; }

.aspect-video { aspect-ratio: 16 / 9; }

.\!h-20 { height: 5rem !important; }

.\!h-fit { height: fit-content !important; }

.h-0 { height: 0px; }

.h-1 { height: 0.25rem; }

.h-1\.5 { height: 0.375rem; }

.h-1\/4 { height: 25%; }

.h-10 { height: 2.5rem; }

.h-11 { height: 2.75rem; }

.h-12 { height: 3rem; }

.h-14 { height: 3.5rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-2\/3 { height: 66.6667%; }

.h-20 { height: 5rem; }

.h-24 { height: 6rem; }

.h-3 { height: 0.75rem; }

.h-3\.5 { height: 0.875rem; }

.h-32 { height: 8rem; }

.h-4 { height: 1rem; }

.h-4\/5 { height: 80%; }

.h-40 { height: 10rem; }

.h-44 { height: 11rem; }

.h-48 { height: 12rem; }

.h-5 { height: 1.25rem; }

.h-52 { height: 13rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-96 { height: 24rem; }

.h-\[0\.75rem\] { height: 0.75rem; }

.h-\[100dvh\] { height: 100dvh; }

.h-\[100vh\] { height: 100vh; }

.h-\[100vw\] { height: 100vw; }

.h-\[104px\] { height: 104px; }

.h-\[116px\] { height: 116px; }

.h-\[11px\] { height: 11px; }

.h-\[14px\] { height: 14px; }

.h-\[15px\] { height: 15px; }

.h-\[16px\] { height: 16px; }

.h-\[17px\] { height: 17px; }

.h-\[18px\] { height: 18px; }

.h-\[19px\] { height: 19px; }

.h-\[1px\] { height: 1px; }

.h-\[20px\] { height: 20px; }

.h-\[22px\] { height: 22px; }

.h-\[234px\] { height: 234px; }

.h-\[23px\] { height: 23px; }

.h-\[24rem\] { height: 24rem; }

.h-\[250px\] { height: 250px; }

.h-\[26px\] { height: 26px; }

.h-\[2px\] { height: 2px; }

.h-\[30px\] { height: 30px; }

.h-\[32px\] { height: 32px; }

.h-\[340px\] { height: 340px; }

.h-\[34px\] { height: 34px; }

.h-\[3px\] { height: 3px; }

.h-\[40px\] { height: 40px; }

.h-\[42px\] { height: 42px; }

.h-\[44px\] { height: 44px; }

.h-\[4px\] { height: 4px; }

.h-\[50dvh\] { height: 50dvh; }

.h-\[50px\] { height: 50px; }

.h-\[50vh\] { height: 50vh; }

.h-\[600px\] { height: 600px; }

.h-\[60px\] { height: 60px; }

.h-\[60vh\] { height: 60vh; }

.h-\[62px\] { height: 62px; }

.h-\[70px\] { height: 70px; }

.h-\[70vh\] { height: 70vh; }

.h-\[76px\] { height: 76px; }

.h-\[9rem\] { height: 9rem; }

.h-\[calc\(100\%\+var\(--snc-1\)\)\] { height: calc(100% + var(--snc-1)); }

.h-\[calc\(100\%-var\(--screen-thread-header-min-height\,60px\)\)\] { heigh=
t: calc(100% - var(--screen-thread-header-min-height,60px)); }

.h-\[calc\(100vh\+8rem\)\] { height: calc(8rem + 100vh); }

.h-\[calc\(100vh-25rem\)\] { height: calc(-25rem + 100vh); }

.h-\[calc\(var\(--screen-thread-header-min-height\,60px\)\+1px\)\] { height=
: calc(var(--screen-thread-header-min-height,60px) + 1px); }

.h-\[max\(3rem\,18vh\)\] { height: max(3rem, 18vh); }

.h-\[var\(--screen-thread-header-min-height\,60px\)\] { height: var(--scree=
n-thread-header-min-height,60px); }

.h-auto { height: auto; }

.h-dvh { height: 100dvh; }

.h-fit { height: fit-content; }

.h-full { height: 100%; }

.h-header-height { height: 3.5rem; }

.h-max { height: max-content; }

.h-px { height: 1px; }

.h-screen { height: 100vh; }

.h-snc-3 { height: var(--snc-3); }

.h-snc-input-height { height: var(--snc-input-height); }

.\!max-h-\[100vh\] { max-height: 100vh !important; }

.max-h-28 { max-height: 7rem; }

.max-h-32 { max-height: 8rem; }

.max-h-36 { max-height: 9rem; }

.max-h-40 { max-height: 10rem; }

.max-h-48 { max-height: 12rem; }

.max-h-52 { max-height: 13rem; }

.max-h-64 { max-height: 16rem; }

.max-h-72 { max-height: 18rem; }

.max-h-96 { max-height: 24rem; }

.max-h-\[100cqh\] { max-height: 100cqh; }

.max-h-\[100vh\] { max-height: 100vh; }

.max-h-\[200px\] { max-height: 200px; }

.max-h-\[25dvh\] { max-height: 25dvh; }

.max-h-\[28rem\] { max-height: 28rem; }

.max-h-\[440px\] { max-height: 440px; }

.max-h-\[50dvh\] { max-height: 50dvh; }

.max-h-\[600px\] { max-height: 600px; }

.max-h-\[60vh\] { max-height: 60vh; }

.max-h-\[64px\] { max-height: 64px; }

.max-h-\[700px\] { max-height: 700px; }

.max-h-\[75vh\] { max-height: 75vh; }

.max-h-\[80vh\] { max-height: 80vh; }

.max-h-\[85vh\] { max-height: 85vh; }

.max-h-\[95\%\] { max-height: 95%; }

.max-h-\[calc\(100vh-150px\)\] { max-height: calc(-150px + 100vh); }

.max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }

.max-h-\[calc\(100vh-46px\)\] { max-height: calc(-46px + 100vh); }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-10 { min-height: 2.5rem; }

.min-h-12 { min-height: 3rem; }

.min-h-16 { min-height: 4rem; }

.min-h-20 { min-height: 5rem; }

.min-h-36 { min-height: 9rem; }

.min-h-4 { min-height: 1rem; }

.min-h-5 { min-height: 1.25rem; }

.min-h-52 { min-height: 13rem; }

.min-h-60 { min-height: 15rem; }

.min-h-8 { min-height: 2rem; }

.min-h-\[100dvh\] { min-height: 100dvh; }

.min-h-\[104px\] { min-height: 104px; }

.min-h-\[20px\] { min-height: 20px; }

.min-h-\[36px\] { min-height: 36px; }

.min-h-\[40px\] { min-height: 40px; }

.min-h-\[440px\] { min-height: 440px; }

.min-h-\[44px\] { min-height: 44px; }

.min-h-\[50dvh\] { min-height: 50dvh; }

.min-h-\[50vh\] { min-height: 50vh; }

.min-h-\[56px\] { min-height: 56px; }

.min-h-\[60px\] { min-height: 60px; }

.min-h-\[62px\] { min-height: 62px; }

.min-h-\[64px\] { min-height: 64px; }

.min-h-\[75vh\] { min-height: 75vh; }

.min-h-\[80vh\] { min-height: 80vh; }

.min-h-\[96px\] { min-height: 96px; }

.min-h-\[calc\(100cqh-var\(--thread-leading-height\)-var\(--thread-trailing=
-height\)-var\(--previous-turn-min-height\)\)\] { min-height: calc(100cqh -=
 var(--thread-leading-height) - var(--thread-trailing-height) - var(--previ=
ous-turn-min-height)); }

.min-h-\[var\(--screen-thread-header-min-height\,60px\)\] { min-height: var=
(--screen-thread-header-min-height,60px); }

.min-h-full { min-height: 100%; }

.min-h-screen { min-height: 100vh; }

.\!w-20 { width: 5rem !important; }

.w-0 { width: 0px; }

.w-1 { width: 0.25rem; }

.w-1\.5 { width: 0.375rem; }

.w-1\/2 { width: 50%; }

.w-1\/3 { width: 33.3333%; }

.w-1\/4 { width: 25%; }

.w-10 { width: 2.5rem; }

.w-11 { width: 2.75rem; }

.w-12 { width: 3rem; }

.w-14 { width: 3.5rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\/3 { width: 66.6667%; }

.w-2\/5 { width: 40%; }

.w-20 { width: 5rem; }

.w-24 { width: 6rem; }

.w-28 { width: 7rem; }

.w-3 { width: 0.75rem; }

.w-3\.5 { width: 0.875rem; }

.w-32 { width: 8rem; }

.w-36 { width: 9rem; }

.w-4 { width: 1rem; }

.w-4\/5 { width: 80%; }

.w-40 { width: 10rem; }

.w-44 { width: 11rem; }

.w-48 { width: 12rem; }

.w-5 { width: 1.25rem; }

.w-52 { width: 13rem; }

.w-6 { width: 1.5rem; }

.w-60 { width: 15rem; }

.w-64 { width: 16rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-80 { width: 20rem; }

.w-9 { width: 2.25rem; }

.w-96 { width: 24rem; }

.w-\[0\.75rem\] { width: 0.75rem; }

.w-\[11px\] { width: 11px; }

.w-\[14px\] { width: 14px; }

.w-\[15px\] { width: 15px; }

.w-\[160px\] { width: 160px; }

.w-\[16px\] { width: 16px; }

.w-\[18px\] { width: 18px; }

.w-\[1px\] { width: 1px; }

.w-\[20px\] { width: 20px; }

.w-\[22px\] { width: 22px; }

.w-\[232px\] { width: 232px; }

.w-\[234px\] { width: 234px; }

.w-\[23px\] { width: 23px; }

.w-\[250px\] { width: 250px; }

.w-\[256px\] { width: 256px; }

.w-\[25vw\] { width: 25vw; }

.w-\[260px\] { width: 260px; }

.w-\[26px\] { width: 26px; }

.w-\[294px\] { width: 294px; }

.w-\[298px\] { width: 298px; }

.w-\[304px\] { width: 304px; }

.w-\[30cqw\] { width: 30cqw; }

.w-\[30px\] { width: 30px; }

.w-\[328px\] { width: 328px; }

.w-\[32px\] { width: 32px; }

.w-\[34px\] { width: 34px; }

.w-\[3px\] { width: 3px; }

.w-\[400px\] { width: 400px; }

.w-\[40px\] { width: 40px; }

.w-\[42px\] { width: 42px; }

.w-\[44px\] { width: 44px; }

.w-\[48\%\] { width: 48%; }

.w-\[4px\] { width: 4px; }

.w-\[50\%\] { width: 50%; }

.w-\[50px\] { width: 50px; }

.w-\[54px\] { width: 54px; }

.w-\[55\%\] { width: 55%; }

.w-\[60px\] { width: 60px; }

.w-\[64\%\] { width: 64%; }

.w-\[640px\] { width: 640px; }

.w-\[66\%\] { width: 66%; }

.w-\[7\.5rem\] { width: 7.5rem; }

.w-\[70\%\] { width: 70%; }

.w-\[700px\] { width: 700px; }

.w-\[75\%\] { width: 75%; }

.w-\[80\%\] { width: 80%; }

.w-\[800px\] { width: 800px; }

.w-\[88px\] { width: 88px; }

.w-\[90px\] { width: 90px; }

.w-\[90vw\] { width: 90vw; }

.w-\[calc\(\(100\%-768px\)\/2\)\] { width: calc(50% - 384px); }

.w-\[fit-content\] { width: fit-content; }

.w-\[var\(--screen-sidebar-popover-min-width\)\] { width: var(--screen-side=
bar-popover-min-width); }

.w-auto { width: auto; }

.w-fit { width: fit-content; }

.w-full { width: 100%; }

.w-max { width: max-content; }

.w-px { width: 1px; }

.w-screen { width: 100vw; }

.min-w-0 { min-width: 0px; }

.min-w-11 { min-width: 2.75rem; }

.min-w-20 { min-width: 5rem; }

.min-w-24 { min-width: 6rem; }

.min-w-32 { min-width: 8rem; }

.min-w-36 { min-width: 9rem; }

.min-w-40 { min-width: 10rem; }

.min-w-48 { min-width: 12rem; }

.min-w-52 { min-width: 13rem; }

.min-w-60 { min-width: 15rem; }

.min-w-72 { min-width: 18rem; }

.min-w-8 { min-width: 2rem; }

.min-w-80 { min-width: 20rem; }

.min-w-\[100px\] { min-width: 100px; }

.min-w-\[125px\] { min-width: 125px; }

.min-w-\[180px\] { min-width: 180px; }

.min-w-\[200px\] { min-width: 200px; }

.min-w-\[220px\] { min-width: 220px; }

.min-w-\[224px\] { min-width: 224px; }

.min-w-\[256px\] { min-width: 256px; }

.min-w-\[25vw\] { min-width: 25vw; }

.min-w-\[280px\] { min-width: 280px; }

.min-w-\[32px\] { min-width: 32px; }

.min-w-\[340px\] { min-width: 340px; }

.min-w-\[360px\] { min-width: 360px; }

.min-w-\[50cqw\] { min-width: 50cqw; }

.min-w-\[50px\] { min-width: 50px; }

.min-w-\[62px\] { min-width: 62px; }

.min-w-\[680px\] { min-width: 680px; }

.min-w-\[7\.5rem\] { min-width: 7.5rem; }

.min-w-\[min\(450px\,80vw\)\] { min-width: min(450px, 80vw); }

.min-w-fit { min-width: fit-content; }

.min-w-full { min-width: 100%; }

.\!max-w-2xs { max-width: 240px !important; }

.\!max-w-\[80vw\] { max-width: 80vw !important; }

.max-w-28 { max-width: 7rem; }

.max-w-2xl { max-width: 42rem; }

.max-w-2xs { max-width: 240px; }

.max-w-3xl { max-width: 48rem; }

.max-w-48 { max-width: 12rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-52 { max-width: 13rem; }

.max-w-5xl { max-width: 64rem; }

.max-w-60 { max-width: 15rem; }

.max-w-64 { max-width: 16rem; }

.max-w-6xl { max-width: 72rem; }

.max-w-72 { max-width: 18rem; }

.max-w-7xl { max-width: 80rem; }

.max-w-80 { max-width: 20rem; }

.max-w-96 { max-width: 24rem; }

.max-w-\[100\%\] { max-width: 100%; }

.max-w-\[100px\] { max-width: 100px; }

.max-w-\[100vw\] { max-width: 100vw; }

.max-w-\[1200px\] { max-width: 1200px; }

.max-w-\[1300px\] { max-width: 1300px; }

.max-w-\[192px\] { max-width: 192px; }

.max-w-\[200px\] { max-width: 200px; }

.max-w-\[208px\] { max-width: 208px; }

.max-w-\[22\%\] { max-width: 22%; }

.max-w-\[220px\] { max-width: 220px; }

.max-w-\[256px\] { max-width: 256px; }

.max-w-\[280px\] { max-width: 280px; }

.max-w-\[30rem\] { max-width: 30rem; }

.max-w-\[320px\] { max-width: 320px; }

.max-w-\[328px\] { max-width: 328px; }

.max-w-\[36rem\] { max-width: 36rem; }

.max-w-\[372px\] { max-width: 372px; }

.max-w-\[373px\] { max-width: 373px; }

.max-w-\[400px\] { max-width: 400px; }

.max-w-\[40rem\] { max-width: 40rem; }

.max-w-\[440px\] { max-width: 440px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-\[48rem\] { max-width: 48rem; }

.max-w-\[500px\] { max-width: 500px; }

.max-w-\[550px\] { max-width: 550px; }

.max-w-\[552px\] { max-width: 552px; }

.max-w-\[555px\] { max-width: 555px; }

.max-w-\[560px\] { max-width: 560px; }

.max-w-\[60\%\] { max-width: 60%; }

.max-w-\[680px\] { max-width: 680px; }

.max-w-\[70\%\] { max-width: 70%; }

.max-w-\[700px\] { max-width: 700px; }

.max-w-\[70rem\] { max-width: 70rem; }

.max-w-\[75\%\] { max-width: 75%; }

.max-w-\[80\%\] { max-width: 80%; }

.max-w-\[800px\] { max-width: 800px; }

.max-w-\[90\%\] { max-width: 90%; }

.max-w-\[90vw\] { max-width: 90vw; }

.max-w-\[92px\] { max-width: 92px; }

.max-w-\[var\(--available-details-width\)\] { max-width: var(--available-de=
tails-width); }

.max-w-\[var\(--screen-content-ideal-size\)\] { max-width: var(--screen-con=
tent-ideal-size); }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-none { max-width: none; }

.max-w-screen-md { max-width: 768px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.max-w-xs { max-width: 20rem; }

.flex-1 { flex: 1 1 0%; }

.flex-auto { flex: 1 1 auto; }

.flex-initial { flex: 0 1 auto; }

.flex-none { flex: 0 0 auto; }

.flex-shrink { flex-shrink: 1; }

.flex-shrink-0 { flex-shrink: 0; }

.shrink { flex-shrink: 1; }

.shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

.flex-grow-0 { flex-grow: 0; }

.grow { flex-grow: 1; }

.grow-0 { flex-grow: 0; }

.basis-0 { flex-basis: 0px; }

.basis-\[32px\] { flex-basis: 32px; }

.table-auto { table-layout: auto; }

.table-fixed { table-layout: fixed; }

.border-separate { border-collapse: separate; }

.border-spacing-0 { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px;=
 border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); }

.origin-\[14px_50\%\] { transform-origin: 14px 50%; }

.origin-\[50\%_50\%\] { transform-origin: 50% 50%; }

.origin-bottom { transform-origin: center bottom; }

[dir=3D"ltr"] .origin-left { transform-origin: left center; }

[dir=3D"rtl"] .origin-left { transform-origin: right center; }

[dir=3D"ltr"] .origin-top-right { transform-origin: right top; }

[dir=3D"rtl"] .origin-top-right { transform-origin: left top; }

.-translate-x-1\/2 { --tw-translate-x: -50%; }

.-translate-x-1\/2, .-translate-x-2 { transform: translate(var(--tw-transla=
te-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)=
) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y=
)); }

.-translate-x-2 { --tw-translate-x: -.5rem; }

.-translate-x-52 { --tw-translate-x: -13rem; }

.-translate-x-52, .-translate-x-96 { transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.-translate-x-96 { --tw-translate-x: -24rem; }

.-translate-x-full { --tw-translate-x: -100%; }

.-translate-x-full, .-translate-y-1 { transform: translate(var(--tw-transla=
te-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)=
) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y=
)); }

.-translate-y-1 { --tw-translate-y: -.25rem; }

.-translate-y-1\/2 { --tw-translate-y: -50%; }

.-translate-y-1\/2, .-translate-y-2 { transform: translate(var(--tw-transla=
te-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)=
) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y=
)); }

.-translate-y-2 { --tw-translate-y: -.5rem; }

.-translate-y-full { --tw-translate-y: -100%; }

.-translate-y-full, .translate-x-0 { transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-0 { --tw-translate-x: 0px; }

.translate-x-1\/2 { --tw-translate-x: 50%; }

.translate-x-1\/2, .translate-x-52 { transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-52 { --tw-translate-x: 13rem; }

.translate-x-96 { --tw-translate-x: 24rem; }

.translate-x-96, .translate-x-\[-0\.4rem\] { transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.translate-x-\[-0\.4rem\] { --tw-translate-x: -.4rem; }

.translate-x-\[-100\%\] { --tw-translate-x: -100%; }

.translate-x-\[-100\%\], .translate-x-full { transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.translate-x-full { --tw-translate-x: 100%; }

.translate-y-0 { --tw-translate-y: 0px; }

.translate-y-0, .translate-y-0\.5 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) =
skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))=
; }

.translate-y-0\.5 { --tw-translate-y: .125rem; }

.translate-y-1 { --tw-translate-y: .25rem; }

.translate-y-1, .translate-y-1\/2 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) =
skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))=
; }

.translate-y-1\/2 { --tw-translate-y: 50%; }

.translate-y-\[-100\%\] { --tw-translate-y: -100%; }

.translate-y-\[-100\%\], .translate-y-\[-10px\] { transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.translate-y-\[-10px\] { --tw-translate-y: -10px; }

.translate-y-\[-50px\] { --tw-translate-y: -50px; }

.translate-y-\[-50px\], .translate-y-\[10px\] { transform: translate(var(--=
tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--=
tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--=
tw-scale-y)); }

.translate-y-\[10px\] { --tw-translate-y: 10px; }

.translate-y-\[calc\(100\%-71px\)\] { --tw-translate-y: calc(100% - 71px); =
}

.-rotate-180, .translate-y-\[calc\(100\%-71px\)\] { transform: translate(va=
r(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(va=
r(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(va=
r(--tw-scale-y)); }

.-rotate-180 { --tw-rotate: -180deg; }

.-rotate-90 { --tw-rotate: -90deg; }

.-rotate-90, .rotate-0 { transform: translate(var(--tw-translate-x),var(--t=
w-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(-=
-tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-0 { --tw-rotate: 0deg; }

.rotate-180 { --tw-rotate: 180deg; }

.rotate-180, .rotate-45 { transform: translate(var(--tw-translate-x),var(--=
tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(=
--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-45 { --tw-rotate: 45deg; }

.rotate-90 { --tw-rotate: 90deg; }

.-scale-x-100, .rotate-90 { transform: translate(var(--tw-translate-x),var(=
--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(va=
r(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-scale-x-100 { --tw-scale-x: -1; }

.scale-x-75 { --tw-scale-x: .75; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.\!transform { transform: translate(var(--tw-translate-x),var(--tw-translat=
e-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y=
)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important; }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@keyframes blinkOnce {=20
  0% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}

.animate-blinkOnce { animation: 0.5s ease 0s 1 normal none running blinkOnc=
e; }

@keyframes bounce {=20
  0%, 100% { animation-timing-function: cubic-bezier(0.8, 0, 1, 1); transfo=
rm: translateY(-25%); }
  50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); transform: n=
one; }
}

.animate-bounce { animation: 1s ease 0s infinite normal none running bounce=
; }

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

.animate-pulse { animation: 2s cubic-bezier(0.4, 0, 0.6, 1) 0s infinite nor=
mal none running pulse; }

@keyframes pulsing {=20
  0% { opacity: 1; scale: 1; }
  50% { opacity: 0.9; scale: 0.875; }
  100% { opacity: 1; scale: 1; }
}

.animate-pulsing { animation: 2s ease-in-out 0s infinite normal forwards ru=
nning pulsing; }

.animate-slideLeftAndFade { animation: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0=
s 1 normal none running slideLeftAndFade; }

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; =
}

.cursor-auto { cursor: auto; }

.cursor-default { cursor: default; }

.cursor-e-resize { cursor: e-resize; }

.cursor-ew-resize { cursor: ew-resize; }

.cursor-grab { cursor: grab; }

.cursor-grabbing { cursor: grabbing; }

.cursor-none { cursor: none; }

.cursor-not-allowed { cursor: not-allowed; }

.cursor-ns-resize { cursor: ns-resize; }

.cursor-pointer { cursor: pointer; }

.cursor-progress { cursor: progress; }

.cursor-text { cursor: text; }

.cursor-w-resize { cursor: w-resize; }

.cursor-wait { cursor: wait; }

.touch-none { touch-action: none; }

.select-none { user-select: none; }

.resize-none { resize: none; }

.resize { resize: both; }

.snap-x { scroll-snap-type: x var(--tw-scroll-snap-strictness); }

.snap-mandatory { --tw-scroll-snap-strictness: mandatory; }

.snap-center { scroll-snap-align: center; }

.scroll-m-5 { scroll-margin: 1.25rem; }

.scroll-mx-5 { scroll-margin-left: 1.25rem; scroll-margin-right: 1.25rem; }

.scroll-mb-\[var\(--thread-trailing-height\,150px\)\] { scroll-margin-botto=
m: var(--thread-trailing-height,150px); }

.scroll-mt-28 { scroll-margin-top: 7rem; }

.list-inside { list-style-position: inside; }

.list-\[auto\] { list-style-type: auto; }

.list-decimal { list-style-type: decimal; }

.list-disc { list-style-type: disc; }

.list-none { list-style-type: none; }

.appearance-none { appearance: none; }

.columns-1 { column-count: 1; }

.break-inside-avoid { break-inside: avoid; }

.grid-flow-row { grid-auto-flow: row; }

.grid-flow-col { grid-auto-flow: column; }

.auto-rows-min { grid-auto-rows: min-content; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }

.grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }

.grid-cols-\[1fr\,auto\,1fr\] { grid-template-columns: 1fr auto 1fr; }

.grid-cols-\[1fr\,auto\] { grid-template-columns: 1fr auto; }

.grid-cols-\[1fr_auto_1fr\] { grid-template-columns: 1fr auto 1fr; }

.grid-cols-\[50\%\,50\%\] { grid-template-columns: 50% 50%; }

.grid-cols-\[auto\,1fr\] { grid-template-columns: auto 1fr; }

.grid-cols-\[auto\,auto\,1fr\] { grid-template-columns: auto auto 1fr; }

.grid-cols-\[auto\,auto\,auto\] { grid-template-columns: auto auto auto; }

.grid-cols-\[auto\,auto\] { grid-template-columns: auto auto; }

.grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content; =
}

.grid-cols-\[minmax\(0\,1fr\)\] { grid-template-columns: minmax(0px, 1fr); =
}

.grid-cols-\[minmax\(0\,_1fr\)_auto\] { grid-template-columns: minmax(0px, =
1fr) auto; }

.grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-col=
umns: repeat(auto-fit, minmax(250px, 1fr)); }

.grid-cols-\[repeat\(auto-fit\,minmax\(300px\,1fr\)\)\] { grid-template-col=
umns: repeat(auto-fit, minmax(300px, 1fr)); }

.grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_10px\] { grid-template-rows: minmax(=
10px, 1fr) auto 10px; }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_minmax\(10px\,_1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }

.flex-row { flex-direction: row; }

.flex-row-reverse { flex-direction: row-reverse; }

.flex-col { flex-direction: column; }

.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }

.flex-wrap-reverse { flex-wrap: wrap-reverse; }

.flex-nowrap { flex-wrap: nowrap; }

.place-items-start { place-items: start; }

.content-center { align-content: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.items-baseline { align-items: baseline; }

.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.justify-stretch { justify-content: stretch; }

.justify-items-center { justify-items: center; }

.gap-0 { gap: 0px; }

.gap-0\.5 { gap: 0.125rem; }

.gap-1 { gap: 0.25rem; }

.gap-1\.5 { gap: 0.375rem; }

.gap-10 { gap: 2.5rem; }

.gap-2 { gap: 0.5rem; }

.gap-2\.5 { gap: 0.625rem; }

.gap-3 { gap: 0.75rem; }

.gap-3\.5 { gap: 0.875rem; }

.gap-32 { gap: 8rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-7 { gap: 1.75rem; }

.gap-8 { gap: 2rem; }

.gap-\[0\.4\] { }

.gap-\[10px\] { gap: 10px; }

.gap-\[2px\] { gap: 2px; }

.gap-bar { gap: var(--bar-gap,.25rem); }

.gap-snc-1 { gap: var(--snc-1); }

.gap-snc-results-padding { gap: var(--snc-results-padding); }

.gap-x-1 { column-gap: 0.25rem; }

.gap-x-1\.5 { column-gap: 0.375rem; }

.gap-x-2 { column-gap: 0.5rem; }

.gap-x-3 { column-gap: 0.75rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-x-8 { column-gap: 2rem; }

.gap-x-9 { column-gap: 2.25rem; }

.gap-y-1 { row-gap: 0.25rem; }

.gap-y-2 { row-gap: 0.5rem; }

.gap-y-4 { row-gap: 1rem; }

.-space-y-px > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; m=
argin-bottom: calc(-1px*var(--tw-space-y-reverse)); margin-top: calc(-1px*(=
1 - var(--tw-space-y-reverse))); }

.space-x-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; }

[dir=3D"ltr"] .space-x-1 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.25rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.25rem*var(=
--tw-space-x-reverse)); }

[dir=3D"rtl"] .space-x-1 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.25rem*var(--tw-space-x-reverse)); margin-right: calc(.25rem*(1 - var(-=
-tw-space-x-reverse))); }

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; =
}

[dir=3D"ltr"] .space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { margin-left=
: calc(.375rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.375rem=
*var(--tw-space-x-reverse)); }

[dir=3D"rtl"] .space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { margin-left=
: calc(.375rem*var(--tw-space-x-reverse)); margin-right: calc(.375rem*(1 - =
var(--tw-space-x-reverse))); }

.space-x-14 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; }

[dir=3D"ltr"] .space-x-14 > :not([hidden]) ~ :not([hidden]) { margin-left: =
calc(3.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(3.5rem*var=
(--tw-space-x-reverse)); }

[dir=3D"rtl"] .space-x-14 > :not([hidden]) ~ :not([hidden]) { margin-left: =
calc(3.5rem*var(--tw-space-x-reverse)); margin-right: calc(3.5rem*(1 - var(=
--tw-space-x-reverse))); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; }

[dir=3D"ltr"] .space-x-2 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.5rem*var(--=
tw-space-x-reverse)); }

[dir=3D"rtl"] .space-x-2 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.5rem*var(--tw-space-x-reverse)); margin-right: calc(.5rem*(1 - var(--t=
w-space-x-reverse))); }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; }

[dir=3D"ltr"] .space-x-3 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.75rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.75rem*var(=
--tw-space-x-reverse)); }

[dir=3D"rtl"] .space-x-3 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(.75rem*var(--tw-space-x-reverse)); margin-right: calc(.75rem*(1 - var(-=
-tw-space-x-reverse))); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; }

[dir=3D"ltr"] .space-x-4 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(1rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(1rem*var(--tw=
-space-x-reverse)); }

[dir=3D"rtl"] .space-x-4 > :not([hidden]) ~ :not([hidden]) { margin-left: c=
alc(1rem*var(--tw-space-x-reverse)); margin-right: calc(1rem*(1 - var(--tw-=
space-x-reverse))); }

.space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(0px*var(--tw-space-y-reverse)); margin-top: calc(0px*(1 - =
var(--tw-space-y-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.25rem*var(--tw-space-y-reverse)); margin-top: calc(.25rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; =
margin-bottom: calc(.375rem*var(--tw-space-y-reverse)); margin-top: calc(.3=
75rem*(1 - var(--tw-space-y-reverse))); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.5rem*var(--tw-space-y-reverse)); margin-top: calc(.5rem*(=
1 - var(--tw-space-y-reverse))); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.75rem*var(--tw-space-y-reverse)); margin-top: calc(.75rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1rem*var(--tw-space-y-reverse)); margin-top: calc(1rem*(1 =
- var(--tw-space-y-reverse))); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1.25rem*var(--tw-space-y-reverse)); margin-top: calc(1.25r=
em*(1 - var(--tw-space-y-reverse))); }

.space-y-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1.5rem*var(--tw-space-y-reverse)); margin-top: calc(1.5rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(2rem*var(--tw-space-y-reverse)); margin-top: calc(2rem*(1 =
- var(--tw-space-y-reverse))); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; }

[dir=3D"ltr"] .divide-x > :not([hidden]) ~ :not([hidden]) { border-left-wid=
th: calc(1px*(1 - var(--tw-divide-x-reverse))); border-right-width: calc(1p=
x*var(--tw-divide-x-reverse)); }

[dir=3D"rtl"] .divide-x > :not([hidden]) ~ :not([hidden]) { border-left-wid=
th: calc(1px*var(--tw-divide-x-reverse)); border-right-width: calc(1px*(1 -=
 var(--tw-divide-x-reverse))); }

.divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: 0; bor=
der-bottom-width: calc(1px*var(--tw-divide-y-reverse)); border-top-width: c=
alc(1px*(1 - var(--tw-divide-y-reverse))); }

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(227 227 227/var(--tw-divide-opacity)); }

.divide-token-border-light > :not([hidden]) ~ :not([hidden]) { border-color=
: var(--border-light); }

.divide-token-border-medium > :not([hidden]) ~ :not([hidden]) { border-colo=
r: var(--border-medium); }

.divide-white\/10 > :not([hidden]) ~ :not([hidden]) { border-color: rgba(25=
5, 255, 255, 0.1); }

.self-start { align-self: flex-start; }

.self-end { align-self: flex-end; }

.self-center { align-self: center; }

.self-stretch { align-self: stretch; }

.justify-self-start { justify-self: start; }

.justify-self-end { justify-self: end; }

.justify-self-center { justify-self: center; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-clip { overflow: clip; }

.\!overflow-visible { overflow: visible !important; }

.overflow-visible { overflow: visible; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-x-clip { overflow-x: clip; }

.\!overflow-y-scroll { overflow-y: scroll !important; }

.overflow-y-scroll { overflow-y: scroll; }

.scroll-smooth { scroll-behavior: smooth; }

.truncate { overflow: hidden; white-space: nowrap; }

.text-ellipsis, .truncate { text-overflow: ellipsis; }

.text-clip { text-overflow: clip; }

.whitespace-normal { white-space: normal; }

.whitespace-nowrap { white-space: nowrap; }

.\!whitespace-pre { white-space: pre !important; }

.whitespace-pre { white-space: pre; }

.whitespace-pre-line { white-space: pre-line; }

.\!whitespace-pre-wrap { white-space: pre-wrap !important; }

.whitespace-pre-wrap { white-space: pre-wrap; }

.whitespace-break-spaces { white-space: break-spaces; }

.text-wrap { text-wrap: wrap; }

.text-nowrap { text-wrap: nowrap; }

.text-balance { text-wrap: balance; }

.text-pretty { text-wrap: pretty; }

.break-words { overflow-wrap: break-word; }

.break-all { word-break: break-all; }

.\!rounded { border-radius: 0.25rem !important; }

.\!rounded-2xl { border-radius: 1rem !important; }

.\!rounded-full { border-radius: 9999px !important; }

.\!rounded-lg { border-radius: 0.5rem !important; }

.rounded { border-radius: 0.25rem; }

.rounded-2xl { border-radius: 1rem; }

.rounded-3xl { border-radius: 1.5rem; }

.rounded-\[0\.25rem\] { border-radius: 0.25rem; }

.rounded-\[20px\] { border-radius: 20px; }

.rounded-\[26px\] { border-radius: 26px; }

.rounded-\[2px\] { border-radius: 2px; }

.rounded-\[30px\] { border-radius: 30px; }

.rounded-\[38px\] { border-radius: 38px; }

.rounded-\[4px\] { border-radius: 4px; }

.rounded-\[5px\] { border-radius: 5px; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded-none { border-radius: 0px; }

.rounded-sm { border-radius: 0.125rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radi=
us: 0.5rem; }

.rounded-b-xl { border-bottom-left-radius: 0.75rem; border-bottom-right-rad=
ius: 0.75rem; }

[dir=3D"ltr"] .rounded-l { border-bottom-left-radius: 0.25rem; border-top-l=
eft-radius: 0.25rem; }

[dir=3D"rtl"] .rounded-l { border-bottom-right-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

[dir=3D"ltr"] .rounded-l-full { border-bottom-left-radius: 9999px; border-t=
op-left-radius: 9999px; }

[dir=3D"rtl"] .rounded-l-full { border-bottom-right-radius: 9999px; border-=
top-right-radius: 9999px; }

[dir=3D"ltr"] .rounded-l-md { border-bottom-left-radius: 0.375rem; border-t=
op-left-radius: 0.375rem; }

[dir=3D"rtl"] .rounded-l-md { border-bottom-right-radius: 0.375rem; border-=
top-right-radius: 0.375rem; }

[dir=3D"ltr"] .rounded-l-none { border-bottom-left-radius: 0px; border-top-=
left-radius: 0px; }

[dir=3D"rtl"] .rounded-l-none { border-bottom-right-radius: 0px; border-top=
-right-radius: 0px; }

[dir=3D"ltr"] .rounded-l-xl { border-bottom-left-radius: 0.75rem; border-to=
p-left-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-l-xl { border-bottom-right-radius: 0.75rem; border-t=
op-right-radius: 0.75rem; }

[dir=3D"ltr"] .rounded-r { border-bottom-right-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

[dir=3D"rtl"] .rounded-r { border-bottom-left-radius: 0.25rem; border-top-l=
eft-radius: 0.25rem; }

[dir=3D"ltr"] .rounded-r-full { border-bottom-right-radius: 9999px; border-=
top-right-radius: 9999px; }

[dir=3D"rtl"] .rounded-r-full { border-bottom-left-radius: 9999px; border-t=
op-left-radius: 9999px; }

[dir=3D"ltr"] .rounded-r-md { border-bottom-right-radius: 0.375rem; border-=
top-right-radius: 0.375rem; }

[dir=3D"rtl"] .rounded-r-md { border-bottom-left-radius: 0.375rem; border-t=
op-left-radius: 0.375rem; }

[dir=3D"ltr"] .rounded-r-none { border-bottom-right-radius: 0px; border-top=
-right-radius: 0px; }

[dir=3D"rtl"] .rounded-r-none { border-bottom-left-radius: 0px; border-top-=
left-radius: 0px; }

[dir=3D"ltr"] .rounded-r-xl { border-bottom-right-radius: 0.75rem; border-t=
op-right-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-r-xl { border-bottom-left-radius: 0.75rem; border-to=
p-left-radius: 0.75rem; }

.rounded-t-2xl { border-top-left-radius: 1rem; border-top-right-radius: 1re=
m; }

.rounded-t-\[20px\] { border-top-left-radius: 20px; border-top-right-radius=
: 20px; }

.rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius=
: 30px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0px=
; }

.rounded-t-xl { border-top-left-radius: 0.75rem; border-top-right-radius: 0=
.75rem; }

[dir=3D"ltr"] .rounded-bl-2xl { border-bottom-left-radius: 1rem; }

[dir=3D"rtl"] .rounded-bl-2xl { border-bottom-right-radius: 1rem; }

[dir=3D"ltr"] .rounded-bl-xl { border-bottom-left-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-bl-xl { border-bottom-right-radius: 0.75rem; }

[dir=3D"ltr"] .rounded-br-full { border-bottom-right-radius: 9999px; }

[dir=3D"rtl"] .rounded-br-full { border-bottom-left-radius: 9999px; }

[dir=3D"ltr"] .rounded-br-sm { border-bottom-right-radius: 0.125rem; }

[dir=3D"rtl"] .rounded-br-sm { border-bottom-left-radius: 0.125rem; }

[dir=3D"ltr"] .rounded-br-xl { border-bottom-right-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-br-xl { border-bottom-left-radius: 0.75rem; }

[dir=3D"ltr"] .rounded-tl-2xl { border-top-left-radius: 1rem; }

[dir=3D"rtl"] .rounded-tl-2xl { border-top-right-radius: 1rem; }

[dir=3D"ltr"] .rounded-tl-xl { border-top-left-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-tl-xl { border-top-right-radius: 0.75rem; }

[dir=3D"ltr"] .rounded-tr-2xl { border-top-right-radius: 1rem; }

[dir=3D"rtl"] .rounded-tr-2xl { border-top-left-radius: 1rem; }

[dir=3D"ltr"] .rounded-tr-lg { border-top-right-radius: 0.5rem; }

[dir=3D"rtl"] .rounded-tr-lg { border-top-left-radius: 0.5rem; }

[dir=3D"ltr"] .rounded-tr-xl { border-top-right-radius: 0.75rem; }

[dir=3D"rtl"] .rounded-tr-xl { border-top-left-radius: 0.75rem; }

.\!border-0 { border-width: 0px !important; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-\[0\.5px\] { border-width: 0.5px; }

.border-\[3px\] { border-width: 3px; }

.border-y { border-bottom-width: 1px; border-top-width: 1px; }

[dir=3D"ltr"] .\!border-l-0 { border-left-width: 0px !important; }

[dir=3D"rtl"] .\!border-l-0, [dir=3D"ltr"] .\!border-r-0 { border-right-wid=
th: 0px !important; }

[dir=3D"rtl"] .\!border-r-0 { border-left-width: 0px !important; }

.\!border-t-0 { border-top-width: 0px !important; }

.border-b { border-bottom-width: 1px; }

.border-b-0 { border-bottom-width: 0px; }

.border-b-2 { border-bottom-width: 2px; }

.border-b-\[0\.5px\] { border-bottom-width: 0.5px; }

[dir=3D"ltr"] .border-l { border-left-width: 1px; }

[dir=3D"rtl"] .border-l { border-right-width: 1px; }

[dir=3D"ltr"] .border-l-0 { border-left-width: 0px; }

[dir=3D"rtl"] .border-l-0 { border-right-width: 0px; }

[dir=3D"ltr"] .border-l-2 { border-left-width: 2px; }

[dir=3D"rtl"] .border-l-2 { border-right-width: 2px; }

[dir=3D"ltr"] .border-l-4 { border-left-width: 4px; }

[dir=3D"rtl"] .border-l-4 { border-right-width: 4px; }

[dir=3D"ltr"] .border-l-8 { border-left-width: 8px; }

[dir=3D"rtl"] .border-l-8 { border-right-width: 8px; }

[dir=3D"ltr"] .border-r { border-right-width: 1px; }

[dir=3D"rtl"] .border-r { border-left-width: 1px; }

[dir=3D"ltr"] .border-r-0 { border-right-width: 0px; }

[dir=3D"rtl"] .border-r-0 { border-left-width: 0px; }

[dir=3D"ltr"] .border-r-8 { border-right-width: 8px; }

[dir=3D"rtl"] .border-r-8 { border-left-width: 8px; }

[dir=3D"ltr"] .border-r-\[1px\] { border-right-width: 1px; }

[dir=3D"rtl"] .border-r-\[1px\] { border-left-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-t-8 { border-top-width: 8px; }

.border-t-\[0\.5px\] { border-top-width: 0.5px; }

.border-solid { border-style: solid; }

.border-dashed { border-style: dashed; }

.border-none { border-style: none; }

.\!border-token-border-light { border-color: var(--border-light) !important=
; }

.\!border-token-border-xlight { border-color: var(--border-xlight) !importa=
nt; }

.\!border-token-text-primary { border-color: var(--text-primary) !important=
; }

.border-\[\#EDEDF2\] { --tw-border-opacity: 1; border-color: rgb(237 237 24=
2/var(--tw-border-opacity)); }

.border-\[\#f4f4f4\] { --tw-border-opacity: 1; border-color: rgb(244 244 24=
4/var(--tw-border-opacity)); }

.border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, 0, 0.1); }

.border-\[rgba\(0\,0\,0\,0\.18\)\] { border-color: rgba(0, 0, 0, 0.18); }

.border-black { --tw-border-opacity: 1; border-color: rgb(0 0 0/var(--tw-bo=
rder-opacity)); }

.border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }

.border-blue-100 { --tw-border-opacity: 1; border-color: rgb(219 234 254/va=
r(--tw-border-opacity)); }

.border-blue-selection\/\[\.3\] { border-color: rgba(0, 122, 255, 0.3); }

.border-brand-green { --tw-border-opacity: 1; border-color: rgb(25 195 125/=
var(--tw-border-opacity)); }

.border-brand-green-800 { --tw-border-opacity: 1; border-color: rgb(5 167 7=
0/var(--tw-border-opacity)); }

.border-brand-purple { --tw-border-opacity: 1; border-color: rgb(171 104 25=
5/var(--tw-border-opacity)); }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgb(236 236 236/va=
r(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(227 227 227/va=
r(--tw-border-opacity)); }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgb(205 205 205/va=
r(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgb(180 180 180/va=
r(--tw-border-opacity)); }

.border-gray-500 { --tw-border-opacity: 1; border-color: rgb(155 155 155/va=
r(--tw-border-opacity)); }

.border-gray-600 { --tw-border-opacity: 1; border-color: rgb(103 103 103/va=
r(--tw-border-opacity)); }

.border-gray-700 { --tw-border-opacity: 1; border-color: rgb(66 66 66/var(-=
-tw-border-opacity)); }

.border-gray-950 { --tw-border-opacity: 1; border-color: rgb(13 13 13/var(-=
-tw-border-opacity)); }

.border-green-500 { --tw-border-opacity: 1; border-color: rgb(25 195 125/va=
r(--tw-border-opacity)); }

.border-green-600 { --tw-border-opacity: 1; border-color: rgb(16 163 127/va=
r(--tw-border-opacity)); }

.border-orange-400 { --tw-border-opacity: 1; border-color: rgb(255 96 0/var=
(--tw-border-opacity)); }

.border-orange-400\/15 { border-color: rgba(255, 96, 0, 0.15); }

.border-orange-500 { --tw-border-opacity: 1; border-color: rgb(224 108 43/v=
ar(--tw-border-opacity)); }

.border-red-200 { --tw-border-opacity: 1; border-color: rgb(254 202 202/var=
(--tw-border-opacity)); }

.border-red-400 { --tw-border-opacity: 1; border-color: rgb(248 113 113/var=
(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgb(239 68 68/var(-=
-tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgb(220 38 38/var(-=
-tw-border-opacity)); }

.border-red-700 { --tw-border-opacity: 1; border-color: rgb(185 28 28/var(-=
-tw-border-opacity)); }

.border-token-border-heavy { border-color: var(--border-heavy); }

.border-token-border-light { border-color: var(--border-light); }

.border-token-border-medium { border-color: var(--border-medium); }

.border-token-border-xheavy { border-color: var(--border-xheavy); }

.border-token-border-xlight { border-color: var(--border-xlight); }

.border-token-main-surface-primary { border-color: var(--main-surface-prima=
ry); }

.border-token-main-surface-secondary { border-color: var(--main-surface-sec=
ondary); }

.border-token-main-surface-tertiary { border-color: var(--main-surface-tert=
iary); }

.border-token-surface-error\/15 { border-color: rgb(var(--surface-error)/.1=
5); }

.border-token-text-primary { border-color: var(--text-primary); }

.border-token-text-quaternary { border-color: var(--text-quaternary); }

.border-token-text-secondary { border-color: var(--text-secondary); }

.border-token-text-tertiary { border-color: var(--text-tertiary); }

.border-transparent { border-color: transparent; }

.border-white { --tw-border-opacity: 1; border-color: rgb(255 255 255/var(-=
-tw-border-opacity)); }

.border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.border-y-token-border-medium { border-bottom-color: var(--border-medium); =
border-top-color: var(--border-medium); }

.border-b-black { --tw-border-opacity: 1; border-bottom-color: rgb(0 0 0/va=
r(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

[dir=3D"ltr"] .border-l-token-border-medium { border-left-color: var(--bord=
er-medium); }

[dir=3D"rtl"] .border-l-token-border-medium { border-right-color: var(--bor=
der-medium); }

[dir=3D"ltr"] .border-l-token-border-xlight { border-left-color: var(--bord=
er-xlight); }

[dir=3D"rtl"] .border-l-token-border-xlight { border-right-color: var(--bor=
der-xlight); }

[dir=3D"ltr"] .border-l-token-sidebar-surface-secondary { border-left-color=
: var(--sidebar-surface-secondary); }

[dir=3D"rtl"] .border-l-token-sidebar-surface-secondary { border-right-colo=
r: var(--sidebar-surface-secondary); }

[dir=3D"ltr"] .border-l-transparent { border-left-color: transparent; }

[dir=3D"rtl"] .border-l-transparent { border-right-color: transparent; }

[dir=3D"ltr"] .border-r-token-border-xlight { border-right-color: var(--bor=
der-xlight); }

[dir=3D"rtl"] .border-r-token-border-xlight { border-left-color: var(--bord=
er-xlight); }

[dir=3D"ltr"] .border-r-transparent { border-right-color: transparent; }

[dir=3D"rtl"] .border-r-transparent { border-left-color: transparent; }

.border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgb(0 11=
9 255/var(--tw-border-opacity)); }

.\!bg-\[Highlight\] { background-color: highlight !important; }

.\!bg-black { --tw-bg-opacity: 1 !important; background-color: rgb(0 0 0/va=
r(--tw-bg-opacity)) !important; }

.\!bg-gray-200 { --tw-bg-opacity: 1 !important; background-color: rgb(227 2=
27 227/var(--tw-bg-opacity)) !important; }

.\!bg-gray-300 { --tw-bg-opacity: 1 !important; background-color: rgb(205 2=
05 205/var(--tw-bg-opacity)) !important; }

.\!bg-green-100 { --tw-bg-opacity: 1 !important; background-color: rgb(210 =
244 211/var(--tw-bg-opacity)) !important; }

.\!bg-green-400 { --tw-bg-opacity: 1 !important; background-color: rgb(104 =
222 122/var(--tw-bg-opacity)) !important; }

.\!bg-red-100 { --tw-bg-opacity: 1 !important; background-color: rgb(254 22=
6 226/var(--tw-bg-opacity)) !important; }

.\!bg-red-400 { --tw-bg-opacity: 1 !important; background-color: rgb(248 11=
3 113/var(--tw-bg-opacity)) !important; }

.\!bg-token-main-surface-primary { background-color: var(--main-surface-pri=
mary) !important; }

.\!bg-token-text-primary { background-color: var(--text-primary) !important=
; }

.\!bg-transparent { background-color: transparent !important; }

.\!bg-white { --tw-bg-opacity: 1 !important; background-color: rgb(255 255 =
255/var(--tw-bg-opacity)) !important; }

.bg-\[\#0077FF\] { --tw-bg-opacity: 1; background-color: rgb(0 119 255/var(=
--tw-bg-opacity)); }

.bg-\[\#080808\] { --tw-bg-opacity: 1; background-color: rgb(8 8 8/var(--tw=
-bg-opacity)); }

.bg-\[\#10A37F\] { --tw-bg-opacity: 1; background-color: rgb(16 163 127/var=
(--tw-bg-opacity)); }

.bg-\[\#A47EE726\] { background-color: rgba(164, 126, 231, 0.15); }

.bg-\[\#B161FD\] { --tw-bg-opacity: 1; background-color: rgb(177 97 253/var=
(--tw-bg-opacity)); }

.bg-\[\#F1F1F1\] { --tw-bg-opacity: 1; background-color: rgb(241 241 241/va=
r(--tw-bg-opacity)); }

.bg-\[\#F2F2F2\] { --tw-bg-opacity: 1; background-color: rgb(242 242 242/va=
r(--tw-bg-opacity)); }

.bg-\[\#F8CA27\] { --tw-bg-opacity: 1; background-color: rgb(248 202 39/var=
(--tw-bg-opacity)); }

.bg-\[\#FF5588\] { --tw-bg-opacity: 1; background-color: rgb(255 85 136/var=
(--tw-bg-opacity)); }

.bg-\[\#FF6E3C\] { --tw-bg-opacity: 1; background-color: rgb(255 110 60/var=
(--tw-bg-opacity)); }

.bg-\[\#e2c541\] { --tw-bg-opacity: 1; background-color: rgb(226 197 65/var=
(--tw-bg-opacity)); }

.bg-\[\#f4f4f4\] { --tw-bg-opacity: 1; background-color: rgb(244 244 244/va=
r(--tw-bg-opacity)); }

.bg-\[\#fcf6e0\] { --tw-bg-opacity: 1; background-color: rgb(252 246 224/va=
r(--tw-bg-opacity)); }

.bg-\[Highlight\] { background-color: highlight; }

.bg-\[rgba\(255\,255\,255\,0\.9\)\] { background-color: rgba(255, 255, 255,=
 0.9); }

.bg-black { --tw-bg-opacity: 1; background-color: rgb(0 0 0/var(--tw-bg-opa=
city)); }

.bg-black\/10 { background-color: rgba(0, 0, 0, 0.1); }

.bg-black\/40 { background-color: rgba(0, 0, 0, 0.4); }

.bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }

.bg-black\/50 { background-color: rgba(0, 0, 0, 0.5); }

.bg-black\/90 { background-color: rgba(0, 0, 0, 0.9); }

.bg-black\/95 { background-color: rgba(0, 0, 0, 0.95); }

.bg-black\/\[0\.025\] { background-color: rgba(0, 0, 0, 0.024); }

.bg-blue-100 { --tw-bg-opacity: 1; background-color: rgb(219 234 254/var(--=
tw-bg-opacity)); }

.bg-blue-1000 { --tw-bg-opacity: 1; background-color: rgb(2 133 255/var(--t=
w-bg-opacity)); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgb(191 219 254/var(--=
tw-bg-opacity)); }

.bg-blue-250 { --tw-bg-opacity: 1; background-color: rgb(205 229 247/var(--=
tw-bg-opacity)); }

.bg-blue-300 { --tw-bg-opacity: 1; background-color: rgb(121 137 255/var(--=
tw-bg-opacity)); }

.bg-blue-400 { --tw-bg-opacity: 1; background-color: rgb(58 136 255/var(--t=
w-bg-opacity)); }

.bg-blue-400\/15 { background-color: rgba(58, 136, 255, 0.15); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgb(69 89 164/var(--tw=
-bg-opacity)); }

.bg-blue-500\/30 { background-color: rgba(69, 89, 164, 0.3); }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(37 99 235/var(--tw=
-bg-opacity)); }

.bg-blue-selection { --tw-bg-opacity: 1; background-color: rgb(0 122 255/va=
r(--tw-bg-opacity)); }

.bg-blue-selection\/\[\.08\] { background-color: rgba(0, 122, 255, 0.08); }

.bg-blue-selection\/\[0\.1\] { background-color: rgba(0, 122, 255, 0.1); }

.bg-brand-blue-800 { --tw-bg-opacity: 1; background-color: rgb(0 102 222/va=
r(--tw-bg-opacity)); }

.bg-brand-blue-800\/20 { background-color: rgba(0, 102, 222, 0.2); }

.bg-brand-green { --tw-bg-opacity: 1; background-color: rgb(25 195 125/var(=
--tw-bg-opacity)); }

.bg-brand-purple { --tw-bg-opacity: 1; background-color: rgb(171 104 255/va=
r(--tw-bg-opacity)); }

.bg-brand-purple-600 { --tw-bg-opacity: 1; background-color: rgb(113 95 222=
/var(--tw-bg-opacity)); }

.bg-brand-purple-800 { --tw-bg-opacity: 1; background-color: rgb(84 0 222/v=
ar(--tw-bg-opacity)); }

.bg-brand-purple\/15 { background-color: rgba(171, 104, 255, 0.15); }

.bg-brand-purple\/20 { background-color: rgba(171, 104, 255, 0.2); }

.bg-current { background-color: currentcolor; }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(236 236 236/var(--=
tw-bg-opacity)); }

.bg-gray-100\/50 { background-color: rgba(237, 237, 237, 0.5); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgb(227 227 227/var(--=
tw-bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgb(205 205 205/var(--=
tw-bg-opacity)); }

.bg-gray-300\/60 { background-color: rgba(204, 204, 204, 0.6); }

.bg-gray-400 { --tw-bg-opacity: 1; background-color: rgb(180 180 180/var(--=
tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(249 249 249/var(--t=
w-bg-opacity)); }

.bg-gray-50\/50 { background-color: rgba(250, 250, 250, 0.5); }

.bg-gray-50\/75 { background-color: rgba(250, 250, 250, 0.75); }

.bg-gray-500 { --tw-bg-opacity: 1; background-color: rgb(155 155 155/var(--=
tw-bg-opacity)); }

.bg-gray-600 { --tw-bg-opacity: 1; background-color: rgb(103 103 103/var(--=
tw-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgb(66 66 66/var(--tw-=
bg-opacity)); }

.bg-gray-700\/50 { background-color: rgba(66, 66, 66, 0.5); }

.bg-gray-800 { --tw-bg-opacity: 1; background-color: rgb(33 33 33/var(--tw-=
bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgb(23 23 23/var(--tw-=
bg-opacity)); }

.bg-gray-950 { --tw-bg-opacity: 1; background-color: rgb(13 13 13/var(--tw-=
bg-opacity)); }

.bg-green-100 { --tw-bg-opacity: 1; background-color: rgb(210 244 211/var(-=
-tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgb(185 238 188/var(-=
-tw-bg-opacity)); }

.bg-green-50 { --tw-bg-opacity: 1; background-color: rgb(235 250 235/var(--=
tw-bg-opacity)); }

.bg-green-500 { --tw-bg-opacity: 1; background-color: rgb(25 195 125/var(--=
tw-bg-opacity)); }

.bg-green-500\/30 { background-color: rgba(25, 195, 125, 0.3); }

.bg-green-600 { --tw-bg-opacity: 1; background-color: rgb(16 163 127/var(--=
tw-bg-opacity)); }

.bg-green-800 { --tw-bg-opacity: 1; background-color: rgb(27 93 74/var(--tw=
-bg-opacity)); }

.bg-orange-100 { --tw-bg-opacity: 1; background-color: rgb(254 241 227/var(=
--tw-bg-opacity)); }

.bg-orange-300 { --tw-bg-opacity: 1; background-color: rgb(255 160 69/var(-=
-tw-bg-opacity)); }

.bg-orange-400 { --tw-bg-opacity: 1; background-color: rgb(255 96 0/var(--t=
w-bg-opacity)); }

.bg-orange-500 { --tw-bg-opacity: 1; background-color: rgb(224 108 43/var(-=
-tw-bg-opacity)); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgb(254 226 226/var(--t=
w-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgb(254 202 202/var(--t=
w-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(239 68 68/var(--tw-=
bg-opacity)); }

.bg-red-500\/10 { background-color: rgba(239, 68, 68, 0.1); }

.bg-red-500\/30 { background-color: rgba(239, 68, 68, 0.3); }

.bg-red-500\/50 { background-color: rgba(239, 68, 68, 0.5); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(220 38 38/var(--tw-=
bg-opacity)); }

.bg-red-800 { --tw-bg-opacity: 1; background-color: rgb(153 27 27/var(--tw-=
bg-opacity)); }

.bg-token-border-light { background-color: var(--border-light); }

.bg-token-border-medium { background-color: var(--border-medium); }

.bg-token-composer-surface { background-color: var(--composer-surface); }

.bg-token-main-surface-primary { background-color: var(--main-surface-prima=
ry); }

.bg-token-main-surface-primary-inverse { background-color: var(--main-surfa=
ce-primary-inverse); }

.bg-token-main-surface-secondary { background-color: var(--main-surface-sec=
ondary); }

.bg-token-main-surface-tertiary { background-color: var(--main-surface-tert=
iary); }

.bg-token-message-surface { background-color: var(--message-surface); }

.bg-token-sidebar-surface-primary { background-color: var(--sidebar-surface=
-primary); }

.bg-token-sidebar-surface-secondary { background-color: var(--sidebar-surfa=
ce-secondary); }

.bg-token-sidebar-surface-tertiary { background-color: var(--sidebar-surfac=
e-tertiary); }

.bg-token-surface-error { --tw-bg-opacity: 1; background-color: rgb(var(--s=
urface-error)/var(--tw-bg-opacity)); }

.bg-token-text-primary { background-color: var(--text-primary); }

.bg-token-text-quaternary { background-color: var(--text-quaternary); }

.bg-token-text-secondary { background-color: var(--text-secondary); }

.bg-token-text-tertiary { background-color: var(--text-tertiary); }

.bg-transparent { background-color: transparent; }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255/var(--tw-=
bg-opacity)); }

.bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }

.bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }

.bg-white\/50 { background-color: rgba(255, 255, 255, 0.5); }

.bg-white\/90 { background-color: rgba(255, 255, 255, 0.9); }

.bg-white\/95 { background-color: rgba(255, 255, 255, 0.95); }

.bg-yellow-100 { --tw-bg-opacity: 1; background-color: rgb(254 249 195/var(=
--tw-bg-opacity)); }

.bg-yellow-400 { --tw-bg-opacity: 1; background-color: rgb(255 198 87/var(-=
-tw-bg-opacity)); }

.bg-yellow-500 { --tw-bg-opacity: 1; background-color: rgb(234 179 8/var(--=
tw-bg-opacity)); }

.bg-opacity-0 { --tw-bg-opacity: 0; }

.bg-opacity-10 { --tw-bg-opacity: .1; }

.bg-opacity-15 { --tw-bg-opacity: .15; }

.bg-opacity-20 { --tw-bg-opacity: .2; }

.bg-opacity-30 { --tw-bg-opacity: .3; }

.bg-opacity-40 { --tw-bg-opacity: .4; }

.bg-opacity-5 { --tw-bg-opacity: .05; }

.bg-opacity-50 { --tw-bg-opacity: .5; }

.bg-opacity-60 { --tw-bg-opacity: .6; }

.bg-opacity-70 { --tw-bg-opacity: .7; }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

[dir=3D"ltr"] .bg-gradient-to-l { background-image: linear-gradient(to left=
,var(--tw-gradient-stops)); }

[dir=3D"rtl"] .bg-gradient-to-l, [dir=3D"ltr"] .bg-gradient-to-r { backgrou=
nd-image: linear-gradient(to right,var(--tw-gradient-stops)); }

[dir=3D"rtl"] .bg-gradient-to-r { background-image: linear-gradient(to left=
,var(--tw-gradient-stops)); }

.bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw-gradi=
ent-stops)); }

.bg-none { background-image: none; }

[dir=3D"ltr"] .bg-vert-light-gradient { background-image: linear-gradient(r=
gba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }

[dir=3D"rtl"] .bg-vert-light-gradient { background-image: linear-gradient(-=
180deg, rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }

.from-\[var\(--main-surface-background\)\] { --tw-gradient-from: var(--main=
-surface-background) var(--tw-gradient-from-position); --tw-gradient-to: hs=
la(0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--=
tw-gradient-from),var(--tw-gradient-to); }

.from-brand-blue-800\/15 { --tw-gradient-from: rgba(0,102,222,.15) var(--tw=
-gradient-from-position); --tw-gradient-to: rgba(0,102,222,0) var(--tw-grad=
ient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gr=
adient-to); }

.from-gray-50 { --tw-gradient-from: #f9f9f9 var(--tw-gradient-from-position=
); --tw-gradient-to: hsla(0,0%,98%,0) var(--tw-gradient-to-position); --tw-=
gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-token-main-surface-primary { --tw-gradient-from: var(--main-surface-p=
rimary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,=
0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-f=
rom),var(--tw-gradient-to); }

.from-token-main-surface-secondary { --tw-gradient-from: var(--main-surface=
-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,1=
00%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradie=
nt-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-primary { --tw-gradient-from: var(--sidebar-sur=
face-primary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%=
,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-grad=
ient-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-secondary { --tw-gradient-from: var(--sidebar-s=
urface-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(=
0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-=
gradient-from),var(--tw-gradient-to); }

.from-token-text-tertiary { --tw-gradient-from: var(--text-tertiary) var(--=
tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gr=
adient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-=
gradient-to); }

.from-transparent { --tw-gradient-from: transparent var(--tw-gradient-from-=
position); --tw-gradient-to: transparent var(--tw-gradient-to-position); --=
tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-grad=
ient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-white\/0 { --tw-gradient-from: hsla(0,0%,100%,0) var(--tw-gradient-fr=
om-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-posi=
tion); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); =
}

.from-0\% { --tw-gradient-from-position: 0%; }

.from-10\% { --tw-gradient-from-position: 10%; }

.from-50\% { --tw-gradient-from-position: 50%; }

.from-60\% { --tw-gradient-from-position: 60%; }

.via-\[rgba\(255\,255\,255\,0\.8\)\] { --tw-gradient-to: hsla(0,0%,100%,0) =
var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from=
),hsla(0,0%,100%,.8) var(--tw-gradient-via-position),var(--tw-gradient-to);=
 }

.via-black\/20 { --tw-gradient-to: transparent var(--tw-gradient-to-positio=
n); --tw-gradient-stops: var(--tw-gradient-from),rgba(0,0,0,.2) var(--tw-gr=
adient-via-position),var(--tw-gradient-to); }

.via-30\% { --tw-gradient-via-position: 30%; }

.to-gray-50 { --tw-gradient-to: #f9f9f9 var(--tw-gradient-to-position); }

.to-transparent { --tw-gradient-to: transparent var(--tw-gradient-to-positi=
on); }

.to-white\/20 { --tw-gradient-to: hsla(0,0%,100%,.2) var(--tw-gradient-to-p=
osition); }

.to-100\% { --tw-gradient-to-position: 100%; }

.bg-contain { background-size: contain; }

.bg-cover { background-size: cover; }

.bg-clip-padding { background-clip: padding-box; }

.bg-center { background-position: 50% center; }

.bg-no-repeat { background-repeat: no-repeat; }

.fill-token-main-surface-primary { fill: var(--main-surface-primary); }

.fill-yellow-500 { fill: rgb(234, 179, 8); }

.stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }

.stroke-gray-400 { stroke: rgb(180, 180, 180); }

.stroke-token-main-surface-tertiary { stroke: var(--main-surface-tertiary);=
 }

.stroke-0 { stroke-width: 0; }

.stroke-2, .stroke-\[2\] { stroke-width: 2; }

.stroke-\[3\] { stroke-width: 3; }

.stroke-\[4\] { stroke-width: 4; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-scale-down { object-fit: scale-down; }

.object-center { object-position: center center; }

.\!p-1 { padding: 0.25rem !important; }

.p-0 { padding: 0px; }

.p-0\.5 { padding: 0.125rem; }

.p-1 { padding: 0.25rem; }

.p-1\.5 { padding: 0.375rem; }

.p-10 { padding: 2.5rem; }

.p-14 { padding: 3.5rem; }

.p-2 { padding: 0.5rem; }

.p-2\.5 { padding: 0.625rem; }

.p-24 { padding: 6rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-7 { padding: 1.75rem; }

.p-8 { padding: 2rem; }

.p-\[2px\] { padding: 2px; }

.p-snc-1 { padding: var(--snc-1); }

.\!px-0 { padding-left: 0px !important; padding-right: 0px !important; }

.\!py-0 { padding-bottom: 0px !important; padding-top: 0px !important; }

.\!py-2 { padding-bottom: 0.5rem !important; padding-top: 0.5rem !important=
; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-0\.5 { padding-left: 0.125rem; padding-right: 0.125rem; }

.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.px-1\.5 { padding-left: 0.375rem; padding-right: 0.375rem; }

.px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }

.px-12 { padding-left: 3rem; padding-right: 3rem; }

.px-16 { padding-left: 4rem; padding-right: 4rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.px-2\.5 { padding-left: 0.625rem; padding-right: 0.625rem; }

.px-20 { padding-left: 5rem; padding-right: 5rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-3\.5 { padding-left: 0.875rem; padding-right: 0.875rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-7 { padding-left: 1.75rem; padding-right: 1.75rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.px-\[16px\] { padding-left: 16px; padding-right: 16px; }

.px-\[1em\] { padding-left: 1em; padding-right: 1em; }

.px-\[22px\] { padding-left: 22px; padding-right: 22px; }

.px-\[4px\] { padding-left: 4px; padding-right: 4px; }

.px-\[6px\] { padding-left: 6px; padding-right: 6px; }

.px-sidebar-inline { padding-left: var(--sidebar-inline-padding); padding-r=
ight: var(--sidebar-inline-padding); }

.px-snc-1 { padding-left: var(--snc-1); padding-right: var(--snc-1); }

.px-snc-2 { padding-left: var(--snc-2); padding-right: var(--snc-2); }

.px-snc-results-padding { padding-left: var(--snc-results-padding); padding=
-right: var(--snc-results-padding); }

.py-0 { padding-bottom: 0px; padding-top: 0px; }

.py-0\.5 { padding-bottom: 0.125rem; padding-top: 0.125rem; }

.py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }

.py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }

.py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }

.py-12 { padding-bottom: 3rem; padding-top: 3rem; }

.py-16 { padding-bottom: 4rem; padding-top: 4rem; }

.py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }

.py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }

.py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }

.py-32 { padding-bottom: 8rem; padding-top: 8rem; }

.py-4 { padding-bottom: 1rem; padding-top: 1rem; }

.py-5 { padding-bottom: 1.25rem; padding-top: 1.25rem; }

.py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }

.py-8 { padding-bottom: 2rem; padding-top: 2rem; }

.py-\[0\.108em\] { padding-bottom: 0.108em; padding-top: 0.108em; }

.py-\[1\.25em\] { padding-bottom: 1.25em; padding-top: 1.25em; }

.py-\[12px\] { padding-bottom: 12px; padding-top: 12px; }

.py-\[18px\] { padding-bottom: 18px; padding-top: 18px; }

.py-\[1px\] { padding-bottom: 1px; padding-top: 1px; }

.py-\[2px\] { padding-bottom: 2px; padding-top: 2px; }

.py-snc-1 { padding-bottom: var(--snc-1); padding-top: var(--snc-1); }

[dir=3D"ltr"] .\!pl-0 { padding-left: 0px !important; }

[dir=3D"rtl"] .\!pl-0 { padding-right: 0px !important; }

[dir=3D"ltr"] .\!pl-4 { padding-left: 1rem !important; }

[dir=3D"rtl"] .\!pl-4 { padding-right: 1rem !important; }

[dir=3D"ltr"] .\!pr-3 { padding-right: 0.75rem !important; }

[dir=3D"rtl"] .\!pr-3 { padding-left: 0.75rem !important; }

.\!pt-0 { padding-top: 0px !important; }

.\!pt-3 { padding-top: 0.75rem !important; }

.pb-0 { padding-bottom: 0px; }

.pb-0\.5 { padding-bottom: 0.125rem; }

.pb-1 { padding-bottom: 0.25rem; }

.pb-1\.5 { padding-bottom: 0.375rem; }

.pb-10 { padding-bottom: 2.5rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pb-3\.5 { padding-bottom: 0.875rem; }

.pb-4 { padding-bottom: 1rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pb-8 { padding-bottom: 2rem; }

.pb-\[120px\] { padding-bottom: 120px; }

.pb-\[22px\] { padding-bottom: 22px; }

.pb-snc-1 { padding-bottom: var(--snc-1); }

.pb-snc-2 { padding-bottom: var(--snc-2); }

[dir=3D"ltr"] .pl-0 { padding-left: 0px; }

[dir=3D"rtl"] .pl-0 { padding-right: 0px; }

[dir=3D"ltr"] .pl-0\.5 { padding-left: 0.125rem; }

[dir=3D"rtl"] .pl-0\.5 { padding-right: 0.125rem; }

[dir=3D"ltr"] .pl-1 { padding-left: 0.25rem; }

[dir=3D"rtl"] .pl-1 { padding-right: 0.25rem; }

[dir=3D"ltr"] .pl-1\.5 { padding-left: 0.375rem; }

[dir=3D"rtl"] .pl-1\.5 { padding-right: 0.375rem; }

[dir=3D"ltr"] .pl-10 { padding-left: 2.5rem; }

[dir=3D"rtl"] .pl-10 { padding-right: 2.5rem; }

[dir=3D"ltr"] .pl-12 { padding-left: 3rem; }

[dir=3D"rtl"] .pl-12 { padding-right: 3rem; }

[dir=3D"ltr"] .pl-2 { padding-left: 0.5rem; }

[dir=3D"rtl"] .pl-2 { padding-right: 0.5rem; }

[dir=3D"ltr"] .pl-24 { padding-left: 6rem; }

[dir=3D"rtl"] .pl-24 { padding-right: 6rem; }

[dir=3D"ltr"] .pl-3 { padding-left: 0.75rem; }

[dir=3D"rtl"] .pl-3 { padding-right: 0.75rem; }

[dir=3D"ltr"] .pl-4 { padding-left: 1rem; }

[dir=3D"rtl"] .pl-4 { padding-right: 1rem; }

[dir=3D"ltr"] .pl-5 { padding-left: 1.25rem; }

[dir=3D"rtl"] .pl-5 { padding-right: 1.25rem; }

[dir=3D"ltr"] .pl-6 { padding-left: 1.5rem; }

[dir=3D"rtl"] .pl-6 { padding-right: 1.5rem; }

[dir=3D"ltr"] .pl-7 { padding-left: 1.75rem; }

[dir=3D"rtl"] .pl-7 { padding-right: 1.75rem; }

[dir=3D"ltr"] .pl-8 { padding-left: 2rem; }

[dir=3D"rtl"] .pl-8 { padding-right: 2rem; }

[dir=3D"ltr"] .pl-9 { padding-left: 2.25rem; }

[dir=3D"rtl"] .pl-9 { padding-right: 2.25rem; }

[dir=3D"ltr"] .pl-\[3\.25rem\] { padding-left: 3.25rem; }

[dir=3D"rtl"] .pl-\[3\.25rem\] { padding-right: 3.25rem; }

[dir=3D"ltr"] .pr-0 { padding-right: 0px; }

[dir=3D"rtl"] .pr-0 { padding-left: 0px; }

[dir=3D"ltr"] .pr-1 { padding-right: 0.25rem; }

[dir=3D"rtl"] .pr-1 { padding-left: 0.25rem; }

[dir=3D"ltr"] .pr-1\.5 { padding-right: 0.375rem; }

[dir=3D"rtl"] .pr-1\.5 { padding-left: 0.375rem; }

[dir=3D"ltr"] .pr-12 { padding-right: 3rem; }

[dir=3D"rtl"] .pr-12 { padding-left: 3rem; }

[dir=3D"ltr"] .pr-14 { padding-right: 3.5rem; }

[dir=3D"rtl"] .pr-14 { padding-left: 3.5rem; }

[dir=3D"ltr"] .pr-16 { padding-right: 4rem; }

[dir=3D"rtl"] .pr-16 { padding-left: 4rem; }

[dir=3D"ltr"] .pr-2 { padding-right: 0.5rem; }

[dir=3D"rtl"] .pr-2 { padding-left: 0.5rem; }

[dir=3D"ltr"] .pr-2\.5 { padding-right: 0.625rem; }

[dir=3D"rtl"] .pr-2\.5 { padding-left: 0.625rem; }

[dir=3D"ltr"] .pr-3 { padding-right: 0.75rem; }

[dir=3D"rtl"] .pr-3 { padding-left: 0.75rem; }

[dir=3D"ltr"] .pr-3\.5 { padding-right: 0.875rem; }

[dir=3D"rtl"] .pr-3\.5 { padding-left: 0.875rem; }

[dir=3D"ltr"] .pr-4 { padding-right: 1rem; }

[dir=3D"rtl"] .pr-4 { padding-left: 1rem; }

[dir=3D"ltr"] .pr-5 { padding-right: 1.25rem; }

[dir=3D"rtl"] .pr-5 { padding-left: 1.25rem; }

[dir=3D"ltr"] .pr-6 { padding-right: 1.5rem; }

[dir=3D"rtl"] .pr-6 { padding-left: 1.5rem; }

[dir=3D"ltr"] .pr-8 { padding-right: 2rem; }

[dir=3D"rtl"] .pr-8 { padding-left: 2rem; }

[dir=3D"ltr"] .pr-9 { padding-right: 2.25rem; }

[dir=3D"rtl"] .pr-9 { padding-left: 2.25rem; }

.ps-4 { padding-inline-start: 1rem; }

.pt-0 { padding-top: 0px; }

.pt-0\.5 { padding-top: 0.125rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-1\.5 { padding-top: 0.375rem; }

.pt-10 { padding-top: 2.5rem; }

.pt-12 { padding-top: 3rem; }

.pt-16 { padding-top: 4rem; }

.pt-2 { padding-top: 0.5rem; }

.pt-20 { padding-top: 5rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-5 { padding-top: 1.25rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[1\.125rem\] { padding-top: 1.125rem; }

.pt-\[18px\] { padding-top: 18px; }

.pt-\[2px\] { padding-top: 2px; }

.pt-\[3px\] { padding-top: 3px; }

.pt-\[4\.5px\] { padding-top: 4.5px; }

.pt-\[4px\] { padding-top: 4px; }

.pt-\[67\%\] { padding-top: 67%; }

.pt-\[7px\] { padding-top: 7px; }

.pt-px { padding-top: 1px; }

[dir=3D"ltr"] .text-left { text-align: left; }

[dir=3D"rtl"] .text-left { text-align: right; }

.text-center { text-align: center; }

[dir=3D"ltr"] .text-right { text-align: right; }

[dir=3D"rtl"] .text-right { text-align: left; }

.text-start { text-align: start; }

.text-end { text-align: end; }

.indent-\[0\.1em\] { text-indent: 0.1em; }

.align-baseline { vertical-align: baseline; }

.align-top { vertical-align: top; }

.align-middle { vertical-align: middle; }

.font-circle { font-family: Circle, system-ui, sans-serif; }

.font-mono { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, C=
onsolas, "Liberation Mono", monospace; }

.font-sans { font-family: ui-sans-serif, -apple-system, system-ui, "Segoe U=
I", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "S=
egoe UI Symbol"; }

.\!text-base { font-size: 1rem !important; line-height: 1.5rem !important; =
}

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.text-\[0\.5em\] { font-size: 0.5em; }

.text-\[0\.5rem\] { font-size: 0.5rem; }

.text-\[0\.65rem\] { font-size: 0.65rem; }

.text-\[0\.75rem\] { font-size: 0.75rem; }

.text-\[0\.95rem\] { font-size: 0.95rem; }

.text-\[1\.7rem\] { font-size: 1.7rem; }

.text-\[10px\] { font-size: 10px; }

.text-\[11px\] { font-size: 11px; }

.text-\[12px\] { font-size: 12px; }

.text-\[13px\] { font-size: 13px; }

.text-\[15px\] { font-size: 15px; }

.text-\[17px\] { font-size: 17px; }

.text-\[18px\] { font-size: 18px; }

.text-\[20px\] { font-size: 20px; }

.text-\[32px\] { font-size: 32px; }

.text-\[8px\] { font-size: 8px; }

.text-\[9px\] { font-size: 9px; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.\!font-medium { font-weight: 500 !important; }

.\!font-normal { font-weight: 400 !important; }

.\!font-semibold { font-weight: 600 !important; }

.font-\[550\] { font-weight: 550; }

.font-black { font-weight: 900; }

.font-bold { font-weight: 700; }

.font-extralight { font-weight: 200; }

.font-light { font-weight: 300; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.capitalize { text-transform: capitalize; }

.normal-case { text-transform: none; }

.italic { font-style: italic; }

.ordinal { --tw-ordinal: ordinal; }

.ordinal, .tabular-nums { font-variant-numeric: var(--tw-ordinal) var(--tw-=
slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-n=
umeric-fraction); }

.tabular-nums { --tw-numeric-spacing: tabular-nums; }

.\!leading-none { line-height: 1 !important; }

.leading-3 { line-height: 0.75rem; }

.leading-4 { line-height: 1rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-9 { line-height: 2.25rem; }

.leading-\[0\] { line-height: 0; }

.leading-\[1\.25em\] { line-height: 1.25em; }

.leading-\[1\.2\] { line-height: 1.2; }

.leading-\[15px\] { line-height: 15px; }

.leading-\[17px\] { line-height: 17px; }

.leading-\[18px\] { line-height: 18px; }

.leading-\[30px\] { line-height: 30px; }

.leading-none { line-height: 1; }

.leading-normal { line-height: 1.5; }

.leading-relaxed { line-height: 1.625; }

.leading-snug { line-height: 1.375; }

.leading-tight { line-height: 1.25; }

.tracking-\[-0\.197499px\] { letter-spacing: -0.197499px; }

.tracking-\[0\.0015rem\] { letter-spacing: 0.0015rem; }

.tracking-condensed { letter-spacing: -0.154px; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.\!text-\[\#2964aa\] { --tw-text-opacity: 1 !important; color: rgb(41 100 1=
70/var(--tw-text-opacity)) !important; }

.\!text-black { --tw-text-opacity: 1 !important; color: rgb(0 0 0/var(--tw-=
text-opacity)) !important; }

.\!text-token-main-surface-primary { color: var(--main-surface-primary) !im=
portant; }

.\!text-token-text-primary { color: var(--text-primary) !important; }

.\!text-token-text-secondary { color: var(--text-secondary) !important; }

.\!text-white { --tw-text-opacity: 1 !important; color: rgb(255 255 255/var=
(--tw-text-opacity)) !important; }

.text-\[\#\#676767\] { }

.text-\[\#30a633\] { --tw-text-opacity: 1; color: rgb(48 166 51/var(--tw-te=
xt-opacity)); }

.text-\[\#814CFF\] { --tw-text-opacity: 1; color: rgb(129 76 255/var(--tw-t=
ext-opacity)); }

.text-\[\#875BE1\] { --tw-text-opacity: 1; color: rgb(135 91 225/var(--tw-t=
ext-opacity)); }

.text-\[\#9F9F9F\] { --tw-text-opacity: 1; color: rgb(159 159 159/var(--tw-=
text-opacity)); }

.text-\[\#FE7600\] { --tw-text-opacity: 1; color: rgb(254 118 0/var(--tw-te=
xt-opacity)); }

.text-\[\#f14d42\] { --tw-text-opacity: 1; color: rgb(241 77 66/var(--tw-te=
xt-opacity)); }

.text-\[\#f48c15\] { --tw-text-opacity: 1; color: rgb(244 140 21/var(--tw-t=
ext-opacity)); }

.text-\[var\(--Primary-Gray-600\,_\#565869\)\] { color: var(--Primary-Gray-=
600,#565869); }

.text-black { --tw-text-opacity: 1; color: rgb(0 0 0/var(--tw-text-opacity)=
); }

.text-black\/40 { color: rgba(0, 0, 0, 0.4); }

.text-blue-1000 { --tw-text-opacity: 1; color: rgb(2 133 255/var(--tw-text-=
opacity)); }

.text-blue-400 { --tw-text-opacity: 1; color: rgb(58 136 255/var(--tw-text-=
opacity)); }

.text-blue-500 { --tw-text-opacity: 1; color: rgb(69 89 164/var(--tw-text-o=
pacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgb(37 99 235/var(--tw-text-o=
pacity)); }

.text-blue-selection { --tw-text-opacity: 1; color: rgb(0 122 255/var(--tw-=
text-opacity)); }

.text-brand-blue-800 { --tw-text-opacity: 1; color: rgb(0 102 222/var(--tw-=
text-opacity)); }

.text-brand-green-800 { --tw-text-opacity: 1; color: rgb(5 167 70/var(--tw-=
text-opacity)); }

.text-brand-purple { --tw-text-opacity: 1; color: rgb(171 104 255/var(--tw-=
text-opacity)); }

.text-brand-purple-800 { --tw-text-opacity: 1; color: rgb(84 0 222/var(--tw=
-text-opacity)); }

.text-current { color: currentcolor; }

.text-gray-100 { --tw-text-opacity: 1; color: rgb(236 236 236/var(--tw-text=
-opacity)); }

.text-gray-300 { --tw-text-opacity: 1; color: rgb(205 205 205/var(--tw-text=
-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(180 180 180/var(--tw-text=
-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(155 155 155/var(--tw-text=
-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(103 103 103/var(--tw-text=
-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(66 66 66/var(--tw-text-op=
acity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(33 33 33/var(--tw-text-op=
acity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(23 23 23/var(--tw-text-op=
acity)); }

.text-gray-950 { --tw-text-opacity: 1; color: rgb(13 13 13/var(--tw-text-op=
acity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgb(25 195 125/var(--tw-text=
-opacity)); }

.text-green-600 { --tw-text-opacity: 1; color: rgb(16 163 127/var(--tw-text=
-opacity)); }

.text-green-700 { --tw-text-opacity: 1; color: rgb(26 127 100/var(--tw-text=
-opacity)); }

.text-green-800 { --tw-text-opacity: 1; color: rgb(27 93 74/var(--tw-text-o=
pacity)); }

.text-orange-300 { --tw-text-opacity: 1; color: rgb(255 160 69/var(--tw-tex=
t-opacity)); }

.text-orange-400 { --tw-text-opacity: 1; color: rgb(255 96 0/var(--tw-text-=
opacity)); }

.text-orange-500 { --tw-text-opacity: 1; color: rgb(224 108 43/var(--tw-tex=
t-opacity)); }

.text-orange-600 { --tw-text-opacity: 1; color: rgb(244 108 33/var(--tw-tex=
t-opacity)); }

.text-red-200 { --tw-text-opacity: 1; color: rgb(254 202 202/var(--tw-text-=
opacity)); }

.text-red-400 { --tw-text-opacity: 1; color: rgb(248 113 113/var(--tw-text-=
opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(239 68 68/var(--tw-text-op=
acity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgb(220 38 38/var(--tw-text-op=
acity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgb(185 28 28/var(--tw-text-op=
acity)); }

.text-red-800 { --tw-text-opacity: 1; color: rgb(153 27 27/var(--tw-text-op=
acity)); }

.text-token-link { color: var(--link); }

.text-token-main-surface-primary { color: var(--main-surface-primary); }

.text-token-main-surface-primary-inverse { color: var(--main-surface-primar=
y-inverse); }

.text-token-main-surface-tertiary { color: var(--main-surface-tertiary); }

.text-token-sidebar-icon { color: var(--sidebar-icon); }

.text-token-sidebar-title-primary { color: var(--sidebar-title-primary); }

.text-token-text-error { color: var(--text-error); }

.text-token-text-primary { color: var(--text-primary); }

.text-token-text-quaternary { color: var(--text-quaternary); }

.text-token-text-secondary { color: var(--text-secondary); }

.text-token-text-tertiary { color: var(--text-tertiary); }

.text-transparent { color: transparent; }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255/var(--tw-text-op=
acity)); }

.text-white\/25 { color: rgba(255, 255, 255, 0.25); }

.text-yellow-500 { --tw-text-opacity: 1; color: rgb(234 179 8/var(--tw-text=
-opacity)); }

.text-yellow-600 { --tw-text-opacity: 1; color: rgb(202 138 4/var(--tw-text=
-opacity)); }

.text-yellow-700 { --tw-text-opacity: 1; color: rgb(161 98 7/var(--tw-text-=
opacity)); }

.text-yellow-800 { --tw-text-opacity: 1; color: rgb(133 77 14/var(--tw-text=
-opacity)); }

.underline { text-decoration-line: underline; }

.line-through { text-decoration-line: line-through; }

.\!no-underline { text-decoration-line: none !important; }

.decoration-token-link { text-decoration-color: var(--link); }

.decoration-token-text-primary { text-decoration-color: var(--text-primary)=
; }

.underline-offset-2 { text-underline-offset: 2px; }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(155 155 155/var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-20 { opacity: 0.2; }

.opacity-25 { opacity: 0.25; }

.opacity-30 { opacity: 0.3; }

.opacity-40 { opacity: 0.4; }

.opacity-50 { opacity: 0.5; }

.opacity-60 { opacity: 0.6; }

.opacity-65 { opacity: 0.65; }

.opacity-70 { opacity: 0.7; }

.opacity-75 { opacity: 0.75; }

.opacity-80 { opacity: 0.8; }

.opacity-85 { opacity: 0.85; }

.opacity-\[0\.01\] { opacity: 0.01; }

.\!shadow-none { --tw-shadow: 0 0 #0000 !important; --tw-shadow-colored: 0 =
0 #0000 !important; box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(=
--tw-ring-shadow,0 0 #0000),var(--tw-shadow) !important; }

.shadow { --tw-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0=
,.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1p=
x var(--tw-shadow-color); }

.shadow, .shadow-2xl { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),v=
ar(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-2xl { --tw-shadow: 0 25px 50px -12px rgba(0,0,0,.25); --tw-shadow-c=
olored: 0 25px 50px -12px var(--tw-shadow-color); }

.shadow-\[0_-1px_0_0_var\(--border-light\)\] { --tw-shadow: 0 -1px 0 0 var(=
--border-light); --tw-shadow-colored: 0 -1px 0 0 var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #=
0000),var(--tw-shadow); }

.shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 -4px 32px r=
gba(0,0,0,.08); --tw-shadow-colored: 0 -4px 32px var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #=
0000),var(--tw-shadow); }

.shadow-\[0_0_200px_0_rgba\(0\,0\,0\,0\.14\)\] { --tw-shadow: 0 0 200px 0 r=
gba(0,0,0,.14); --tw-shadow-colored: 0 0 200px 0 var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #=
0000),var(--tw-shadow); }

.shadow-\[0_0_64px_0_rgba\(0\,0\,0\,0\.07\)\] { --tw-shadow: 0 0 64px 0 rgb=
a(0,0,0,.07); --tw-shadow-colored: 0 0 64px 0 var(--tw-shadow-color); box-s=
hadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #000=
0),var(--tw-shadow); }

.shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 14px 62px=
 0 rgba(0,0,0,.25); --tw-shadow-colored: 0 14px 62px 0 var(--tw-shadow-colo=
r); }

.shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\], .shadow-\[0_1px_12px_0px_=
\#0000000B\] { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-=
ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-\[0_1px_12px_0px_\#0000000B\] { --tw-shadow: 0 1px 12px 0px #000000=
0b; --tw-shadow-colored: 0 1px 12px 0px var(--tw-shadow-color); }

.shadow-\[0_1px_1px_rgba\(0\,0\,0\,0\.03\)\,_0_4\.93747px_9\.05202px_rgba\(=
0\,0\,0\,0\.11\)\] { --tw-shadow: 0 1px 1px rgba(0,0,0,.03),0 4.93747px 9.0=
5202px rgba(0,0,0,.11); --tw-shadow-colored: 0 1px 1px var(--tw-shadow-colo=
r),0 4.93747px 9.05202px var(--tw-shadow-color); box-shadow: var(--tw-ring-=
offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); =
}

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 2px 24px rgb=
a(0,0,0,.05); --tw-shadow-colored: 0 2px 24px var(--tw-shadow-color); box-s=
hadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #000=
0),var(--tw-shadow); }

.shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 2px 3px 0 r=
gba(0,0,0,.25); --tw-shadow-colored: 0 2px 3px 0 var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #=
0000),var(--tw-shadow); }

.shadow-\[0px_10px_10px_-6px_rgba\(0\,0\,0\,0\.04\)\] { --tw-shadow: 0px 10=
px 10px -6px rgba(0,0,0,.04); --tw-shadow-colored: 0px 10px 10px -6px var(-=
-tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(-=
-tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-\[0px_1px_0px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0px 1px 0px r=
gba(0,0,0,.05); --tw-shadow-colored: 0px 1px 0px var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #=
0000),var(--tw-shadow); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14px=
 rgba(0,0,0,.06); --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);=
 box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 =
0 #0000),var(--tw-shadow); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 0 =
0 1px rgba(0,0,0,.1); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-=
color); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\], .shadow-inner { box-shad=
ow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),=
var(--tw-shadow); }

.shadow-inner { --tw-shadow: inset 0 2px 4px 0 rgba(0,0,0,.05); --tw-shadow=
-colored: inset 0 2px 4px 0 var(--tw-shadow-color); }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rg=
ba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),=
0 4px 6px -4px var(--tw-shadow-color); }

.shadow-lg, .shadow-md { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000)=
,var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba=
(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2p=
x 4px -2px var(--tw-shadow-color); }

.shadow-none { --tw-shadow: 0 0 #0000; --tw-shadow-colored: 0 0 #0000; }

.shadow-none, .shadow-sm { box-shadow: var(--tw-ring-offset-shadow,0 0 #000=
0),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored:=
 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px r=
gba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color)=
,0 8px 10px -6px var(--tw-shadow-color); }

.shadow-xl, .shadow-xs { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000)=
,var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0=
 15px var(--tw-shadow-color); }

.shadow-xxs { --tw-shadow: 0 0 2px 0 rgba(0,0,0,.05),0 4px 6px 0 rgba(0,0,0=
,.02); --tw-shadow-colored: 0 0 2px 0 var(--tw-shadow-color),0 4px 6px 0 va=
r(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),va=
r(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-token-border-xlight { --tw-shadow-color: var(--border-xlight); --tw=
-shadow: var(--tw-shadow-colored); }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline { outline-style: solid; }

.outline-0 { outline-width: 0px; }

.ring-0 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-0, .ring-1 { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-s=
hadow),var(--tw-shadow,0 0 #0000); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 }

.ring-2 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow,0 0 #0000); }

.ring-inset { --tw-ring-inset: inset; }

.ring-black { --tw-ring-opacity: 1; --tw-ring-color: rgb(0 0 0/var(--tw-rin=
g-opacity)); }

.ring-black\/10 { --tw-ring-color: rgba(0,0,0,.1); }

.ring-transparent { --tw-ring-color: transparent; }

.ring-white { --tw-ring-opacity: 1; --tw-ring-color: rgb(255 255 255/var(--=
tw-ring-opacity)); }

.ring-opacity-5 { --tw-ring-opacity: .05; }

.ring-offset-4 { --tw-ring-offset-width: 4px; }

.ring-offset-black { --tw-ring-offset-color: #000; }

.blur { --tw-blur: blur(8px); }

.blur, .blur-xl { filter: var(--tw-blur) var(--tw-brightness) var(--tw-cont=
rast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-sa=
turate) var(--tw-sepia) var(--tw-drop-shadow); }

.blur-xl { --tw-blur: blur(24px); }

.drop-shadow { --tw-drop-shadow: drop-shadow(0 1px 2px rgba(0,0,0,.1)) drop=
-shadow(0 1px 1px rgba(0,0,0,.06)); }

.drop-shadow, .drop-shadow-md { filter: var(--tw-blur) var(--tw-brightness)=
 var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-inver=
t) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.drop-shadow-md { --tw-drop-shadow: drop-shadow(0 4px 3px rgba(0,0,0,.07)) =
drop-shadow(0 2px 2px rgba(0,0,0,.06)); }

.grayscale { --tw-grayscale: grayscale(100%); }

.grayscale, .grayscale-\[0\.6\] { filter: var(--tw-blur) var(--tw-brightnes=
s) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-inv=
ert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale-\[0\.6\] { --tw-grayscale: grayscale(.6); }

.invert { --tw-invert: invert(100%); }

.invert, .sepia { filter: var(--tw-blur) var(--tw-brightness) var(--tw-cont=
rast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-sa=
turate) var(--tw-sepia) var(--tw-drop-shadow); }

.sepia { --tw-sepia: sepia(100%); }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.backdrop-blur-2xl { --tw-backdrop-blur: blur(40px); }

.backdrop-blur-2xl, .backdrop-blur-3xl { backdrop-filter: var(--tw-backdrop=
-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-b=
ackdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) =
var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-se=
pia); }

.backdrop-blur-3xl { --tw-backdrop-blur: blur(64px); }

.backdrop-blur-lg { --tw-backdrop-blur: blur(16px); }

.backdrop-blur-lg, .backdrop-blur-md { backdrop-filter: var(--tw-backdrop-b=
lur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-bac=
kdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) va=
r(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepi=
a); }

.backdrop-blur-md { --tw-backdrop-blur: blur(12px); }

.backdrop-blur-sm { --tw-backdrop-blur: blur(4px); }

.backdrop-blur-sm, .backdrop-blur-xl { backdrop-filter: var(--tw-backdrop-b=
lur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-bac=
kdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) va=
r(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepi=
a); }

.backdrop-blur-xl { --tw-backdrop-blur: blur(24px); }

.transition { transition-duration: 0.15s; transition-property: color, backg=
round-color, border-color, text-decoration-color, fill, stroke, opacity, bo=
x-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter; tran=
sition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[background-color\,color\] { transition-duration: 0.15s; trans=
ition-property: background-color, color; transition-timing-function: cubic-=
bezier(0.4, 0, 0.2, 1); }

.transition-\[filter\] { transition-duration: 0.15s; transition-property: f=
ilter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[flex-basis\] { transition-duration: 0.15s; transition-propert=
y: flex-basis; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[opacity\,filter\] { transition-duration: 0.15s; transition-pr=
operty: opacity, filter; transition-timing-function: cubic-bezier(0.4, 0, 0=
.2, 1); }

.transition-\[stroke-dashoffset\] { transition-duration: 0.15s; transition-=
property: stroke-dashoffset; transition-timing-function: cubic-bezier(0.4, =
0, 0.2, 1); }

.transition-\[width\] { transition-duration: 0.15s; transition-property: wi=
dth; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-all { transition-duration: 0.15s; transition-property: all; tra=
nsition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-colors { transition-duration: 0.15s; transition-property: color=
, background-color, border-color, text-decoration-color, fill, stroke; tran=
sition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-opacity { transition-duration: 0.15s; transition-property: opac=
ity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-shadow { transition-duration: 0.15s; transition-property: box-s=
hadow; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-transform { transition-duration: 0.15s; transition-property: tr=
ansform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-width { transition-duration: 0.15s; transition-property: width;=
 transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.delay-100 { transition-delay: 0.1s; }

.delay-1000 { transition-delay: 1s; }

.delay-300 { transition-delay: 0.3s; }

.delay-500 { transition-delay: 0.5s; }

.duration-0 { transition-duration: 0s; }

.duration-100 { transition-duration: 0.1s; }

.duration-1000 { transition-duration: 1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.duration-700 { transition-duration: 0.7s; }

.duration-\[0\.125s\] { transition-duration: 0.125s; }

.ease-\[cubic-bezier\(\.215\,\.61\,\.355\,1\)\] { transition-timing-functio=
n: cubic-bezier(0.215, 0.61, 0.355, 1); }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

.will-change-\[opacity\,transform\] { will-change: opacity, transform; }

.will-change-transform { will-change: transform; }

.contain-content { contain: content; }

.contain-inline-size { --tw-contain-size: inline-size; contain: var(--tw-co=
ntain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-conta=
in-style); }

.\@container { container-type: inline-size; }

.snc .text-xs { font-size: 0.825rem; line-height: 1.4; }

.snc .text-sm { font-size: 0.9rem; line-height: 1.4; }

.snc .text-base { font-size: 1rem; }

.snc .\!text-base { font-size: 1rem !important; }

.snc .text-lg { font-size: 1.125rem; }

.snc .text-xl { font-size: 1.25rem; }

.snc .text-2xl { font-size: 1.5rem; }

.snc .text-3xl { font-size: 1.875rem; }

@media (min-width: 640px) {
  .snc { --snc-results-padding: 1.5rem; }
}

.\[grid-area\:_title\] { grid-area: title; }

.\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid-t=
emplate-areas: "title action" "description action"; }

.\[oaicite\:0\] { }

.\[oaicite\:1\] { }

.\[oaicite\:2\] { }

.\[oaicite\:3\] { }

.\[oaicite\:4\] { }

.\[oaicite\:5\] { }

.\[oaicite\:6\] { }

.\[oaicite\:7\] { }

.\[overflow-wrap\:anywhere\] { overflow-wrap: anywhere; }

.\[scrollbar-gutter\:stable\] { scrollbar-gutter: stable; }

.\[text-wrap\:pretty\] { text-wrap: pretty; }

.first-letter\:uppercase::first-letter { text-transform: uppercase; }

.marker\:text-token-text-tertiary ::marker { color: var(--text-tertiary); }

.marker\:text-token-text-tertiary::marker { color: var(--text-tertiary); }

.placeholder\:text-gray-300::placeholder { --tw-text-opacity: 1; color: rgb=
(205 205 205/var(--tw-text-opacity)); }

.placeholder\:text-gray-500::placeholder { --tw-text-opacity: 1; color: rgb=
(155 155 155/var(--tw-text-opacity)); }

.placeholder\:text-gray-600::placeholder { --tw-text-opacity: 1; color: rgb=
(103 103 103/var(--tw-text-opacity)); }

.placeholder\:text-token-text-secondary::placeholder { color: var(--text-se=
condary); }

.placeholder\:text-token-text-tertiary::placeholder { color: var(--text-ter=
tiary); }

.before\:bg-white\/50::before { background-color: rgba(255, 255, 255, 0.5);=
 content: var(--tw-content); }

.before\:content-\[\'\*\'\]::before { --tw-content: "*"; content: var(--tw-=
content); }

.after\:absolute::after { content: var(--tw-content); position: absolute; }

.after\:-inset-4::after { content: var(--tw-content); inset: -1rem; }

.after\:-inset-y-4::after { bottom: -1rem; content: var(--tw-content); top:=
 -1rem; }

.after\:inset-x-\[-4px\]::after { content: var(--tw-content); left: -4px; r=
ight: -4px; }

.after\:inset-y-0::after { bottom: 0px; content: var(--tw-content); top: 0p=
x; }

.after\:-left-1::after { content: var(--tw-content); }

[dir=3D"ltr"] .after\:-left-1::after { left: -0.25rem; }

[dir=3D"rtl"] .after\:-left-1::after { right: -0.25rem; }

.after\:-right-4::after { content: var(--tw-content); }

[dir=3D"ltr"] .after\:-right-4::after { right: -1rem; }

[dir=3D"rtl"] .after\:-right-4::after { left: -1rem; }

.after\:bottom-0::after { bottom: 0px; content: var(--tw-content); }

.after\:left-0::after { content: var(--tw-content); }

[dir=3D"ltr"] .after\:left-0::after { left: 0px; }

[dir=3D"rtl"] .after\:left-0::after { right: 0px; }

.after\:top-0::after { content: var(--tw-content); top: 0px; }

.after\:z-0::after { content: var(--tw-content); z-index: 0; }

.after\:block::after { content: var(--tw-content); display: block; }

.after\:h-2::after { content: var(--tw-content); height: 0.5rem; }

.after\:w-1::after { content: var(--tw-content); width: 0.25rem; }

.after\:w-2::after { content: var(--tw-content); width: 0.5rem; }

.after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-con=
tent); }

.after\:rounded-md::after { border-radius: 0.375rem; content: var(--tw-cont=
ent); }

.after\:bg-\[Highlight\]::after { background-color: highlight; content: var=
(--tw-content); }

.after\:bg-green-500::after { --tw-bg-opacity: 1; background-color: rgb(25 =
195 125/var(--tw-bg-opacity)); content: var(--tw-content); }

.after\:bg-red-500::after { --tw-bg-opacity: 1; background-color: rgb(239 6=
8 68/var(--tw-bg-opacity)); content: var(--tw-content); }

.after\:bg-token-text-primary::after { background-color: var(--text-primary=
); content: var(--tw-content); }

.after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-conte=
nt); }

[dir=3D"ltr"] .first\:ml-0:first-child { margin-left: 0px; }

[dir=3D"rtl"] .first\:ml-0:first-child { margin-right: 0px; }

[dir=3D"ltr"] .first\:ml-4:first-child { margin-left: 1rem; }

[dir=3D"rtl"] .first\:ml-4:first-child { margin-right: 1rem; }

[dir=3D"ltr"] .first\:mr-0:first-child { margin-right: 0px; }

[dir=3D"rtl"] .first\:mr-0:first-child { margin-left: 0px; }

.first\:mt-0:first-child { margin-top: 0px; }

.first\:mt-1:first-child { margin-top: 0.25rem; }

.first\:border-0:first-child { border-width: 0px; }

[dir=3D"ltr"] .first\:\!pl-0:first-child { padding-left: 0px !important; }

[dir=3D"rtl"] .first\:\!pl-0:first-child { padding-right: 0px !important; }

.first\:pt-\[3px\]:first-child { padding-top: 3px; }

.last\:mb-0:last-child { margin-bottom: 0px; }

.last\:mb-2:last-child { margin-bottom: 0.5rem; }

.last\:mb-5:last-child { margin-bottom: 1.25rem; }

[dir=3D"ltr"] .last\:mr-1:last-child { margin-right: 0.25rem; }

[dir=3D"rtl"] .last\:mr-1:last-child { margin-left: 0.25rem; }

[dir=3D"ltr"] .last\:mr-1\.5:last-child { margin-right: 0.375rem; }

[dir=3D"rtl"] .last\:mr-1\.5:last-child { margin-left: 0.375rem; }

[dir=3D"ltr"] .last\:mr-4:last-child { margin-right: 1rem; }

[dir=3D"rtl"] .last\:mr-4:last-child { margin-left: 1rem; }

.last\:min-h-\[calc\(100vh-8rem\)\]:last-child { min-height: calc(-8rem + 1=
00vh); }

.last\:border-b:last-child { border-bottom-width: 1px; }

.last\:border-b-0:last-child { border-bottom-width: 0px; }

[dir=3D"ltr"] .last\:border-r-0:last-child { border-right-width: 0px; }

[dir=3D"rtl"] .last\:border-r-0:last-child { border-left-width: 0px; }

[dir=3D"ltr"] .last\:\!pr-0:last-child { padding-right: 0px !important; }

[dir=3D"rtl"] .last\:\!pr-0:last-child { padding-left: 0px !important; }

[dir=3D"ltr"] .last\:pr-0:last-child { padding-right: 0px; }

[dir=3D"rtl"] .last\:pr-0:last-child { padding-left: 0px; }

.last-of-type\:border-b-0:last-of-type { border-bottom-width: 0px; }

.checked\:border-blue-600:checked { --tw-border-opacity: 1; border-color: r=
gb(37 99 235/var(--tw-border-opacity)); }

.checked\:\!bg-black:checked { --tw-bg-opacity: 1 !important; background-co=
lor: rgb(0 0 0/var(--tw-bg-opacity)) !important; }

.checked\:bg-blue-600:checked { --tw-bg-opacity: 1; background-color: rgb(3=
7 99 235/var(--tw-bg-opacity)); }

.empty\:hidden:empty { display: none; }

.focus-within\:z-10:focus-within { z-index: 10; }

.focus-within\:border-green-500:focus-within { --tw-border-opacity: 1; bord=
er-color: rgb(25 195 125/var(--tw-border-opacity)); }

.focus-within\:border-green-600:focus-within { --tw-border-opacity: 1; bord=
er-color: rgb(16 163 127/var(--tw-border-opacity)); }

.focus-within\:border-token-border-xheavy:focus-within { border-color: var(=
--border-xheavy); }

.focus-within\:bg-token-main-surface-tertiary:focus-within { background-col=
or: var(--main-surface-tertiary); }

.focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 #0000; --tw-shad=
ow-colored: 0 0 #0000; box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),v=
ar(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.focus-within\:outline-none:focus-within { outline: transparent solid 2px; =
outline-offset: 2px; }

.focus-within\:ring-0:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) =
var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow,0 0 #0000); }

.focus-within\:ring-1:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-wi=
dth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.focus-within\:ring-green-600:focus-within { --tw-ring-opacity: 1; --tw-rin=
g-color: rgb(16 163 127/var(--tw-ring-opacity)); }

.focus-within\:ring-token-text-secondary:focus-within { --tw-ring-color: va=
r(--text-secondary); }

.focus-within\:ring-transparent:focus-within { --tw-ring-color: transparent=
; }

@media (hover: hover) and (pointer: fine) {
  .hover\:z-50:hover { z-index: 50; }
  .hover\:scale-110:hover { --tw-scale-x: 1.1; --tw-scale-y: 1.1; transform=
: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-ro=
tate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale=
-x)) scaleY(var(--tw-scale-y)); }
  .hover\:scale-\[103\%\]:hover { --tw-scale-x: 103%; --tw-scale-y: 103%; t=
ransform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var=
(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--=
tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .hover\:cursor-default:hover { cursor: default; }
  .hover\:cursor-pointer:hover { cursor: pointer; }
  .hover\:rounded-xl:hover { border-radius: 0.75rem; }
  .hover\:border:hover { border-width: 1px; }
  .hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgb=
(236 236 236/var(--tw-border-opacity)); }
  .hover\:border-red-500\/50:hover { border-color: rgba(239, 68, 68, 0.5); =
}
  .hover\:border-token-border-heavy:hover { border-color: var(--border-heav=
y); }
  .hover\:border-token-border-medium:hover { border-color: var(--border-med=
ium); }
  .hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(0 119 255/var(--tw-bg-opacity)); }
  .hover\:bg-\[\#BDDCF4\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(189 220 244/var(--tw-bg-opacity)); }
  .hover\:bg-\[\#f5f5f5\]:hover { --tw-bg-opacity: 1; background-color: rgb=
(245 245 245/var(--tw-bg-opacity)); }
  .hover\:bg-\[var\(--snc-hover\)\]:hover { background-color: var(--snc-hov=
er); }
  .hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgb(0 0 0/=
var(--tw-bg-opacity)); }
  .hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }
  .hover\:bg-black\/75:hover { background-color: rgba(0, 0, 0, 0.75); }
  .hover\:bg-blue-600:hover { --tw-bg-opacity: 1; background-color: rgb(37 =
99 235/var(--tw-bg-opacity)); }
  .hover\:bg-blue-800:hover { --tw-bg-opacity: 1; background-color: rgb(30 =
64 175/var(--tw-bg-opacity)); }
  .hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgb(236=
 236 236/var(--tw-bg-opacity)); }
  .hover\:bg-gray-100\/75:hover { background-color: rgba(237, 237, 237, 0.7=
5); }
  .hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgb(227=
 227 227/var(--tw-bg-opacity)); }
  .hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(249 =
249 249/var(--tw-bg-opacity)); }
  .hover\:bg-gray-500\/10:hover { background-color: rgba(156, 156, 156, 0.1=
); }
  .hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-color: rgb(33 =
33 33/var(--tw-bg-opacity)); }
  .hover\:bg-green-200:hover { --tw-bg-opacity: 1; background-color: rgb(18=
5 238 188/var(--tw-bg-opacity)); }
  .hover\:bg-orange-400\/10:hover { background-color: rgba(255, 96, 0, 0.1)=
; }
  .hover\:bg-red-200:hover { --tw-bg-opacity: 1; background-color: rgb(254 =
202 202/var(--tw-bg-opacity)); }
  .hover\:bg-red-500:hover { --tw-bg-opacity: 1; background-color: rgb(239 =
68 68/var(--tw-bg-opacity)); }
  .hover\:bg-red-500\/15:hover { background-color: rgba(239, 68, 68, 0.15);=
 }
  .hover\:bg-token-hint-text:hover { background-color: var(--hint-text); }
  .hover\:bg-token-main-surface-secondary:hover { background-color: var(--m=
ain-surface-secondary); }
  .hover\:bg-token-main-surface-tertiary:hover { background-color: var(--ma=
in-surface-tertiary); }
  .hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(=
--sidebar-surface-secondary); }
  .hover\:bg-token-sidebar-surface-tertiary:hover { background-color: var(-=
-sidebar-surface-tertiary); }
  .hover\:bg-token-surface-error\/10:hover { background-color: rgb(var(--su=
rface-error)/.1); }
  .hover\:bg-token-text-primary:hover { background-color: var(--text-primar=
y); }
  .hover\:bg-transparent:hover { background-color: transparent; }
  .hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 25=
5 255/var(--tw-bg-opacity)); }
  .hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); =
}
  .hover\:bg-opacity-30:hover { --tw-bg-opacity: .3; }
  .hover\:\!text-token-main-surface-secondary:hover { color: var(--main-sur=
face-secondary) !important; }
  .hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgb(239 68 68/v=
ar(--tw-text-opacity)); }
  .hover\:text-red-700:hover { --tw-text-opacity: 1; color: rgb(185 28 28/v=
ar(--tw-text-opacity)); }
  .hover\:text-token-link-hover:hover { color: var(--link-hover); }
  .hover\:text-token-main-surface-tertiary:hover { color: var(--main-surfac=
e-tertiary); }
  .hover\:text-token-text-primary:hover { color: var(--text-primary); }
  .hover\:text-token-text-quaternary:hover { color: var(--text-quaternary);=
 }
  .hover\:text-token-text-secondary:hover { color: var(--text-secondary); }
  .hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }
  .hover\:text-white:hover { --tw-text-opacity: 1; color: rgb(255 255 255/v=
ar(--tw-text-opacity)); }
  .hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }
  .hover\:underline:hover { text-decoration-line: underline; }
  .hover\:no-underline:hover { text-decoration-line: none; }
  .hover\:opacity-100:hover { opacity: 1; }
  .hover\:opacity-65:hover { opacity: 0.65; }
  .hover\:opacity-70:hover { opacity: 0.7; }
  .hover\:opacity-75:hover { opacity: 0.75; }
  .hover\:opacity-80:hover { opacity: 0.8; }
  .hover\:opacity-85:hover { opacity: 0.85; }
  .hover\:opacity-90:hover { opacity: 0.9; }
  .hover\:delay-0:hover { transition-delay: 0s; }
}

.focus\:border-none:focus { border-style: none; }

.focus\:border-gray-200:focus { --tw-border-opacity: 1; border-color: rgb(2=
27 227 227/var(--tw-border-opacity)); }

.focus\:border-green-500:focus { --tw-border-opacity: 1; border-color: rgb(=
25 195 125/var(--tw-border-opacity)); }

.focus\:border-orange-400:focus { --tw-border-opacity: 1; border-color: rgb=
(255 96 0/var(--tw-border-opacity)); }

.focus\:border-red-500:focus { --tw-border-opacity: 1; border-color: rgb(23=
9 68 68/var(--tw-border-opacity)); }

.focus\:border-token-text-primary:focus { border-color: var(--text-primary)=
; }

.focus\:border-transparent:focus { border-color: transparent; }

.focus\:shadow-none:focus { --tw-shadow: 0 0 #0000; --tw-shadow-colored: 0 =
0 #0000; box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-s=
hadow,0 0 #0000),var(--tw-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.focus\:outline-0:focus { outline-width: 0px; }

.focus\:ring-0:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-=
color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(=
--tw-shadow,0 0 #0000); }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow,0 0 #0000); }

.focus\:ring-inset:focus { --tw-ring-inset: inset; }

.focus\:ring-blue-400:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(58=
 136 255/var(--tw-ring-opacity)); }

.focus\:ring-gray-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(22=
7 227 227/var(--tw-ring-opacity)); }

.focus\:ring-green-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(2=
5 195 125/var(--tw-ring-opacity)); }

.focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-primary=
); }

.focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(255 2=
55 255/var(--tw-ring-opacity)); }

.focus-visible\:border-none:focus-visible { border-style: none; }

.focus-visible\:border-token-border-light:focus-visible { border-color: var=
(--border-light); }

.focus-visible\:bg-\[\#f5f5f5\]:focus-visible { --tw-bg-opacity: 1; backgro=
und-color: rgb(245 245 245/var(--tw-bg-opacity)); }

.focus-visible\:bg-blue-400\/15:focus-visible { background-color: rgba(58, =
136, 255, 0.15); }

.focus-visible\:bg-token-main-surface-secondary:focus-visible { background-=
color: var(--main-surface-secondary); }

.focus-visible\:bg-token-sidebar-surface-secondary:focus-visible { backgrou=
nd-color: var(--sidebar-surface-secondary); }

.focus-visible\:outline-none:focus-visible { outline: transparent solid 2px=
; outline-offset: 2px; }

.focus-visible\:outline-0:focus-visible { outline-width: 0px; }

.focus-visible\:outline-2:focus-visible { outline-width: 2px; }

.focus-visible\:outline-offset-\[-4px\]:focus-visible { outline-offset: -4p=
x; }

.focus-visible\:outline-black:focus-visible { outline-color: rgb(0, 0, 0); =
}

.focus-visible\:ring-0:focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 #0000); }

.focus-visible\:ring-2:focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-=
width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.focus-visible\:ring-token-text-quaternary:focus-visible { --tw-ring-color:=
 var(--text-quaternary); }

.focus-visible\:ring-token-text-secondary:focus-visible { --tw-ring-color: =
var(--text-secondary); }

.focus-visible\:ring-offset-1:focus-visible { --tw-ring-offset-width: 1px; =
}

.focus-visible\:ring-offset-2:focus-visible { --tw-ring-offset-width: 2px; =
}

.focus-visible\:ring-offset-transparent:focus-visible { --tw-ring-offset-co=
lor: transparent; }

.active\:scale-\[0\.9\]:active { --tw-scale-x: .9; --tw-scale-y: .9; transf=
orm: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw=
-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-sc=
ale-x)) scaleY(var(--tw-scale-y)); }

.active\:bg-black\/20:active { background-color: rgba(0, 0, 0, 0.2); }

.active\:bg-gray-100:active { --tw-bg-opacity: 1; background-color: rgb(236=
 236 236/var(--tw-bg-opacity)); }

.active\:bg-gray-700:active { --tw-bg-opacity: 1; background-color: rgb(66 =
66 66/var(--tw-bg-opacity)); }

.active\:bg-red-400:active { --tw-bg-opacity: 1; background-color: rgb(248 =
113 113/var(--tw-bg-opacity)); }

.active\:bg-red-500\/20:active { background-color: rgba(239, 68, 68, 0.2); =
}

.active\:text-white:active { --tw-text-opacity: 1; color: rgb(255 255 255/v=
ar(--tw-text-opacity)); }

.active\:opacity-50:active { opacity: 0.5; }

.active\:opacity-90:active { opacity: 0.9; }

@media (hover: hover) and (pointer: fine) {
  .enabled\:hover\:bg-blue-400\/20:hover:enabled { background-color: rgba(5=
8, 136, 255, 0.2); }
  .enabled\:hover\:bg-token-main-surface-secondary:hover:enabled { backgrou=
nd-color: var(--main-surface-secondary); }
  .enabled\:hover\:bg-token-sidebar-surface-secondary:hover:enabled { backg=
round-color: var(--sidebar-surface-secondary); }
}

.disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }

.disabled\:bg-\[\#D7D7D7\]:disabled { --tw-bg-opacity: 1; background-color:=
 rgb(215 215 215/var(--tw-bg-opacity)); }

.disabled\:bg-black:disabled { --tw-bg-opacity: 1; background-color: rgb(0 =
0 0/var(--tw-bg-opacity)); }

.disabled\:bg-green-600:disabled { --tw-bg-opacity: 1; background-color: rg=
b(16 163 127/var(--tw-bg-opacity)); }

.disabled\:bg-token-main-surface-tertiary:disabled { background-color: var(=
--main-surface-tertiary); }

.disabled\:bg-token-text-quaternary:disabled { background-color: var(--text=
-quaternary); }

.disabled\:bg-opacity-15:disabled { --tw-bg-opacity: .15; }

.disabled\:bg-opacity-\[0\.27\]:disabled { --tw-bg-opacity: .27; }

.disabled\:text-\[\#f4f4f4\]:disabled { --tw-text-opacity: 1; color: rgb(24=
4 244 244/var(--tw-text-opacity)); }

.disabled\:text-blue-400:disabled { --tw-text-opacity: 1; color: rgb(58 136=
 255/var(--tw-text-opacity)); }

.disabled\:text-token-border-medium:disabled { color: var(--border-medium);=
 }

.disabled\:text-token-text-quaternary:disabled { color: var(--text-quaterna=
ry); }

.disabled\:text-token-text-secondary:disabled { color: var(--text-secondary=
); }

.disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary);=
 }

.disabled\:opacity-30:disabled { opacity: 0.3; }

.disabled\:opacity-40:disabled { opacity: 0.4; }

.disabled\:opacity-50:disabled { opacity: 0.5; }

@media (hover: hover) and (pointer: fine) {
  .disabled\:hover\:bg-transparent:hover:disabled { background-color: trans=
parent; }
  .disabled\:hover\:bg-none:hover:disabled { background-image: none; }
  .disabled\:hover\:opacity-100:hover:disabled { opacity: 1; }
}

.group:focus-within .group-focus-within\:flex { display: flex; }

@media (hover: hover) and (pointer: fine) {
  .group\/dalle-image:hover .group-hover\/dalle-image\:visible, .group:hove=
r .group-hover\:visible { visibility: visible; }
  .group:hover .group-hover\:invisible { visibility: hidden; }
  .group\/file-tile:hover .group-hover\/file-tile\:block, .group:hover .gro=
up-hover\:block { display: block; }
  .group:hover .group-hover\:flex { display: flex; }
  .group:hover .group-hover\:hidden { display: none; }
  .group:hover .group-hover\:w-72 { width: 18rem; }
  .group\/footnote:hover .group-hover\/footnote\:border-token-main-surface-=
secondary { border-color: var(--main-surface-secondary); }
  .group:hover .group-hover\:border-t-\[\#0077FF\] { --tw-border-opacity: 1=
; border-top-color: rgb(0 119 255/var(--tw-border-opacity)); }
  .group\/dalle-image:hover .group-hover\/dalle-image\:bg-black\/70 { backg=
round-color: rgba(0, 0, 0, 0.7); }
  .group\/dalle-image:hover .group-hover\/dalle-image\:bg-transparent { bac=
kground-color: transparent; }
  .group:hover .group-hover\:bg-token-main-surface-secondary { background-c=
olor: var(--main-surface-secondary); }
  .group:hover .group-hover\:text-token-link { color: var(--link); }
  .group:hover .group-hover\:text-token-text-primary { color: var(--text-pr=
imary); }
  .group:hover .group-hover\:text-token-text-secondary { color: var(--text-=
secondary); }
  .group:hover .group-hover\:text-white { --tw-text-opacity: 1; color: rgb(=
255 255 255/var(--tw-text-opacity)); }
  .group\/nav-list:hover .group-hover\/nav-list\:underline { text-decoratio=
n-line: underline; }
  .group\/tldr:hover .group-hover\/tldr\:opacity-70 { opacity: 0.7; }
  .group:hover .group-hover\:opacity-100 { opacity: 1; }
  .group:hover .group-hover\:opacity-90 { opacity: 0.9; }
  .group:hover .group-hover\:grayscale-0 { --tw-grayscale: grayscale(0); fi=
lter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grays=
cale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sep=
ia) var(--tw-drop-shadow); }
}

.group.is-comment .group-\[\.is-comment\]\:bg-opacity-40 { --tw-bg-opacity:=
 .4; }

.has-\[strong\]\:mb-1:has(strong) { margin-bottom: 0.25rem; }

.group:has(:focus) .group-has-\[\:focus\]\:border-token-border-xheavy { bor=
der-color: var(--border-xheavy); }

.data-\[state\=3Dactive\]\:block[data-state=3D"active"] { display: block; }

.group[data-disabled] .group-data-\[disabled\]\:opacity-50 { opacity: 0.5; =
}

@container (min-width: 0px) {
  .\@\[0px\]\:hidden { display: none; }
}

@container (min-width: 42rem) {
  .\@2xl\:flex-row { flex-direction: row; }
  .\@2xl\:justify-between { justify-content: space-between; }
  .\@2xl\:text-start { text-align: start; }
}

@container (min-width: 150px) {
  .\@\[150px\]\:block { display: block; }
}

@container composer (min-width: 300px) {
  .\@\[300px\]\/composer\:flex { display: flex; }
}

@container composer (min-width: 310px) {
  .\@\[310px\]\/composer\:flex { display: flex; }
}

@container composer (min-width: 400px) {
  .\@\[400px\]\/composer\:flex { display: flex; }
}

@container (min-width: 700px) {
  .\@\[700px\]\:block { display: block; }
}

@container composer (min-width: 800px) {
  .\@\[800px\]\/composer\:flex { display: flex; }
}

.radix-disabled\:pointer-events-none[data-disabled] { pointer-events: none;=
 }

.radix-disabled\:pointer-events-auto[data-disabled] { pointer-events: auto;=
 }

.radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }

.radix-disabled\:cursor-not-allowed[data-disabled] { cursor: not-allowed; }

.radix-disabled\:bg-transparent[data-disabled] { background-color: transpar=
ent; }

.radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--tex=
t-tertiary); }

.radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }

@media (hover: hover) and (pointer: fine) {
  .radix-disabled\:hover\:bg-transparent:hover { background-color: transpar=
ent; }
}

.radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"] =
{ background-color: var(--main-surface-tertiary); }

.radix-state-active\:bg-white[data-state=3D"active"] { --tw-bg-opacity: 1; =
background-color: rgb(255 255 255/var(--tw-bg-opacity)); }

.radix-state-active\:text-token-text-primary[data-state=3D"active"] { color=
: var(--text-primary); }

.radix-state-active\:text-token-text-secondary[data-state=3D"active"] { col=
or: var(--text-secondary); }

.radix-state-checked\:border[data-state=3D"checked"] { border-width: 1px; }

.radix-state-checked\:border-green-500[data-state=3D"checked"] { --tw-borde=
r-opacity: 1; border-color: rgb(25 195 125/var(--tw-border-opacity)); }

.radix-state-checked\:border-token-text-tertiary[data-state=3D"checked"] { =
border-color: var(--text-tertiary); }

.radix-state-checked\:bg-black[data-state=3D"checked"] { --tw-bg-opacity: 1=
; background-color: rgb(0 0 0/var(--tw-bg-opacity)); }

.radix-state-checked\:bg-green-500[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgb(25 195 125/var(--tw-bg-opacity)); }

.radix-state-checked\:bg-green-600[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgb(16 163 127/var(--tw-bg-opacity)); }

.radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked"]=
 { background-color: var(--main-surface-primary); }

.radix-state-checked\:bg-token-text-primary[data-state=3D"checked"] { backg=
round-color: var(--text-primary); }

.radix-state-checked\:font-semibold[data-state=3D"checked"] { font-weight: =
600; }

.radix-state-checked\:text-token-main-surface-primary[data-state=3D"checked=
"] { color: var(--main-surface-primary); }

.radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { col=
or: var(--text-primary); }

.radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px rgba(0,0,0,.03); --tw-shadow-colored: =
0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0=
 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.focus-visible\:radix-state-checked\:ring-black[data-state=3D"checked"]:foc=
us-visible { --tw-ring-opacity: 1; --tw-ring-color: rgb(0 0 0/var(--tw-ring=
-opacity)); }

@keyframes sidebarHide {=20
  0% { opacity: 1; transform: translate(0px); }
  100% { opacity: 0; transform: translate(-100%); }
}

.radix-state-closed\:animate-sidebarHide[data-state=3D"closed"] { animation=
: 0.3s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running sidebarHide; =
}

@keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.radix-state-open\:animate-alertShow[data-state=3D"open"] { animation: 0.15=
s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running alertShow; }

@keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

.radix-state-open\:animate-contentShow[data-state=3D"open"] { animation: 0.=
15s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running contentShow; }

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cubi=
c-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }

@keyframes sidebarShow {=20
  0% { opacity: 0; transform: translate(-100%); }
  100% { opacity: 1; transform: translate(0px); }
}

.radix-state-open\:animate-sidebarShow[data-state=3D"open"] { animation: 0.=
3s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running sidebarShow; }

.radix-state-open\:bg-\[\#f5f5f5\][data-state=3D"open"] { --tw-bg-opacity: =
1; background-color: rgb(245 245 245/var(--tw-bg-opacity)); }

.radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] { b=
ackground-color: var(--main-surface-secondary); }

.radix-state-open\:text-token-text-primary[data-state=3D"open"] { color: va=
r(--text-primary); }

.radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color: =
var(--text-secondary); }

.radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { color: v=
ar(--text-tertiary); }

.group[data-state=3D"open"] .group-radix-state-open\:bg-token-main-surface-=
tertiary { background-color: var(--main-surface-tertiary); }

@keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-bottom\:animate-slideUpAndFade[data-side=3D"bottom"] { animatio=
n: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFa=
de; }

@keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translate(-1px); }
  100% { opacity: 1; transform: translate(0px); }
}

.radix-side-left\:animate-slideRightAndFade[data-side=3D"left"] { animation=
: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAnd=
Fade; }

@keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translate(1px); }
  100% { opacity: 1; transform: translate(0px); }
}

.radix-side-right\:animate-slideLeftAndFade[data-side=3D"right"] { animatio=
n: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAnd=
Fade; }

@keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideDownAndFade[data-side=3D"top"] { animation: 0=
.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade=
; }

.group-ui-open\:bg-token-sidebar-surface-secondary.group[data-headlessui-st=
ate~=3D"open"] { background-color: var(--sidebar-surface-secondary); }

.group:where([data-headlessui-state~=3D"open"]) .group-ui-open\:bg-token-si=
debar-surface-secondary { background-color: var(--sidebar-surface-secondary=
); }

@media (prefers-reduced-transparency: reduce) {
  .no-transparency\:backdrop-blur-none { --tw-backdrop-blur: blur(0); backd=
rop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-=
backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotat=
e) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-s=
aturate) var(--tw-backdrop-sepia); }
}

@media (hover: hover) and (pointer: fine) {
  .group:hover .can-hover\:group-hover\:flex { display: flex; }
  .group:hover .can-hover\:group-hover\:w-10 { width: 2.5rem; }
  .group:hover .can-hover\:group-hover\:from-token-sidebar-surface-secondar=
y { --tw-gradient-from: var(--sidebar-surface-secondary) var(--tw-gradient-=
from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-po=
sition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to)=
; }
  .group:hover .can-hover\:group-hover\:from-60\% { --tw-gradient-from-posi=
tion: 60%; }
}

.dark\:divide-gray-900:is(.dark *) > :not([hidden]) ~ :not([hidden]) { --tw=
-divide-opacity: 1; border-color: rgb(23 23 23/var(--tw-divide-opacity)); }

.dark\:divide-token-border-heavy:is(.dark *) > :not([hidden]) ~ :not([hidde=
n]) { border-color: var(--border-heavy); }

.dark\:border:is(.dark *) { border-width: 1px; }

.dark\:border-b:is(.dark *) { border-bottom-width: 1px; }

.dark\:border-black\/20:is(.dark *) { border-color: rgba(0, 0, 0, 0.2); }

.dark\:border-gray-300:is(.dark *) { --tw-border-opacity: 1; border-color: =
rgb(205 205 205/var(--tw-border-opacity)); }

.dark\:border-gray-500:is(.dark *) { --tw-border-opacity: 1; border-color: =
rgb(155 155 155/var(--tw-border-opacity)); }

.dark\:border-gray-600:is(.dark *) { --tw-border-opacity: 1; border-color: =
rgb(103 103 103/var(--tw-border-opacity)); }

.dark\:border-gray-700:is(.dark *) { --tw-border-opacity: 1; border-color: =
rgb(66 66 66/var(--tw-border-opacity)); }

.dark\:border-gray-800:is(.dark *) { --tw-border-opacity: 1; border-color: =
rgb(33 33 33/var(--tw-border-opacity)); }

.dark\:border-token-border-heavy:is(.dark *) { border-color: var(--border-h=
eavy); }

.dark\:border-token-border-medium:is(.dark *) { border-color: var(--border-=
medium); }

.dark\:border-token-border-xheavy:is(.dark *) { border-color: var(--border-=
xheavy); }

.dark\:border-token-border-xlight:is(.dark *) { border-color: var(--border-=
xlight); }

.dark\:border-token-main-surface-secondary:is(.dark *) { border-color: var(=
--main-surface-secondary); }

.dark\:border-token-text-secondary:is(.dark *) { border-color: var(--text-s=
econdary); }

.dark\:border-transparent:is(.dark *) { border-color: transparent; }

.dark\:border-white:is(.dark *) { --tw-border-opacity: 1; border-color: rgb=
(255 255 255/var(--tw-border-opacity)); }

.dark\:border-white\/10:is(.dark *) { border-color: rgba(255, 255, 255, 0.1=
); }

.dark\:border-white\/20:is(.dark *) { border-color: rgba(255, 255, 255, 0.2=
); }

.dark\:border-x-token-border-xheavy:is(.dark *) { border-left-color: var(--=
border-xheavy); border-right-color: var(--border-xheavy); }

.dark\:border-b-white:is(.dark *) { --tw-border-opacity: 1; border-bottom-c=
olor: rgb(255 255 255/var(--tw-border-opacity)); }

.dark\:bg-\[\#2A4A6D\]:is(.dark *) { --tw-bg-opacity: 1; background-color: =
rgb(42 74 109/var(--tw-bg-opacity)); }

.dark\:bg-\[\#EA8444\]:is(.dark *) { --tw-bg-opacity: 1; background-color: =
rgb(234 132 68/var(--tw-bg-opacity)); }

.dark\:bg-\[rgb\(33\,33\,33\,0\.9\)\]:is(.dark *) { background-color: rgba(=
33, 33, 33, 0.9); }

.dark\:bg-\[rgba\(255\,255\,255\,0\.04\)\]:is(.dark *) { background-color: =
rgba(255, 255, 255, 0.04); }

.dark\:bg-black:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(0 0=
 0/var(--tw-bg-opacity)); }

.dark\:bg-black\/50:is(.dark *) { background-color: rgba(0, 0, 0, 0.5); }

.dark\:bg-black\/80:is(.dark *) { background-color: rgba(0, 0, 0, 0.8); }

.dark\:bg-black\/85:is(.dark *) { background-color: rgba(0, 0, 0, 0.85); }

.dark\:bg-black\/90:is(.dark *) { background-color: rgba(0, 0, 0, 0.9); }

.dark\:bg-blue-1000:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb=
(2 133 255/var(--tw-bg-opacity)); }

.dark\:bg-gray-100:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
236 236 236/var(--tw-bg-opacity)); }

.dark\:bg-gray-50:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(2=
49 249 249/var(--tw-bg-opacity)); }

.dark\:bg-gray-500:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
155 155 155/var(--tw-bg-opacity)); }

.dark\:bg-gray-600:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
103 103 103/var(--tw-bg-opacity)); }

.dark\:bg-gray-700:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
66 66 66/var(--tw-bg-opacity)); }

.dark\:bg-gray-700\/50:is(.dark *) { background-color: rgba(66, 66, 66, 0.5=
); }

.dark\:bg-gray-700\/75:is(.dark *) { background-color: rgba(66, 66, 66, 0.7=
5); }

.dark\:bg-gray-750:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
47 47 47/var(--tw-bg-opacity)); }

.dark\:bg-gray-800:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
33 33 33/var(--tw-bg-opacity)); }

.dark\:bg-gray-900:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
23 23 23/var(--tw-bg-opacity)); }

.dark\:bg-gray-950:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(=
13 13 13/var(--tw-bg-opacity)); }

.dark\:bg-green-600:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb=
(16 163 127/var(--tw-bg-opacity)); }

.dark\:bg-green-600\/30:is(.dark *) { background-color: rgba(16, 163, 127, =
0.3); }

.dark\:bg-green-800:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb=
(27 93 74/var(--tw-bg-opacity)); }

.dark\:bg-orange-500:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(224 108 43/var(--tw-bg-opacity)); }

.dark\:bg-orange-800:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(163 64 10/var(--tw-bg-opacity)); }

.dark\:bg-red-500\/10:is(.dark *) { background-color: rgba(239, 68, 68, 0.1=
); }

.dark\:bg-red-600:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(2=
20 38 38/var(--tw-bg-opacity)); }

.dark\:bg-red-600\/30:is(.dark *) { background-color: rgba(220, 38, 38, 0.3=
); }

.dark\:bg-red-800:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(1=
53 27 27/var(--tw-bg-opacity)); }

.dark\:bg-token-main-surface-primary:is(.dark *) { background-color: var(--=
main-surface-primary); }

.dark\:bg-token-main-surface-secondary:is(.dark *) { background-color: var(=
--main-surface-secondary); }

.dark\:bg-token-main-surface-tertiary:is(.dark *) { background-color: var(-=
-main-surface-tertiary); }

.dark\:bg-token-text-tertiary:is(.dark *) { background-color: var(--text-te=
rtiary); }

.dark\:bg-transparent:is(.dark *) { background-color: transparent; }

.dark\:bg-white:is(.dark *) { --tw-bg-opacity: 1; background-color: rgb(255=
 255 255/var(--tw-bg-opacity)); }

.dark\:bg-white\/10:is(.dark *) { background-color: rgba(255, 255, 255, 0.1=
); }

.dark\:bg-yellow-400:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(255 198 87/var(--tw-bg-opacity)); }

.dark\:bg-yellow-500:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(234 179 8/var(--tw-bg-opacity)); }

.dark\:bg-yellow-600:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(202 138 4/var(--tw-bg-opacity)); }

.dark\:bg-yellow-900:is(.dark *) { --tw-bg-opacity: 1; background-color: rg=
b(146 114 1/var(--tw-bg-opacity)); }

.dark\:bg-opacity-10:is(.dark *) { --tw-bg-opacity: .1; }

.dark\:bg-opacity-20:is(.dark *) { --tw-bg-opacity: .2; }

.dark\:bg-opacity-30:is(.dark *) { --tw-bg-opacity: .3; }

.dark\:bg-opacity-50:is(.dark *) { --tw-bg-opacity: .5; }

.dark\:bg-opacity-60:is(.dark *) { --tw-bg-opacity: .6; }

.dark\:bg-opacity-70:is(.dark *) { --tw-bg-opacity: .7; }

.dark\:from-brand-blue-800\/15:is(.dark *) { --tw-gradient-from: rgba(0,102=
,222,.15) var(--tw-gradient-from-position); --tw-gradient-to: rgba(0,102,22=
2,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient=
-from),var(--tw-gradient-to); }

.dark\:from-gray-800:is(.dark *) { --tw-gradient-from: #212121 var(--tw-gra=
dient-from-position); --tw-gradient-to: rgba(33,33,33,0) var(--tw-gradient-=
to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradien=
t-to); }

.dark\:via-token-main-surface-primary:is(.dark *) { --tw-gradient-to: hsla(=
0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-=
gradient-from),var(--main-surface-primary) var(--tw-gradient-via-position),=
var(--tw-gradient-to); }

.dark\:via-white\/5:is(.dark *) { --tw-gradient-to: hsla(0,0%,100%,0) var(-=
-tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),hsl=
a(0,0%,100%,.05) var(--tw-gradient-via-position),var(--tw-gradient-to); }

.dark\:to-token-main-surface-primary:is(.dark *) { --tw-gradient-to: var(--=
main-surface-primary) var(--tw-gradient-to-position); }

.dark\:to-white\/15:is(.dark *) { --tw-gradient-to: hsla(0,0%,100%,.15) var=
(--tw-gradient-to-position); }

.dark\:stroke-brand-purple\/50:is(.dark *) { stroke: rgba(171, 104, 255, 0.=
5); }

.dark\:text-\[\#48AAFF\]:is(.dark *) { --tw-text-opacity: 1; color: rgb(72 =
170 255/var(--tw-text-opacity)); }

.dark\:text-\[\#B9B9B9\]:is(.dark *) { --tw-text-opacity: 1; color: rgb(185=
 185 185/var(--tw-text-opacity)); }

.dark\:text-\[\#D292FF\]:is(.dark *) { --tw-text-opacity: 1; color: rgb(210=
 146 255/var(--tw-text-opacity)); }

.dark\:text-\[var\(--text-secondary\)\]:is(.dark *) { color: var(--text-sec=
ondary); }

.dark\:text-black:is(.dark *) { --tw-text-opacity: 1; color: rgb(0 0 0/var(=
--tw-text-opacity)); }

.dark\:text-blue-400:is(.dark *) { --tw-text-opacity: 1; color: rgb(58 136 =
255/var(--tw-text-opacity)); }

.dark\:text-brand-purple-600:is(.dark *) { --tw-text-opacity: 1; color: rgb=
(113 95 222/var(--tw-text-opacity)); }

.dark\:text-gray-400:is(.dark *) { --tw-text-opacity: 1; color: rgb(180 180=
 180/var(--tw-text-opacity)); }

.dark\:text-gray-500:is(.dark *) { --tw-text-opacity: 1; color: rgb(155 155=
 155/var(--tw-text-opacity)); }

.dark\:text-gray-700:is(.dark *) { --tw-text-opacity: 1; color: rgb(66 66 6=
6/var(--tw-text-opacity)); }

.dark\:text-gray-800:is(.dark *) { --tw-text-opacity: 1; color: rgb(33 33 3=
3/var(--tw-text-opacity)); }

.dark\:text-green-200:is(.dark *) { --tw-text-opacity: 1; color: rgb(185 23=
8 188/var(--tw-text-opacity)); }

.dark\:text-green-400:is(.dark *) { --tw-text-opacity: 1; color: rgb(104 22=
2 122/var(--tw-text-opacity)); }

.dark\:text-orange-100:is(.dark *) { --tw-text-opacity: 1; color: rgb(254 2=
41 227/var(--tw-text-opacity)); }

.dark\:text-red-200:is(.dark *) { --tw-text-opacity: 1; color: rgb(254 202 =
202/var(--tw-text-opacity)); }

.dark\:text-token-main-surface-tertiary:is(.dark *) { color: var(--main-sur=
face-tertiary); }

.dark\:text-token-text-primary:is(.dark *) { color: var(--text-primary); }

.dark\:text-token-text-secondary:is(.dark *) { color: var(--text-secondary)=
; }

.dark\:text-token-text-tertiary:is(.dark *) { color: var(--text-tertiary); =
}

.dark\:text-white:is(.dark *) { --tw-text-opacity: 1; color: rgb(255 255 25=
5/var(--tw-text-opacity)); }

.dark\:text-yellow-100:is(.dark *) { --tw-text-opacity: 1; color: rgb(254 2=
49 195/var(--tw-text-opacity)); }

.dark\:text-yellow-400:is(.dark *) { --tw-text-opacity: 1; color: rgb(255 1=
98 87/var(--tw-text-opacity)); }

.dark\:opacity-60:is(.dark *) { opacity: 0.6; }

.dark\:shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.12\)\]:is(.dark *) { --tw-sha=
dow: 0 -4px 32px rgba(0,0,0,.12); --tw-shadow-colored: 0 -4px 32px var(--tw=
-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw=
-ring-shadow,0 0 #0000),var(--tw-shadow); }

.dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\]:is(.dark *) {=
 --tw-shadow: inset 0 0 0 1px hsla(0,0%,100%,.1); --tw-shadow-colored: inse=
t 0 0 0 1px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow=
,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.dark\:shadow-xl:is(.dark *) { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1)=
,0 8px 10px -6px rgba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(=
--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color); box-shadow: var(=
--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw=
-shadow); }

.dark\:backdrop-blur-lg:is(.dark *) { --tw-backdrop-blur: blur(16px); backd=
rop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-=
backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotat=
e) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-s=
aturate) var(--tw-backdrop-sepia); }

.placeholder\:dark\:text-white:is(.dark *)::placeholder { --tw-text-opacity=
: 1; color: rgb(255 255 255/var(--tw-text-opacity)); }

.dark\:before\:bg-gray-750\/50:is(.dark *)::before { background-color: rgba=
(47, 47, 47, 0.5); content: var(--tw-content); }

.dark\:after\:bg-\[Highlight\]:is(.dark *)::after { background-color: highl=
ight; content: var(--tw-content); }

.dark\:focus-within\:border-token-border-xheavy:focus-within:is(.dark *) { =
border-color: var(--border-xheavy); }

.dark\:focus-within\:ring-0:focus-within:is(.dark *) { --tw-ring-offset-sha=
dow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-o=
ffset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ri=
ng-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

@media (hover: hover) and (pointer: fine) {
  .dark\:hover\:border-gray-800:hover:is(.dark *) { --tw-border-opacity: 1;=
 border-color: rgb(33 33 33/var(--tw-border-opacity)); }
  .dark\:hover\:bg-\[\#1A416A\]:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgb(26 65 106/var(--tw-bg-opacity)); }
  .dark\:hover\:bg-gray-500\/10:hover:is(.dark *) { background-color: rgba(=
156, 156, 156, 0.1); }
  .dark\:hover\:bg-gray-600:hover:is(.dark *) { --tw-bg-opacity: 1; backgro=
und-color: rgb(103 103 103/var(--tw-bg-opacity)); }
  .dark\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; backgro=
und-color: rgb(66 66 66/var(--tw-bg-opacity)); }
  .dark\:hover\:bg-red-500\/15:hover:is(.dark *) { background-color: rgba(2=
39, 68, 68, 0.15); }
  .dark\:hover\:bg-token-main-surface-secondary:hover:is(.dark *) { backgro=
und-color: var(--main-surface-secondary); }
  .dark\:hover\:bg-token-main-surface-tertiary:hover:is(.dark *) { backgrou=
nd-color: var(--main-surface-tertiary); }
  .dark\:hover\:bg-token-text-primary:hover:is(.dark *) { background-color:=
 var(--text-primary); }
  .dark\:hover\:bg-token-text-tertiary:hover:is(.dark *) { background-color=
: var(--text-tertiary); }
  .dark\:hover\:bg-white\/10:hover:is(.dark *) { background-color: rgba(255=
, 255, 255, 0.1); }
  .dark\:hover\:bg-white\/20:hover:is(.dark *) { background-color: rgba(255=
, 255, 255, 0.2); }
  .dark\:hover\:bg-white\/5:hover:is(.dark *) { background-color: rgba(255,=
 255, 255, 0.05); }
  .hover\:dark\:bg-token-main-surface-tertiary:is(.dark *):hover { backgrou=
nd-color: var(--main-surface-tertiary); }
  .hover\:dark\:bg-white:is(.dark *):hover { --tw-bg-opacity: 1; background=
-color: rgb(255 255 255/var(--tw-bg-opacity)); }
  .hover\:dark\:bg-white\/10:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.1); }
  .dark\:hover\:bg-opacity-30:hover:is(.dark *) { --tw-bg-opacity: .3; }
  .hover\:dark\:text-token-main-surface-tertiary:is(.dark *):hover { color:=
 var(--main-surface-tertiary); }
}

.dark\:focus\:border-white:focus:is(.dark *) { --tw-border-opacity: 1; bord=
er-color: rgb(255 255 255/var(--tw-border-opacity)); }

.dark\:focus\:ring-white:focus:is(.dark *) { --tw-ring-opacity: 1; --tw-rin=
g-color: rgb(255 255 255/var(--tw-ring-opacity)); }

.dark\:focus-visible\:bg-token-main-surface-secondary:focus-visible:is(.dar=
k *) { background-color: var(--main-surface-secondary); }

.dark\:focus-visible\:outline-white:focus-visible:is(.dark *) { outline-col=
or: rgb(255, 255, 255); }

.focus-visible\:dark\:ring-token-main-surface-primary:is(.dark *):focus-vis=
ible { --tw-ring-color: var(--main-surface-primary); }

.dark\:active\:bg-gray-700:active:is(.dark *) { --tw-bg-opacity: 1; backgro=
und-color: rgb(66 66 66/var(--tw-bg-opacity)); }

.dark\:active\:bg-red-500\/20:active:is(.dark *) { background-color: rgba(2=
39, 68, 68, 0.2); }

.dark\:active\:bg-white\/10:active:is(.dark *) { background-color: rgba(255=
, 255, 255, 0.1); }

.disabled\:dark\:bg-green-600:is(.dark *):disabled { --tw-bg-opacity: 1; ba=
ckground-color: rgb(16 163 127/var(--tw-bg-opacity)); }

.disabled\:dark\:bg-token-text-quaternary:is(.dark *):disabled { background=
-color: var(--text-quaternary); }

.disabled\:dark\:bg-token-text-tertiary:is(.dark *):disabled { background-c=
olor: var(--text-tertiary); }

.disabled\:dark\:bg-opacity-15:is(.dark *):disabled { --tw-bg-opacity: .15;=
 }

.dark\:disabled\:text-token-main-surface-secondary:disabled:is(.dark *) { c=
olor: var(--main-surface-secondary); }

.dark\:radix-disabled\:bg-transparent[data-disabled]:is(.dark *) { backgrou=
nd-color: transparent; }

.dark\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"]:is(.dark *) { background-color: var(--main-surface-tertiary); }

.dark\:radix-state-checked\:border-green-600[data-state=3D"checked"]:is(.da=
rk *) { --tw-border-opacity: 1; border-color: rgb(16 163 127/var(--tw-borde=
r-opacity)); }

.dark\:radix-state-checked\:bg-green-600[data-state=3D"checked"]:is(.dark *=
) { --tw-bg-opacity: 1; background-color: rgb(16 163 127/var(--tw-bg-opacit=
y)); }

.focus-visible\:dark\:radix-state-checked\:ring-green-600[data-state=3D"che=
cked"]:is(.dark *):focus-visible { --tw-ring-opacity: 1; --tw-ring-color: r=
gb(16 163 127/var(--tw-ring-opacity)); }

.dark\:radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open=
"]:is(.dark *) { background-color: var(--main-surface-secondary); }

.dark\:radix-state-open\:text-gray-400[data-state=3D"open"]:is(.dark *) { -=
-tw-text-opacity: 1; color: rgb(180 180 180/var(--tw-text-opacity)); }

@media not all and (min-width: 1024px) {
  .max-lg\:bottom-full { bottom: 100%; }
  .max-lg\:hidden { display: none; }
  .group:focus-within .group-focus-within\:max-lg\:flex-col-reverse { flex-=
direction: column-reverse; }
}

@media not all and (min-width: 768px) {
  .max-md\:hidden { display: none; }
  .max-md\:\!w-0 { width: 0px !important; }
}

@media not all and (min-width: 640px) {
  .max-sm\:mb-3 { margin-bottom: 0.75rem; }
  .max-sm\:mb-4 { margin-bottom: 1rem; }
  .max-sm\:hidden { display: none; }
}

@media (min-width: 480px) {
  .xs\:\!max-w-sm { max-width: 24rem !important; }
  .xs\:columns-2 { column-count: 2; }
}

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:inset-x-4 { left: 1rem; right: 1rem; }
  .sm\:bottom-snc-1 { bottom: var(--snc-1); }
  [dir=3D"ltr"] .sm\:left-1\/2 { left: 50%; }
  [dir=3D"rtl"] .sm\:left-1\/2 { right: 50%; }
  [dir=3D"ltr"] .sm\:left-16 { left: 4rem; }
  [dir=3D"rtl"] .sm\:left-16 { right: 4rem; }
  [dir=3D"ltr"] .sm\:left-6 { left: 1.5rem; }
  [dir=3D"rtl"] .sm\:left-6, [dir=3D"ltr"] .sm\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .sm\:right-6 { left: 1.5rem; }
  .sm\:top-6 { top: 1.5rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-16 { margin-left: 4rem; margin-right: 4rem; }
  .sm\:-mt-12 { margin-top: -3rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-2\.5 { margin-bottom: 0.625rem; }
  .sm\:mb-3 { margin-bottom: 0.75rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mb-6 { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .sm\:ml-7 { margin-left: 1.75rem; }
  [dir=3D"rtl"] .sm\:ml-7 { margin-right: 1.75rem; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:mt-auto { margin-top: auto; }
  .sm\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  .sm\:hidden { display: none; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-32 { height: 8rem; }
  .sm\:h-\[172px\] { height: 172px; }
  .sm\:h-full { height: 100%; }
  .sm\:h-snc-input-height { height: var(--snc-input-height); }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-32 { width: 8rem; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[calc\(\(100\%-1rem\)\/4\)\] { width: calc(25% - 0.25rem); }
  .sm\:w-\[calc\(100cqw-62px\)\] { width: calc(100cqw - 62px); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[552px\] { max-width: 552px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grow { flex-grow: 1; }
  .sm\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-1 { gap: 0.25rem; }
  .sm\:gap-2 { gap: 0.5rem; }
  .sm\:gap-2\.5 { gap: 0.625rem; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-4 { gap: 1rem; }
  .sm\:gap-6 { gap: 1.5rem; }
  .sm\:gap-x-16 { column-gap: 4rem; }
  .sm\:gap-x-2 { column-gap: 0.5rem; }
  .sm\:gap-x-2\.5 { column-gap: 0.625rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:gap-y-2 { row-gap: 0.5rem; }
  .sm\:gap-y-4 { row-gap: 1rem; }
  .sm\:gap-y-5 { row-gap: 1.25rem; }
  .sm\:overflow-hidden { overflow: hidden; }
  .sm\:rounded-full { border-radius: 9999px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  [dir=3D"ltr"] .sm\:rounded-bl-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-bl-xl, [dir=3D"ltr"] .sm\:rounded-br-xl { bord=
er-bottom-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-br-xl { border-bottom-left-radius: 0.75rem; }
  [dir=3D"ltr"] .sm\:rounded-tl-xl { border-top-left-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tl-xl, [dir=3D"ltr"] .sm\:rounded-tr-xl { bord=
er-top-right-radius: 0.75rem; }
  [dir=3D"rtl"] .sm\:rounded-tr-xl { border-top-left-radius: 0.75rem; }
  .sm\:border-none { border-style: none; }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-10 { padding: 2.5rem; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .sm\:px-snc-results-padding { padding-left: var(--snc-results-padding); p=
adding-right: var(--snc-results-padding); }
  .sm\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .sm\:py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }
  .sm\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .sm\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-10 { padding-bottom: 2.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pb-8 { padding-bottom: 2rem; }
  [dir=3D"ltr"] .sm\:pl-3 { padding-left: 0.75rem; }
  [dir=3D"rtl"] .sm\:pl-3 { padding-right: 0.75rem; }
  [dir=3D"ltr"] .sm\:pl-5 { padding-left: 1.25rem; }
  [dir=3D"rtl"] .sm\:pl-5 { padding-right: 1.25rem; }
  [dir=3D"ltr"] .sm\:pl-\[3\.25rem\] { padding-left: 3.25rem; }
  [dir=3D"rtl"] .sm\:pl-\[3\.25rem\] { padding-right: 3.25rem; }
  [dir=3D"ltr"] .sm\:pr-2 { padding-right: 0.5rem; }
  [dir=3D"rtl"] .sm\:pr-2 { padding-left: 0.5rem; }
  [dir=3D"ltr"] .sm\:pr-5 { padding-right: 1.25rem; }
  [dir=3D"rtl"] .sm\:pr-5 { padding-left: 1.25rem; }
  .sm\:pt-12 { padding-top: 3rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  .snc .sm\:text-sm { font-size: 0.9rem; line-height: 1.4; }
  .snc .sm\:text-base { font-size: 1rem; }
  .snc .sm\:text-2xl { font-size: 1.5rem; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}

@media (min-width: 768px) {
  .md\:sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height:=
 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; whi=
te-space: nowrap; width: 1px; }
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:absolute { position: absolute; }
  .md\:bottom-4 { bottom: 1rem; }
  [dir=3D"ltr"] .md\:left-\[-250px\] { left: -250px; }
  [dir=3D"rtl"] .md\:left-\[-250px\] { right: -250px; }
  [dir=3D"ltr"] .md\:right-12 { right: 3rem; }
  [dir=3D"rtl"] .md\:right-12 { left: 3rem; }
  [dir=3D"ltr"] .md\:right-6 { right: 1.5rem; }
  [dir=3D"rtl"] .md\:right-6 { left: 1.5rem; }
  .md\:top-6 { top: 1.5rem; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-\[5\.75rem\] { top: 5.75rem; }
  .md\:top-header-height { top: 3.5rem; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-2 { margin-bottom: 0.5rem; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:mb-6 { margin-bottom: 1.5rem; }
  .md\:mb-8 { margin-bottom: 2rem; }
  [dir=3D"ltr"] .md\:ml-0 { margin-left: 0px; }
  [dir=3D"rtl"] .md\:ml-0 { margin-right: 0px; }
  [dir=3D"ltr"] .md\:ml-8 { margin-left: 2rem; }
  [dir=3D"rtl"] .md\:ml-8 { margin-right: 2rem; }
  [dir=3D"ltr"] .md\:ml-\[-8px\] { margin-left: -8px; }
  [dir=3D"rtl"] .md\:ml-\[-8px\] { margin-right: -8px; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:mt-7 { margin-top: 1.75rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:mt-px { margin-top: 1px; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:aspect-\[140\/67\] { aspect-ratio: 140 / 67; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:h-\[30rem\] { height: 30rem; }
  .md\:h-header-height { height: 3.5rem; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[20rem\] { min-height: 20rem; }
  .md\:min-h-\[30rem\] { min-height: 30rem; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[720px\] { width: 720px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[680px\] { min-width: 680px; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-5xl { max-width: 64rem; }
  .md\:max-w-96 { max-width: 24rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:shrink { flex-shrink: 1; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:translate-y-\[30px\] { --tw-translate-y: 30px; transform: translate(=
var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(=
var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(=
var(--tw-scale-y)); }
  .md\:columns-3 { column-count: 3; }
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-1 { grid-template-rows: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_20px\] { grid-template-rows: m=
inmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-row-reverse { flex-direction: row-reverse; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-center { align-items: center; }
  .md\:justify-center { justify-content: center; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-0 { gap: 0px; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-5 { gap: 1.25rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:self-end { align-self: flex-end; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  [dir=3D"ltr"] .md\:border-l { border-left-width: 1px; }
  [dir=3D"rtl"] .md\:border-l, [dir=3D"ltr"] .md\:border-r { border-right-w=
idth: 1px; }
  [dir=3D"rtl"] .md\:border-r { border-left-width: 1px; }
  [dir=3D"ltr"] .md\:border-r-0 { border-right-width: 0px; }
  [dir=3D"rtl"] .md\:border-r-0 { border-left-width: 0px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgb(236 236 =
236/var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  [dir=3D"ltr"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  [dir=3D"rtl"] .md\:bg-vert-light-gradient { background-image: linear-grad=
ient(-180deg, rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-20 { padding: 5rem; }
  .md\:p-4 { padding: 1rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-20 { padding-left: 5rem; padding-right: 5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-0 { padding-bottom: 0px; padding-top: 0px; }
  .md\:py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }
  .md\:py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }
  .md\:py-16 { padding-bottom: 4rem; padding-top: 4rem; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-10 { padding-bottom: 2.5rem; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-6 { padding-bottom: 1.5rem; }
  .md\:pb-9 { padding-bottom: 2.25rem; }
  [dir=3D"ltr"] .md\:pl-2 { padding-left: 0.5rem; }
  [dir=3D"rtl"] .md\:pl-2 { padding-right: 0.5rem; }
  [dir=3D"ltr"] .md\:pl-4 { padding-left: 1rem; }
  [dir=3D"rtl"] .md\:pl-4 { padding-right: 1rem; }
  [dir=3D"ltr"] .md\:pl-6 { padding-left: 1.5rem; }
  [dir=3D"rtl"] .md\:pl-6 { padding-right: 1.5rem; }
  [dir=3D"ltr"] .md\:pr-3 { padding-right: 0.75rem; }
  [dir=3D"rtl"] .md\:pr-3 { padding-left: 0.75rem; }
  [dir=3D"ltr"] .md\:pr-8 { padding-right: 2rem; }
  [dir=3D"rtl"] .md\:pr-8 { padding-left: 2rem; }
  .md\:ps-0 { padding-inline-start: 0px; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:pt-\[4\.5rem\] { padding-top: 4.5rem; }
  [dir=3D"ltr"] .md\:text-left { text-align: left; }
  [dir=3D"rtl"] .md\:text-left { text-align: right; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:text-xs { font-size: 0.75rem; line-height: 1rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .snc .md\:text-xs { font-size: 0.825rem; line-height: 1.4; }
  .snc .md\:text-base { font-size: 1rem; }
  .snc .md\:text-lg { font-size: 1.125rem; }
  .snc .md\:text-2xl { font-size: 1.5rem; }
  .snc .md\:text-3xl { font-size: 1.875rem; }
  [dir=3D"ltr"] .md\:first\:ml-0:first-child { margin-left: 0px; }
  [dir=3D"rtl"] .md\:first\:ml-0:first-child { margin-right: 0px; }
  [dir=3D"ltr"] .md\:first\:rounded-bl-xl:first-child { border-bottom-left-=
radius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-bl-xl:first-child { border-bottom-right=
-radius: 0.75rem; }
  [dir=3D"ltr"] .md\:first\:rounded-tl-xl:first-child { border-top-left-rad=
ius: 0.75rem; }
  [dir=3D"rtl"] .md\:first\:rounded-tl-xl:first-child { border-top-right-ra=
dius: 0.75rem; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  [dir=3D"ltr"] .md\:last\:mr-0:last-child { margin-right: 0px; }
  [dir=3D"rtl"] .md\:last\:mr-0:last-child { margin-left: 0px; }
  [dir=3D"ltr"] .md\:last\:rounded-br-xl:last-child { border-bottom-right-r=
adius: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-br-xl:last-child { border-bottom-left-ra=
dius: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:rounded-tr-xl:last-child { border-top-right-radi=
us: 0.75rem; }
  [dir=3D"rtl"] .md\:last\:rounded-tr-xl:last-child { border-top-left-radiu=
s: 0.75rem; }
  [dir=3D"ltr"] .md\:last\:border-r:last-child { border-right-width: 1px; }
  [dir=3D"rtl"] .md\:last\:border-r:last-child { border-left-width: 1px; }
  @media (hover: hover) and (pointer: fine) {
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(=
249 249 249/var(--tw-bg-opacity)); }
}
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .md\:dark\:border-gray-700:is(.dark *) { --tw-border-opacity: 1; border-c=
olor: rgb(66 66 66/var(--tw-border-opacity)); }
  .md\:dark\:border-transparent:is(.dark *) { border-color: transparent; }
  .dark\:md\:bg-transparent:is(.dark *) { background-color: transparent; }
  @media (hover: hover) and (pointer: fine) {
  .dark\:md\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgb(66 66 66/var(--tw-bg-opacity)); }
}
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:relative { position: relative; }
  .lg\:bottom-0 { bottom: 0px; }
  .lg\:bottom-3 { bottom: 0.75rem; }
  .lg\:bottom-8 { bottom: 2rem; }
  .lg\:end-3 { inset-inline-end: 0.75rem; }
  [dir=3D"ltr"] .lg\:left-0 { left: 0px; }
  [dir=3D"rtl"] .lg\:left-0 { right: 0px; }
  [dir=3D"ltr"] .lg\:left-\[-300px\] { left: -300px; }
  [dir=3D"rtl"] .lg\:left-\[-300px\] { right: -300px; }
  .lg\:top-full { top: 100%; }
  .lg\:-mx-8 { margin-left: -2rem; margin-right: -2rem; }
  .lg\:mx-auto { margin-left: auto; margin-right: auto; }
  [dir=3D"ltr"] .lg\:ml-8 { margin-left: 2rem; }
  [dir=3D"rtl"] .lg\:ml-8 { margin-right: 2rem; }
  .lg\:mt-12 { margin-top: 3rem; }
  .lg\:mt-9 { margin-top: 2.25rem; }
  .lg\:block { display: block; }
  .lg\:flex { display: flex; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: 9rem; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-\[300px\] { width: 300px; }
  .lg\:w-auto { width: auto; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-2xl { max-width: 42rem; }
  .lg\:max-w-52 { max-width: 13rem; }
  .lg\:max-w-\[40rem\] { max-width: 40rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[800px\] { max-width: 800px; }
  .lg\:max-w-\[896px\] { max-width: 896px; }
  .lg\:max-w-md { max-width: 28rem; }
  .lg\:max-w-none { max-width: none; }
  .lg\:max-w-sm { max-width: 24rem; }
  .lg\:translate-y-0 { --tw-translate-y: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:justify-center { justify-content: center; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-6 { gap: 1.5rem; }
  .lg\:gap-x-3 { column-gap: 0.75rem; }
  .lg\:gap-y-2 { row-gap: 0.5rem; }
  .lg\:gap-y-2\.5 { row-gap: 0.625rem; }
  .lg\:rounded-lg { border-radius: 0.5rem; }
  .lg\:rounded-none { border-radius: 0px; }
  .lg\:border { border-width: 1px; }
  .lg\:border-0 { border-width: 0px; }
  .lg\:border-b-0 { border-bottom-width: 0px; }
  [dir=3D"ltr"] .lg\:border-l { border-left-width: 1px; }
  [dir=3D"rtl"] .lg\:border-l, [dir=3D"ltr"] .lg\:border-r { border-right-w=
idth: 1px; }
  [dir=3D"rtl"] .lg\:border-r { border-left-width: 1px; }
  .lg\:p-0 { padding: 0px; }
  .lg\:p-6 { padding: 1.5rem; }
  .lg\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .lg\:px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .lg\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .lg\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .lg\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .lg\:py-\[18px\] { padding-bottom: 18px; padding-top: 18px; }
  [dir=3D"ltr"] .lg\:pl-4 { padding-left: 1rem; }
  [dir=3D"rtl"] .lg\:pl-4 { padding-right: 1rem; }
  [dir=3D"ltr"] .lg\:pr-0 { padding-right: 0px; }
  [dir=3D"rtl"] .lg\:pr-0 { padding-left: 0px; }
  [dir=3D"ltr"] .lg\:pr-10 { padding-right: 2.5rem; }
  [dir=3D"rtl"] .lg\:pr-10 { padding-left: 2.5rem; }
  [dir=3D"ltr"] .lg\:pr-4 { padding-right: 1rem; }
  [dir=3D"rtl"] .lg\:pr-4 { padding-left: 1rem; }
  .lg\:pt-32 { padding-top: 8rem; }
  .lg\:pt-8 { padding-top: 2rem; }
  [dir=3D"ltr"] .lg\:text-left { text-align: left; }
  [dir=3D"rtl"] .lg\:text-left { text-align: right; }
  .lg\:text-\[22px\] { font-size: 22px; }
}

@media (min-width: 1200px) {
  .min-\[1200px\]\:hidden { display: none; }
}

@media (min-width: 1280px) {
  [dir=3D"ltr"] .xl\:left-\[-350px\] { left: -350px; }
  [dir=3D"rtl"] .xl\:left-\[-350px\] { right: -350px; }
  .xl\:min-h-44 { min-height: 11rem; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-64 { max-width: 16rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:gap-2 { gap: 0.5rem; }
  .xl\:gap-x-2 { column-gap: 0.5rem; }
  .xl\:gap-x-2\.5 { column-gap: 0.625rem; }
  .xl\:gap-y-2 { row-gap: 0.5rem; }
  .xl\:gap-y-2\.5 { row-gap: 0.625rem; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:pt-10 { padding-top: 2.5rem; }
  .xl\:text-\[14px\] { font-size: 14px; }
}

@media (min-width: 1536px) {
  [dir=3D"ltr"] .\32 xl\:left-\[-400px\] { left: -400px; }
  [dir=3D"rtl"] .\32 xl\:left-\[-400px\] { right: -400px; }
  .\32 xl\:w-\[400px\] { width: 400px; }
  .\32 xl\:max-w-\[800px\] { max-width: 800px; }
  .\32 xl\:pt-12 { padding-top: 3rem; }
  .\32 xl\:text-xl { line-height: 1.75rem; }
  .\32 xl\:text-xl, .snc .\32 xl\:text-xl { font-size: 1.25rem; }
}

.ltr\:right-0:where([dir=3D"ltr"], [dir=3D"ltr"] *) { right: 0px; }

.ltr\:mr-auto:where([dir=3D"ltr"], [dir=3D"ltr"] *) { margin-right: auto; }

.ltr\:-translate-x-1\/2:where([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-transl=
ate-x: -50%; transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.ltr\:translate-x-0:where([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-=
x: 0px; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) r=
otate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scal=
eX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.ltr\:translate-x-0\.5:where([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-transla=
te-x: .125rem; transform: translate(var(--tw-translate-x),var(--tw-translat=
e-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y=
)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.ltr\:-rotate-90:where([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-rotate: -90de=
g; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate=
(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(va=
r(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.ltr\:bg-gradient-to-l:where([dir=3D"ltr"], [dir=3D"ltr"] *) { background-i=
mage: linear-gradient(to left,var(--tw-gradient-stops)); }

.ltr\:radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"]:whe=
re([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 13px; transform: tra=
nslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)=
) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) =
scaleY(var(--tw-scale-y)); }

.ltr\:radix-state-checked\:translate-x-\[14px\][data-state=3D"checked"]:whe=
re([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 14px; transform: tra=
nslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)=
) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) =
scaleY(var(--tw-scale-y)); }

.ltr\:radix-state-checked\:translate-x-\[24px\][data-state=3D"checked"]:whe=
re([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 24px; transform: tra=
nslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)=
) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) =
scaleY(var(--tw-scale-y)); }

.rtl\:left-0:where([dir=3D"rtl"], [dir=3D"rtl"] *) { left: 0px; }

.rtl\:ml-auto:where([dir=3D"rtl"], [dir=3D"rtl"] *) { margin-left: auto; }

.rtl\:-translate-x-0:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate=
-x: -0px; transform: translate(var(--tw-translate-x),var(--tw-translate-y))=
 rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) sc=
aleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:-translate-x-0\.5:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-transl=
ate-x: -.125rem; transform: translate(var(--tw-translate-x),var(--tw-transl=
ate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew=
-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:translate-x-1\/2:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-transla=
te-x: 50%; transform: translate(var(--tw-translate-x),var(--tw-translate-y)=
) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) s=
caleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:rotate-90:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-rotate: 90deg;=
 transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(v=
ar(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(=
--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:-scale-x-100:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-scale-x: -1=
; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(=
var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var=
(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:items-start:where([dir=3D"rtl"], [dir=3D"rtl"] *) { align-items: flex=
-start; }

.rtl\:bg-gradient-to-r:where([dir=3D"rtl"], [dir=3D"rtl"] *) { background-i=
mage: linear-gradient(to right,var(--tw-gradient-stops)); }

.rtl\:radix-state-checked\:translate-x-\[-13px\][data-state=3D"checked"]:wh=
ere([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -13px; transform: t=
ranslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotat=
e)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.rtl\:radix-state-checked\:translate-x-\[-14px\][data-state=3D"checked"]:wh=
ere([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -14px; transform: t=
ranslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotat=
e)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.rtl\:radix-state-checked\:translate-x-\[-24px\][data-state=3D"checked"]:wh=
ere([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -24px; transform: t=
ranslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotat=
e)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.\[\&\&\]\:text-black.\[\&\&\]\:text-black { --tw-text-opacity: 1; color: r=
gb(0 0 0/var(--tw-text-opacity)); }

.\[\&\&\]\:underline.\[\&\&\]\:underline { text-decoration-line: underline;=
 }

@media (hover: hover) and (pointer: fine) {
  .\[\&\&\]\:hover\:text-black:hover.\[\&\&\]\:hover\:text-black:hover { --=
tw-text-opacity: 1; color: rgb(0 0 0/var(--tw-text-opacity)); }
}

.\[\&\&\]\:dark\:text-white:is(.dark *).\[\&\&\]\:dark\:text-white:is(.dark=
 *) { --tw-text-opacity: 1; color: rgb(255 255 255/var(--tw-text-opacity));=
 }

@media (hover: hover) and (pointer: fine) {
  .\[\&\&\]\:hover\:dark\:text-white:is(.dark *):hover.\[\&\&\]\:hover\:dar=
k\:text-white:is(.dark *):hover { --tw-text-opacity: 1; color: rgb(255 255 =
255/var(--tw-text-opacity)); }
}

.\[\&\:\:-webkit-search-cancel-button\]\:hidden::-webkit-search-cancel-butt=
on { display: none; }

.\[\&\:not\(\:first-child\)\]\:has-\[strong\]\:mt-3:has(strong):not(:first-=
child) { margin-top: 0.75rem; }

.\[\&\:not\(\:has\(strong\)\)\]\:mb-3:not(:has(strong)) { margin-bottom: 0.=
75rem; }

.\[\&\>div\:nth-child\(2\)\]\:overflow-y-hidden > div:nth-child(2) { overfl=
ow-y: hidden; }

.\[\&_svg\]\:h-full svg { height: 100%; }

.\[\&_svg\]\:w-full svg { width: 100%; }

.\[\&_tr\:last-child\]\:border-b-0 tr:last-child { border-bottom-width: 0px=
; }

.group\/conversation-turn:hover .\[\.group\\\/conversation-turn\:hover_\&\]=
\:block { display: block; }

.text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: 1.25rem; }

tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-width: 0px=
; }

tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-50 =
{ opacity: 0.5; }

code, pre { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Co=
nsolas, "Liberation Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; hyphens: none; line-height: 1.5; tab-size:=
 4; white-space: pre; word-break: normal; word-spacing: normal; }

[dir=3D"ltr"] code.hljs, [dir=3D"ltr"] code[class*=3D"language-"], [dir=3D"=
ltr"] pre[class*=3D"language-"] { text-align: left; }

[dir=3D"rtl"] code.hljs, [dir=3D"rtl"] code[class*=3D"language-"], [dir=3D"=
rtl"] pre[class*=3D"language-"] { text-align: right; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

.dark code.hljs, .dark code[class*=3D"language-"], .dark pre[class*=3D"lang=
uage-"] { color: rgb(255, 255, 255); }

.dark .hljs-comment { color: rgba(255, 255, 255, 0.5); }

.dark .hljs-meta { color: rgba(255, 255, 255, 0.6); }

.dark .hljs-built_in, .dark .hljs-class .hljs-title { color: rgb(233, 149, =
12); }

.dark .hljs-doctag, .dark .hljs-formula, .dark .hljs-keyword, .dark .hljs-l=
iteral { color: rgb(46, 149, 211); }

.dark .hljs-addition, .dark .hljs-attribute, .dark .hljs-meta-string, .dark=
 .hljs-regexp, .dark .hljs-string { color: rgb(0, 166, 125); }

.dark .hljs-attr, .dark .hljs-number, .dark .hljs-selector-attr, .dark .hlj=
s-selector-class, .dark .hljs-selector-pseudo, .dark .hljs-template-variabl=
e, .dark .hljs-type, .dark .hljs-variable { color: rgb(223, 48, 121); }

.dark .hljs-bullet, .dark .hljs-link, .dark .hljs-selector-id, .dark .hljs-=
symbol, .dark .hljs-title { color: rgb(242, 44, 61); }

.light code.hljs, .light code[class*=3D"language-"], .light pre[class*=3D"l=
anguage-"] { color: rgb(56, 58, 66); }

.light .hljs-comment, .light .hljs-quote { color: rgb(160, 161, 167); font-=
style: italic; }

.light .hljs-doctag, .light .hljs-formula, .light .hljs-keyword { color: rg=
b(166, 38, 164); }

.light .hljs-deletion, .light .hljs-name, .light .hljs-section, .light .hlj=
s-selector-tag, .light .hljs-subst { color: rgb(228, 86, 73); }

.light .hljs-literal { color: rgb(1, 132, 187); }

.light .hljs-addition, .light .hljs-attribute, .light .hljs-meta-string, .l=
ight .hljs-regexp, .light .hljs-string { color: rgb(80, 161, 79); }

.light .hljs-built_in, .light .hljs-class .hljs-title { color: rgb(193, 132=
, 1); }

.light .hljs-attr, .light .hljs-number, .light .hljs-selector-attr, .light =
.hljs-selector-class, .light .hljs-selector-pseudo, .light .hljs-template-v=
ariable, .light .hljs-type, .light .hljs-variable { color: rgb(152, 104, 1)=
; }

.light .hljs-bullet, .light .hljs-link, .light .hljs-meta, .light .hljs-sel=
ector-id, .light .hljs-symbol, .light .hljs-title { color: rgb(64, 120, 242=
); }

.light .hljs-emphasis { font-style: italic; }

.light .hljs-strong { font-weight: 700; }

.light .hljs-link { text-decoration: underline; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.PopoverContent { z-index: 1000; }

.react-select-container input:focus { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 #0000); }

.react-select-container .react-select__control { --tw-border-opacity: 1; al=
ign-items: flex-start; border-color: rgb(236 236 236/var(--tw-border-opacit=
y)); border-radius: 0.5rem; font-size: 0.875rem; height: 192px; line-height=
: 1.25rem; min-height: 192px; overflow: auto; padding: 0.5rem; }

.snc .react-select-container .react-select__control { font-size: 0.9rem; li=
ne-height: 1.4; }

@media (hover: hover) and (pointer: fine) {
  .react-select-container .react-select__control:hover { --tw-border-opacit=
y: 1; border-color: rgb(227 227 227/var(--tw-border-opacity)); }
}

.react-select-container .react-select__control:is(.dark *) { --tw-bg-opacit=
y: 1; background-color: rgb(23 23 23/var(--tw-bg-opacity)); border-color: r=
gba(255, 255, 255, 0.1); }

@media (hover: hover) and (pointer: fine) {
  .react-select-container .react-select__control:is(.dark *):hover { border=
-color: rgba(255, 255, 255, 0.2); }
}

.react-select-container.react-select--invalid .react-select__control { --tw=
-border-opacity: 1; border-color: rgb(239 68 68/var(--tw-border-opacity)); =
}

.react-select-container.react-select--invalid .react-select__control:is(.da=
rk *) { --tw-border-opacity: 1; border-color: rgb(239 68 68/var(--tw-border=
-opacity)); }

.react-select-container .react-select__placeholder { padding-left: 0.5rem; =
padding-right: 0.5rem; }

.react-select-container .react-select__input-container { color: var(--text-=
secondary); padding-left: 0.5rem; padding-right: 0.5rem; }

.react-select-container .react-select__input { height: 2rem; }

.react-select-container .react-select__control--is-focused { --tw-ring-offs=
et-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-=
ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(-=
-tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-off=
set-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); --tw-border-o=
pacity: 1 !important; border-color: rgb(227 227 227/var(--tw-border-opacity=
)) !important; }

.react-select-container .react-select__control--is-focused:is(.dark *) { bo=
rder-color: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: 0px; }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: tran=
sparent; margin: 0px; }

.react-select-container .react-select__multi-value__label { padding: 0px; }

#intercom-container { display: none; }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/conversation-small-o3h1ik6j.css

@charset "utf-8";

@keyframes _add-top-shadow_9ia9b_1 {=20
  0% { border-bottom: 1px solid transparent; }
  1%, 100% { border-bottom: 1px solid var(--border-sharp); }
}

._leadingBar_9ia9b_1 { animation: auto linear 0s 1 normal both running _add=
-top-shadow_9ia9b_1; }

._leadingBarScrollAnimation_9ia9b_17 { animation-timeline: scroll(); }

._primary_9ia9b_21 { background-color: var(--bar-background-color,var(--mai=
n-surface-primary)); }

._prosemirror-parent_15ceg_1 .ProseMirror[contenteditable] { outline: trans=
parent solid 0px; outline-offset: 2px; }

._prosemirror-parent_15ceg_1 .ProseMirror { overflow-wrap: break-word; font=
-variant-ligatures: none; margin-bottom: 0.5rem; margin-top: 0.5rem; paddin=
g-left: 0px; padding-right: 0px; white-space: break-spaces; }

._prosemirror-parent_15ceg_1.ProseMirror br { line-height: normal; }

._prosemirror-parent_15ceg_1.default-browser .placeholder::after { --tw-con=
tent: attr(data-placeholder); color: var(--text-secondary); content: var(--=
tw-content); cursor: text; pointer-events: none; position: relative; }

._prosemirror-parent_15ceg_1.default-browser .placeholder .ProseMirror-trai=
lingBreak { display: none !important; }

._prosemirror-parent_15ceg_1.firefox .placeholder::before { --tw-content: a=
ttr(data-placeholder); color: var(--text-secondary); content: var(--tw-cont=
ent); cursor: text; pointer-events: none; position: absolute; }

._prosemirror-parent_15ceg_1 p { white-space: pre-wrap; }

._prosemirror-parent_15ceg_1 .ProseMirror-separator { display: none !import=
ant; }

.active-view-transition.close-search-sidebar, .active-view-transition.open-=
search-sidebar { --vt_model_picker: model-picker; --vt_share_chat_wide_butt=
on: share-chat-wide-button; --vt_share_chat_compact_button: share-chat-comp=
act-button; --vt_thread_tools: thread-tools; --thread-extended-info-transit=
ion-name: thread-extended-info; --vt-disable-screen-column-transition: none=
; --vt_toggle_sidebar_opened: toggle-sidebar-icon-opened; --vt_toggle_sideb=
ar_closed: toggle-sidebar-icon-closed; --vt-thread-header-open-canvas: open=
-canvas-button; --vt-composer-speech-button: composer-speech-button; --vt_n=
ew_chat_thread: new-chat-thread; --vt-profile-avatar-thread: profile-avatar=
-active; }

@media (prefers-reduced-motion: reduce) {
  .active-view-transition.close-search-sidebar::view-transition, .active-vi=
ew-transition.open-search-sidebar::view-transition { display: none; }
}

.active-view-transition.close-search-sidebar::view-transition-group(*), .ac=
tive-view-transition.close-search-sidebar::view-transition-new(*), .active-=
view-transition.close-search-sidebar::view-transition-old(*), .active-view-=
transition.open-search-sidebar::view-transition-group(*), .active-view-tran=
sition.open-search-sidebar::view-transition-new(*), .active-view-transition=
.open-search-sidebar::view-transition-old(*) { animation-duration: var(--vt=
-duration,.3s); animation-timing-function: var(--vt-timing-function,var(--s=
pring-common)); }

.active-view-transition.close-search-sidebar::view-transition-old(composer-=
speech-button), .active-view-transition.close-search-sidebar::view-transiti=
on-old(model-picker), .active-view-transition.close-search-sidebar::view-tr=
ansition-old(open-canvas-button), .active-view-transition.close-search-side=
bar::view-transition-old(share-chat-compact-button), .active-view-transitio=
n.close-search-sidebar::view-transition-old(share-chat-wide-button), .activ=
e-view-transition.close-search-sidebar::view-transition-old(thread-tools), =
.active-view-transition.close-search-sidebar::view-transition-old(toggle-si=
debar-icon), .active-view-transition.open-search-sidebar::view-transition-o=
ld(composer-speech-button), .active-view-transition.open-search-sidebar::vi=
ew-transition-old(model-picker), .active-view-transition.open-search-sideba=
r::view-transition-old(open-canvas-button), .active-view-transition.open-se=
arch-sidebar::view-transition-old(share-chat-compact-button), .active-view-=
transition.open-search-sidebar::view-transition-old(share-chat-wide-button)=
, .active-view-transition.open-search-sidebar::view-transition-old(thread-t=
ools), .active-view-transition.open-search-sidebar::view-transition-old(tog=
gle-sidebar-icon) { display: none; }

.active-view-transition.close-search-sidebar::view-transition-new(composer-=
speech-button), .active-view-transition.close-search-sidebar::view-transiti=
on-new(model-picker), .active-view-transition.close-search-sidebar::view-tr=
ansition-new(open-canvas-button), .active-view-transition.close-search-side=
bar::view-transition-new(share-chat-compact-button), .active-view-transitio=
n.close-search-sidebar::view-transition-new(share-chat-wide-button), .activ=
e-view-transition.close-search-sidebar::view-transition-new(thread-tools), =
.active-view-transition.close-search-sidebar::view-transition-old(toggle-si=
debar-icon), .active-view-transition.open-search-sidebar::view-transition-n=
ew(composer-speech-button), .active-view-transition.open-search-sidebar::vi=
ew-transition-new(model-picker), .active-view-transition.open-search-sideba=
r::view-transition-new(open-canvas-button), .active-view-transition.open-se=
arch-sidebar::view-transition-new(share-chat-compact-button), .active-view-=
transition.open-search-sidebar::view-transition-new(share-chat-wide-button)=
, .active-view-transition.open-search-sidebar::view-transition-new(thread-t=
ools), .active-view-transition.open-search-sidebar::view-transition-old(tog=
gle-sidebar-icon) { animation: auto ease 0s 1 normal none running none; hei=
ght: 100%; }

.active-view-transition.close-search-sidebar::view-transition-group(profile=
-avatar-active), .active-view-transition.open-search-sidebar::view-transiti=
on-group(profile-avatar-active) { animation: auto ease 0s 1 normal none run=
ning none; z-index: 2; }

.active-view-transition.close-search-sidebar::view-transition-new(profile-a=
vatar-active), .active-view-transition.open-search-sidebar::view-transition=
-new(profile-avatar-active) { animation: auto ease 0s 1 normal none running=
 none; }

.active-view-transition.close-search-sidebar::view-transition-new(thread-ex=
tended-info), .active-view-transition.close-search-sidebar::view-transition=
-old(thread-extended-info), .active-view-transition.open-search-sidebar::vi=
ew-transition-new(thread-extended-info), .active-view-transition.open-searc=
h-sidebar::view-transition-old(thread-extended-info) { height: 100%; object=
-fit: none; overflow: clip; }

.active-view-transition.close-search-sidebar::view-transition-new(thread), =
.active-view-transition.close-search-sidebar::view-transition-old(thread), =
.active-view-transition.open-search-sidebar::view-transition-new(thread), .=
active-view-transition.open-search-sidebar::view-transition-old(thread) { h=
eight: 100%; object-fit: none; overflow: clip; }

.active-view-transition.open-search-sidebar::view-transition-old(thread-ext=
ended-info) { display: none; }

.active-view-transition.close-search-sidebar::view-transition-new(thread-ex=
tended-info) { display: none; }

.active-view-transition.pin-sidebar, .active-view-transition.unpin-sidebar =
{ --vt_model_picker: model-picker; --vt_share_chat_wide_button: share-chat-=
wide-button; --vt_share_chat_compact_button: share-chat-compact-button; --v=
t_thread_tools: thread-tools; --vt-thread-header-open-canvas: open-canvas-b=
utton; --vt-composer-speech-button: composer-speech-button; }

@media (prefers-reduced-motion: reduce) {
  .active-view-transition.pin-sidebar::view-transition, .active-view-transi=
tion.unpin-sidebar::view-transition { display: none; }
}

.active-view-transition.pin-sidebar::view-transition-group(*), .active-view=
-transition.pin-sidebar::view-transition-new(*), .active-view-transition.pi=
n-sidebar::view-transition-old(*), .active-view-transition.unpin-sidebar::v=
iew-transition-group(*), .active-view-transition.unpin-sidebar::view-transi=
tion-new(*), .active-view-transition.unpin-sidebar::view-transition-old(*) =
{ animation-duration: var(--vt-duration,.3s); animation-timing-function: va=
r(--vt-timing-function,var(--spring-common)); }

.active-view-transition.pin-sidebar::view-transition-old(composer-speech-bu=
tton), .active-view-transition.pin-sidebar::view-transition-old(model-picke=
r), .active-view-transition.pin-sidebar::view-transition-old(open-canvas-bu=
tton), .active-view-transition.pin-sidebar::view-transition-old(share-chat-=
compact-button), .active-view-transition.pin-sidebar::view-transition-old(s=
hare-chat-wide-button), .active-view-transition.pin-sidebar::view-transitio=
n-old(thread-tools), .active-view-transition.pin-sidebar::view-transition-o=
ld(toggle-sidebar-icon), .active-view-transition.unpin-sidebar::view-transi=
tion-old(composer-speech-button), .active-view-transition.unpin-sidebar::vi=
ew-transition-old(model-picker), .active-view-transition.unpin-sidebar::vie=
w-transition-old(open-canvas-button), .active-view-transition.unpin-sidebar=
::view-transition-old(share-chat-compact-button), .active-view-transition.u=
npin-sidebar::view-transition-old(share-chat-wide-button), .active-view-tra=
nsition.unpin-sidebar::view-transition-old(thread-tools), .active-view-tran=
sition.unpin-sidebar::view-transition-old(toggle-sidebar-icon) { display: n=
one; }

.active-view-transition.pin-sidebar::view-transition-new(composer-speech-bu=
tton), .active-view-transition.pin-sidebar::view-transition-new(model-picke=
r), .active-view-transition.pin-sidebar::view-transition-new(open-canvas-bu=
tton), .active-view-transition.pin-sidebar::view-transition-new(share-chat-=
compact-button), .active-view-transition.pin-sidebar::view-transition-new(s=
hare-chat-wide-button), .active-view-transition.pin-sidebar::view-transitio=
n-new(thread-tools), .active-view-transition.pin-sidebar::view-transition-o=
ld(toggle-sidebar-icon), .active-view-transition.unpin-sidebar::view-transi=
tion-new(composer-speech-button), .active-view-transition.unpin-sidebar::vi=
ew-transition-new(model-picker), .active-view-transition.unpin-sidebar::vie=
w-transition-new(open-canvas-button), .active-view-transition.unpin-sidebar=
::view-transition-new(share-chat-compact-button), .active-view-transition.u=
npin-sidebar::view-transition-new(share-chat-wide-button), .active-view-tra=
nsition.unpin-sidebar::view-transition-new(thread-tools), .active-view-tran=
sition.unpin-sidebar::view-transition-old(toggle-sidebar-icon) { animation:=
 auto ease 0s 1 normal none running none; height: 100%; }

.active-view-transition.pin-sidebar::view-transition-old(sidebar), .active-=
view-transition.unpin-sidebar::view-transition-old(sidebar) { display: none=
; }

.active-view-transition.pin-sidebar::view-transition-new(sidebar), .active-=
view-transition.unpin-sidebar::view-transition-new(sidebar) { animation: au=
to ease 0s 1 normal none running none; }

.active-view-transition.pin-sidebar::view-transition-new(thread), .active-v=
iew-transition.pin-sidebar::view-transition-old(thread), .active-view-trans=
ition.unpin-sidebar::view-transition-new(thread), .active-view-transition.u=
npin-sidebar::view-transition-old(thread) { height: 100%; object-fit: none;=
 overflow: clip; }

.active-view-transition.pin-sidebar::view-transition-old(sidebar-floating),=
 .active-view-transition.unpin-sidebar::view-transition-old(sidebar-floatin=
g) { display: none; }

.active-view-transition.pin-sidebar::view-transition-new(sidebar-floating),=
 .active-view-transition.unpin-sidebar::view-transition-new(sidebar-floatin=
g) { animation: auto ease 0s 1 normal none running none; }

.active-view-transition.pin-sidebar { --vt_toggle_sidebar_pinned: toggle-si=
debar-icon; }

.active-view-transition.unpin-sidebar { --vt_toggle_sidebar_floating: sideb=
ar-floating-button; }

.active-view-transition.close-sidebar, .active-view-transition.open-sidebar=
 { --vt_model_picker: model-picker; --vt_share_chat_wide_button: share-chat=
-wide-button; --vt_share_chat_compact_button: share-chat-compact-button; --=
vt_thread_tools: thread-tools; --vt-disable-sidebar-transition: none; --vt-=
disable-screen-column-transition: none; --vt_toggle_sidebar_opened: toggle-=
sidebar-icon-opened; --vt_toggle_sidebar_closed: toggle-sidebar-icon-closed=
; --vt-thread-header-open-canvas: open-canvas-button; --vt-composer-speech-=
button: composer-speech-button; }

@media (prefers-reduced-motion: reduce) {
  .active-view-transition.close-sidebar::view-transition, .active-view-tran=
sition.open-sidebar::view-transition { display: none; }
}

.active-view-transition.close-sidebar::view-transition-old(composer-speech-=
button), .active-view-transition.close-sidebar::view-transition-old(model-p=
icker), .active-view-transition.close-sidebar::view-transition-old(open-can=
vas-button), .active-view-transition.close-sidebar::view-transition-old(sha=
re-chat-compact-button), .active-view-transition.close-sidebar::view-transi=
tion-old(share-chat-wide-button), .active-view-transition.close-sidebar::vi=
ew-transition-old(thread-tools), .active-view-transition.open-sidebar::view=
-transition-old(composer-speech-button), .active-view-transition.open-sideb=
ar::view-transition-old(model-picker), .active-view-transition.open-sidebar=
::view-transition-old(open-canvas-button), .active-view-transition.open-sid=
ebar::view-transition-old(share-chat-compact-button), .active-view-transiti=
on.open-sidebar::view-transition-old(share-chat-wide-button), .active-view-=
transition.open-sidebar::view-transition-old(thread-tools) { display: none;=
 }

.active-view-transition.close-sidebar::view-transition-new(composer-speech-=
button), .active-view-transition.close-sidebar::view-transition-new(model-p=
icker), .active-view-transition.close-sidebar::view-transition-new(open-can=
vas-button), .active-view-transition.close-sidebar::view-transition-new(sha=
re-chat-compact-button), .active-view-transition.close-sidebar::view-transi=
tion-new(share-chat-wide-button), .active-view-transition.close-sidebar::vi=
ew-transition-new(thread-tools), .active-view-transition.open-sidebar::view=
-transition-new(composer-speech-button), .active-view-transition.open-sideb=
ar::view-transition-new(model-picker), .active-view-transition.open-sidebar=
::view-transition-new(open-canvas-button), .active-view-transition.open-sid=
ebar::view-transition-new(share-chat-compact-button), .active-view-transiti=
on.open-sidebar::view-transition-new(share-chat-wide-button), .active-view-=
transition.open-sidebar::view-transition-new(thread-tools) { animation: aut=
o ease 0s 1 normal none running none; height: 100%; }

.active-view-transition.close-sidebar::view-transition-group(*), .active-vi=
ew-transition.close-sidebar::view-transition-new(*), .active-view-transitio=
n.close-sidebar::view-transition-old(*), .active-view-transition.open-sideb=
ar::view-transition-group(*), .active-view-transition.open-sidebar::view-tr=
ansition-new(*), .active-view-transition.open-sidebar::view-transition-old(=
*) { animation-duration: var(--vt-duration,.35s); animation-timing-function=
: var(--vt-timing-function,var(--spring-common)); }

.active-view-transition.close-sidebar::view-transition-group(profile-avatar=
-hidden), .active-view-transition.open-sidebar::view-transition-group(profi=
le-avatar-hidden) { display: none; }

.active-view-transition.close-sidebar::view-transition-group(profile-avatar=
-active), .active-view-transition.open-sidebar::view-transition-group(profi=
le-avatar-active) { animation: auto ease 0s 1 normal none running none; z-i=
ndex: 2; }

.active-view-transition.close-sidebar::view-transition-new(profile-avatar-a=
ctive), .active-view-transition.open-sidebar::view-transition-new(profile-a=
vatar-active) { animation: auto ease 0s 1 normal none running none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"] { --vt-profile-avatar-sidebar: profile-avatar-hidden; --vt-profile-=
avatar-thread: profile-avatar-active; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(sidebar), .active-view-transition.close-sideba=
r[active-view-transition-type=3D"from-pinned"]::view-transition-old(sidebar=
) { height: 100%; object-fit: none; overflow: clip; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(thread) { animation-duration: 0.3s; animatio=
n-timing-function: var(--spring-fast); }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(toggle-sidebar-icon-closed), .active-view-tr=
ansition.close-sidebar[active-view-transition-type=3D"from-pinned"]::view-t=
ransition-group(toggle-sidebar-icon-opened) { z-index: 2; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(sidebar) { display: none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-old(sidebar) { animation: auto ease 0s 1 normal no=
ne running none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(toggle-sidebar-icon) { animation: auto ease 0s=
 1 normal none running none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(sidebar), .active-view-transition.close-side=
bar[active-view-transition-type=3D"from-pinned"]::view-transition-new(sideb=
ar) { animation-duration: 0.4s; animation-timing-function: var(--spring-com=
mon); }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(profile-avatar-thread) { display: none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(profile-avatar-sidebar) { animation: auto ea=
se 0s 1 normal none running none; z-index: 2; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(profile-avatar-sidebar) { animation: auto ease=
 0s 1 normal none running none; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-group(model-picker), .active-view-transition.close=
-sidebar[active-view-transition-type=3D"from-pinned"]::view-transition-grou=
p(thread) { animation-duration: 0.45s; animation-timing-function: var(--spr=
ing-common); }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(thread), .active-view-transition.close-sidebar=
[active-view-transition-type=3D"from-pinned"]::view-transition-old(thread) =
{ animation-duration: 0.1s; animation-timing-function: var(--spring-common)=
; }

.active-view-transition.close-sidebar[active-view-transition-type=3D"from-p=
inned"]::view-transition-new(thread), .active-view-transition.close-sidebar=
[active-view-transition-type=3D"from-pinned"]::view-transition-old(thread) =
{ height: 100%; object-fit: none; overflow: clip; }

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"] { --vt-profile-avatar-sidebar: profile-avatar-active; --vt-profile-a=
vatar-thread: profile-avatar-hidden; }

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-old(sidebar) { display: none; }

@keyframes _sidebar-open_17pjt_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-new(sidebar) { animation: sidebar-open .3s var(--sp=
ring-fast) both; height: 100%; object-fit: none; overflow: clip; }

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-group(toggle-sidebar-icon-closed) { display: none; =
}

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-new(toggle-sidebar-icon-opened) { animation: auto e=
ase 0s 1 normal none running none; }

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-group(thread) { --vt-timing-function: var(--spring-=
common); }

.active-view-transition.open-sidebar[active-view-transition-type=3D"from-pi=
nned"]::view-transition-new(thread), .active-view-transition.open-sidebar[a=
ctive-view-transition-type=3D"from-pinned"]::view-transition-old(thread) { =
height: 100%; object-fit: none; overflow: clip; }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://chatgpt.com/backend-api/content?id=file-i8iKVm0DCmTPjkQwAeqgXPPa&gizmo_id=g-Q3vIRgASR&ts=481070&p=gpp&sig=5f042660a310b5ab6da7b5db06b4463cbeb5e182398fb5626f294584d366ad56&v=0

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

------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-JKjMuUg7Lso7fL05wfgFzNZL?se=2024-11-17T14%3A44%3A25Z&sp=r&sv=2024-08-04&sr=b&rscc=max-age%3D299%2C%20immutable%2C%20private&rscd=attachment%3B%20filename%3D1000004246.jpg&sig=4Nrst487vyzeZ2/aDLybCRquu0bnVzOOUFeZ2LUUYZk%3D

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
kc/pjbqyVk//2Q==

------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/cheetah.styles.css

@charset "utf-8";

@keyframes Hj93Q {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.RQKGU { background: none; cursor: pointer; border: none; border-radius: 22=
px; padding: 2px; }

.RQKGU:hover { background: rgb(226, 228, 233); }

.CUowL { width: 22px; height: 22px; background-size: 22px 22px; background-=
image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/=
5cbf68ed98a3ef1e/ai-studio.svg"); background-repeat: no-repeat; }

.qa6XN { animation: 1s linear 0s infinite normal none running qa6XN; }

@keyframes qa6XN {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes MBS28 {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.ZfD1U { background: rgb(255, 255, 255); border: none; cursor: pointer; box=
-shadow: rgba(0, 0, 0, 0.4) 0px 0px 0.5px, rgba(0, 0, 0, 0.09) 0px 1px 3px,=
 rgba(0, 0, 0, 0.09) 0px 4px 8px; border-radius: 30px; padding: 0px 8px 0px=
 3px; height: 28px; box-sizing: border-box; font-size: 12px; display: flex;=
 align-items: center; color: rgb(22, 23, 25); }

.ZfD1U:hover { background: rgb(226, 228, 233); }

.ZfD1U[data-disabled=3D"true"] { pointer-events: none; }

.ZfD1U .BdxRh { width: 22px; height: 23px; background-size: 22px 23px; back=
ground-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/=
images/4c1040aef5510f31/light-bulb.svg"); background-repeat: no-repeat; }

@keyframes A8MjA {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.cDocn { background: rgb(255, 255, 255); box-shadow: rgba(0, 0, 0, 0.4) 0px=
 0px 0.5px, rgba(0, 0, 0, 0.09) 0px 1px 3px, rgba(0, 0, 0, 0.09) 0px 4px 8p=
x; border-radius: 30px; display: flex; flex-direction: row; align-items: ce=
nter; height: 28px; }

.dJCJe { background: none; border: none; cursor: pointer; height: 28px; min=
-width: 28px; box-sizing: border-box; padding: 3px 6px; font-size: 12px; po=
sition: relative; }

.dJCJe::after { content: " "; width: 1px; height: 32px; position: absolute;=
 left: -1px; top: 6px; transform-origin: left top; transform: scale(0.5) tr=
anslateX(0.5px); background: rgb(194, 198, 212); pointer-events: none; }

.dJCJe[data-disabled=3D"true"] { cursor: default; opacity: 0.4; }

.dJCJe:hover { background-color: rgb(226, 228, 233); }

.dJCJe:hover + .dJCJe::after, .dJCJe:hover::after { display: none; }

.dJCJe:first-child { border-top-left-radius: 30px; border-bottom-left-radiu=
s: 30px; }

.dJCJe:first-child::after { display: none; }

.dJCJe:last-child { border-top-right-radius: 30px; border-bottom-right-radi=
us: 30px; }

.wGNWN { background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfko=
bkghlhen/src/images/9912bfa0809a9ccd/rewrite.svg"); }

.cXi2U, .wGNWN { display: block; background-position: 50% center; width: 22=
px; height: 22px; background-size: 22px 22px; background-repeat: no-repeat;=
 }

.cXi2U { background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfko=
bkghlhen/src/images/5cbf68ed98a3ef1e/ai-studio.svg"); }

.vIUqu { background-position: center -1px; height: 23px; background-size: 2=
2px 23px; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfk=
obkghlhen/src/images/4c1040aef5510f31/light-bulb.svg"); }

.vIUqu, .xpU4I { display: block; width: 22px; background-repeat: no-repeat;=
 }

.xpU4I { height: 22px; background-size: 22px 22px; background-image: url("c=
hrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/2cc86285f5d41=
ad0/translate.svg"); }

.XWxTA { position: absolute; background: rgb(153, 194, 255); opacity: 0.5; =
}

.XWxTA.o979x { opacity: 0; }

.XWxTA.bHjcD { animation: 0.3s ease-out 0s 2 normal forwards running oy7wj;=
 }

@keyframes oy7wj {=20
  0% { opacity: 0.5; }
  50% { opacity: 0; }
  100% { opacity: 0.5; }
}

.WhbAl { position: absolute; transform: translate(-1.5px, -100%); width: 3p=
x; background: rgb(10, 154, 120); min-height: 25px; pointer-events: none; }

.WhbAl .Yd_W5 { position: absolute; left: 0px; top: 0px; width: 16px; heigh=
t: 16px; transform: translateX(-6.5px); }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/citationBuilderIntegration.styles.css

@charset "utf-8";

@keyframes qxE7o {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.H0KY7 { background: none !important; }

.krAQX, .zQ_WB { height: 40px; border-radius: 8px 8px 0px 0px; position: re=
lative; cursor: grab; }

.krAQX:hover, .zQ_WB:hover { background: rgb(231, 233, 245); }

.krAQX:active, .zQ_WB:active { cursor: grabbing; user-select: none; }

.krAQX .ZLfwG, .zQ_WB .ZLfwG { position: absolute; top: 0px; left: 0px; wid=
th: 100%; height: 100%; display: flex; justify-content: center; align-items=
: center; }

.krAQX .ZLfwG .aaK2h, .zQ_WB .ZLfwG .aaK2h { width: 20px; height: 20px; bac=
kground-size: 20px 20px; background-image: url("chrome-extension://kbfnbcae=
plbcioakkpcpgfkobkghlhen/src/images/ab4d6a53f29d6cb9/dragHandle.svg"); back=
ground-repeat: no-repeat; transform: rotate(90deg); }

.NW_wC { position: absolute; top: 4px; right: 4px; }

.NW_wC .doZbO { background-size: 24px 24px; background-image: url("chrome-e=
xtension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/fed32318bef79540/pro=
ofreader-small.svg"); background-repeat: no-repeat; width: 32px; height: 32=
px; background-position: 50% center; }

.NW_wC .jFXVN { width: 32px; height: 32px; background-size: 32px 32px; back=
ground-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/=
images/8d5ac7b2cfd7396f/goals.svg"); background-repeat: no-repeat; }

.Fye6Z { animation: 0.15s linear 0s 1 normal forwards running LrmXc; }

.LvNOO { animation: 0.15s linear 0s 1 normal forwards running k5MPg; top: 0=
px; }

.jHlY6, .LvNOO { position: absolute; }

.jHlY6 { margin: 9px 12px; }

@keyframes LrmXc {=20
  0% { opacity: 0; transform: scale(0); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes k5MPg {=20
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0); }
}

.zQ_WB { display: flex; margin-right: 4px; align-items: center; font-family=
: Inter; font-size: 12px; color: rgb(109, 117, 141); }

.zQ_WB, .zQ_WB:active { cursor: default; }

.zQ_WB:hover { background: transparent; }

.zQ_WB button { margin: 0px; }

.Wq9Bu div[data-role=3D"dropdown-list"] { margin-bottom: -1px; }

.T0w8C div[data-role=3D"dropdown-list"] { margin-top: -1px; }

.jyXHU { flex: 1 1 0%; }

.Ym1B0 { background-size: 24px 24px; background-image: url("chrome-extensio=
n://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/1de6e5932c6a6341/left.svg")=
; background-repeat: no-repeat; background-position: 50% center; width: 32p=
x; height: 32px; }

.jBHDX { margin-left: 4px; margin-right: 4px; max-width: 130px; white-space=
: nowrap; }

.qWLF2 { margin-left: 14px; display: flex; align-items: center; }

.h1AP1 { padding-left: 7px !important; }

.UmkUb { margin-right: -2px; }

.Ml3GV { font-weight: 400; font-size: 12px; color: rgb(109, 117, 141); marg=
in-left: 11px; }

.h1AP1 > i { margin-top: -3px; fill: rgb(109, 117, 141) !important; stroke:=
 rgb(109, 117, 141) !important; }

.MAfbF { margin-top: 15px; }

.G4Lw1 { width: 260px; background: rgb(255, 255, 255); padding: 8px 16px; d=
isplay: flex; flex-direction: column; font-family: Inter !important; }

.CyOts { width: 100%; padding-bottom: 4px; }

.rQBK5 { flex: 1 1 0%; margin-top: 7px; text-align: center; }

.rQBK5:first-child { border-top-left-radius: 4px !important; border-bottom-=
left-radius: 4px !important; }

.rQBK5:first-child:last-child { flex-grow: 0.29; }

@keyframes YouEU {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.hiv9G, .hZk_v { width: 32px; height: 32px; background-size: 32px 32px; bac=
kground-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src=
/images/fd64afe13067dfa2/feedback.svg"); background-repeat: no-repeat; }

.hZk_v { background-size: 24px 24px; background-position: 50% center; }

.rbVgb { font-family: Inter; width: 212px; }

.EYG8l { width: 32px; height: 32px; display: flex; align-items: center; jus=
tify-content: center; }

@keyframes MH8w4 {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.jerdC { width: 32px; height: 32px; background-size: 32px 32px; background-=
image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/=
fe97f04701fed1b2/settings.svg"); }

.jerdC, .PlOGe { background-repeat: no-repeat; }

.PlOGe { width: 24px; height: 24px; background-size: 24px 24px; background-=
image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/=
b0aa5d6c964d70f8/settings-small.svg"); }

@keyframes cLcFF {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.jW6zC { display: inline-flex; align-items: center; align-self: flex-end; u=
ser-select: none; }

.jW6zC, .Z3z9c { position: relative; }

.Z3z9c { padding: 0px; height: 20px; width: 20px; background-color: rgb(31,=
 36, 60); border: 0.5px solid rgba(0, 0, 0, 0.1); border-radius: 50%; top: =
auto; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 8px 0px; cursor: pointer; disp=
lay: flex; transition: opacity 0.2s ease-in-out, right 0.2s ease-in-out, le=
ft 0.2s ease-in-out; }

.Q2AWV { right: 0px; }

.Q2AWV.hCj_U { opacity: 1; right: -28px; }

.Q2AWV.DskjF { right: 0px; opacity: 0; }

.Akjks { left: 0px; }

.Akjks.hCj_U { opacity: 1; left: -28px; }

.Akjks.DskjF { left: 0px; opacity: 0; }

.u83J9 { position: absolute; z-index: 9998; }

.QnTvU { right: 3px; }

.Eb0bS { left: 3px; }

.quLN3 { width: 24px; height: 24px; background-size: 24px 24px; background-=
image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/=
b0aa5d6c964d70f8/settings-small.svg"); background-repeat: no-repeat; }

.Ten_A { margin: 0px 0px 2px 12px; color: rgb(109, 117, 141) !important; }

.i6QYE { font-family: Inter; width: 212px; }

.doIDs { margin-left: 32px !important; margin-right: 0px !important; }

.E2gr6 { margin-right: 32px !important; margin-left: 0px !important; }

.c2KSI { margin-bottom: -26px !important; margin-top: 0px !important; }

.wb14t { margin-top: -26px !important; margin-bottom: 0px !important; }

@keyframes gtb07 {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.TJqK_ { border-style: none; background-color: rgb(31, 36, 60); font-size: =
15px; color: rgb(255, 255, 255); width: 155px; height: 48px; box-sizing: bo=
rder-box; display: flex; align-items: center; justify-content: space-betwee=
n; border-radius: 24px 24px 24px 0px; font-family: Inter; line-height: 100%=
; font-weight: 700; padding-left: 10px; padding-right: 20px; cursor: pointe=
r; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 8px 0px; }

.OUnK0 { pointer-events: none; visibility: hidden; }

.JApPF { position: relative; }

.JApPF, .n12f8 { font-family: Inter; }

.n12f8 { background-color: rgb(51, 57, 84); color: rgb(183, 187, 199); font=
-size: 14px; line-height: 21px; margin: 0px 16px 16px; width: 208px; }

.VlqXr { color: rgb(255, 255, 255); font-weight: 700; line-height: 22px; ma=
rgin-bottom: 8px; }

.RK9xl { margin-top: 16px; margin-bottom: 16px; }

.RK9xl button { background-color: rgb(77, 83, 110); color: rgb(255, 255, 25=
5); }

.RK9xl button[data-active=3D"true"], .RK9xl button[data-hovered=3D"true"] {=
 color: rgb(22, 23, 25); background-color: rgb(184, 200, 251); }

.RK9xl button:focus { color: rgb(22, 23, 25); background-color: rgb(140, 16=
6, 246); outline: rgb(140, 166, 246) solid 2px; outline-offset: 2px; }

#IS16Q { position: absolute; top: 8px; right: 8px; }

#IS16Q:focus { background-color: transparent; outline: rgb(140, 166, 246) s=
olid 2px; outline-offset: 2px; }

#IS16Q:active, #IS16Q:focus:active, #IS16Q:hover { background-color: rgb(71=
, 75, 88); }

@keyframes Kz_zR {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.gTqAM { position: absolute; top: 4px; right: 64px; }

.CGpI8 { height: 32px; width: 32px; }

.SDOXs { width: 480px; min-width: 480px; max-width: calc(-34px + 100vw); ba=
ckground: rgb(255, 255, 255); box-shadow: rgba(0, 0, 0, 0.7) 0px 0px 0.5px,=
 rgba(26, 33, 52, 0.2) 0px 2px 8px; border-radius: 8px; position: relative;=
 }

.SDOXs .mbUFb { width: 100%; overflow: visible; border-top-right-radius: 8p=
x; border-top-left-radius: 8px; background: rgb(249, 250, 255); border-bott=
om: 1px solid rgb(240, 242, 252); }

.SDOXs .xyaJS { padding: 16px 20px; }

.HG2vG { flex-direction: column; font-family: Inter; min-height: 54px; }

.HG2vG, .OfipI, .SXPDa { display: flex; }

.SXPDa { margin-top: 8px; margin-bottom: -8px; font-size: 12px; }

.c9Dk4, .SXPDa { line-height: 32px; color: rgb(109, 117, 141); }

.c9Dk4 { font-size: 14px; text-align: center; }

.bpkVs, .c9Dk4 { flex: 1 1 0%; }

.bpkVs { display: flex; margin-right: 23px; overflow-wrap: anywhere; }

.gYcOY { margin: auto; line-height: 21px; }

.Xrrfg { display: flex; }

._26_Ju { margin: auto; }

.AdRL2 { padding: 0px !important; }

.AdRL2[data-hovered=3D"true"]:not([data-active=3D"true"]) { background: rgb=
(231, 233, 245); }

.oLHdU { fill: rgb(74, 110, 224); }

.ruFrp.ruFrp { border-top-right-radius: 0px; border-bottom-right-radius: 0p=
x; }

.zy8b9 { line-height: 21px; }

.U3yPs { margin-left: 8px; margin-right: 2px; }

.e4kdK.e4kdK { font-weight: 400; padding: 0px 6px; }

.ivQPa { display: inline-flex; align-items: center; margin-right: 8px; vert=
ical-align: middle; }

.Pes95 { display: flex; flex-direction: column; padding: 4px 0px; }

.eJ0Bs { height: 32px; }

.eJ0Bs:nth-child(n+2) { margin-top: -6px; }

.eHG3J { display: flex; flex-direction: column; font-family: Inter; min-hei=
ght: 54px; margin: 0px -20px 16px; padding: 0px 20px 16px; }

.EdADf, .eHG3J { border-bottom: 1px solid rgb(231, 233, 245); }

.EdADf { max-height: 432px; overflow-y: scroll; margin: 0px -20px; padding:=
 0px 20px 4px; }

.SPaBA { flex: 1 1 0%; }

.Wcd0d { margin-bottom: 12px; }

.j7PGz { display: flex; margin: 23.5px -15px 7.5px 0px; }

.j7PGz > * { margin-right: 16px; }

.xEI8b { height: 40px; font-size: 14px; padding: 0px 12px; box-sizing: bord=
er-box; }

.y3K5S { border: 1px solid rgb(234, 21, 55) !important; }

.ciO2T { margin-right: -16px; }

.adkKD, .ciO2T { display: flex; flex-wrap: wrap; }

.adkKD { width: calc(100% - 16px); margin-bottom: 12px; }

.wM8KF { max-width: calc(50% - 16px); flex-grow: 1; }

.UC1qT, .wM8KF { margin-right: 16px; margin-bottom: 12px; }

.UC1qT { flex: 1 1 0%; }

.UB_fF { display: flex; flex-wrap: wrap; }

.lgYEX, .UB_fF { width: 100%; }

.EBtwA { margin-bottom: 12px; }

.PTjcO, .UIWog { color: rgb(109, 117, 141); display: block; width: 100%; }

.PTjcO, .UIWog { margin-bottom: 4px; }

.eDoCo { margin-right: 16px; margin-left: -12px; margin-bottom: -8px; }

.CQb_B { border: 1px solid rgb(231, 233, 245); border-radius: 4px; line-hei=
ght: 38px; box-sizing: border-box; padding: 0px 0px 0px 12px; }

.CQb_B, .RPcgD { width: 150px; margin-right: 16px; }

.XkRyQ { max-height: 72px; overflow-y: scroll; }

.uP_5p { display: flex; flex-direction: column; }

.z0rlU { text-transform: uppercase; font-size: 11px; line-height: 16px; mar=
gin-bottom: 14px; letter-spacing: 0.04em; }

@keyframes Vv6WG {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.kjElf { display: flex; flex-direction: column; min-width: 248px; width: 10=
0%; height: 100%; }

.kjElf.hkEx2, .kjElf.hkEx2 .Ua5wJ { align-items: center; }

.kjElf.hkEx2 .Ua5wJ .GnQ_a, .kjElf.hkEx2 .Ua5wJ .kWEW0 { text-align: center=
; }

.kjElf .Ua5wJ { display: flex; flex-direction: column; flex-grow: 1; flex-s=
hrink: 0; width: 100%; }

.kjElf .Ua5wJ .osGQI { min-height: 32px; margin-bottom: 16px; }

.kjElf .Ua5wJ .GnQ_a { font-size: 20px; width: 100%; margin-bottom: 16px; }

.kjElf .Ua5wJ .GnQ_a, .kjElf .Ua5wJ .GnQ_a.b7yYp { font-family: Inter, sans=
-serif; font-style: normal; font-weight: 700; color: rgb(14, 16, 26); line-=
height: 24px; }

.kjElf .Ua5wJ .GnQ_a.b7yYp { font-size: 16px; margin-bottom: 8px; }

.kjElf .Ua5wJ .ZOSRK { width: 100%; }

.kjElf .Ua5wJ .ZOSRK.b7yYp { margin-bottom: 8px; }

.kjElf .Ua5wJ .ZOSRK:not(.b7yYp) { margin-bottom: 16px; }

.kjElf .Ua5wJ .kWEW0 { font-family: Inter, sans-serif; font-style: normal; =
font-weight: 700; color: rgb(14, 16, 26); font-size: 16px; line-height: 24p=
x; width: 100%; margin-bottom: 16px; }

.kjElf .Ua5wJ .l8New { width: 100%; min-height: 96px; flex-grow: 1; }

.kjElf .Ua5wJ .l8New.b7yYp { max-height: 128px; margin-bottom: 8px; }

.kjElf .Ua5wJ .l8New:not(.b7yYp) { margin-bottom: 16px; }

.kjElf .Ua5wJ .Qbnj_ { margin-bottom: 8px; }

.kjElf .Ua5wJ .Qbnj_, .kjElf .Ua5wJ .VBCx1 { font-family: Inter, sans-serif=
; font-style: normal; font-weight: 400; color: rgb(14, 16, 26); font-size: =
12px; line-height: 18px; width: 100%; }

.kjElf .Ua5wJ .VBCx1 { margin-bottom: 16px; }

.kjElf .Opd8X, .kjElf .tYYGU { width: 100%; }

.kjElf .Opd8X .QKLT7 { height: 12px; }

.kjElf .ARBzt { display: flex; flex-direction: column; align-items: center;=
 justify-content: center; flex-grow: 1; }

.kjElf .ARBzt .kJIzg { width: 64px; height: 64px; background-size: 64px 64p=
x; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlh=
en/src/images/b2e3b5bed5de724a/notification-ok-variant-large.svg"); backgro=
und-repeat: no-repeat; margin-bottom: 16px; }

.kjElf .ARBzt .iXQnf { font-weight: 700; font-size: 20px; line-height: 24px=
; margin-bottom: 8px; }

.kjElf .ARBzt .iXQnf, .kjElf .ARBzt .Ydufo { font-family: Inter, sans-serif=
; font-style: normal; color: rgb(14, 16, 26); }

.kjElf .ARBzt .Ydufo { font-weight: 400; font-size: 14px; line-height: 21px=
; font-feature-settings: "ss03"; margin-bottom: 16px; }

@keyframes uouSO {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.sp8vS { display: flex; flex-direction: column; align-items: center; }

.sp8vS .eH6DL { margin-bottom: 6px; }

.sp8vS .eH6DL.DhaWh { background-image: url("chrome-extension://kbfnbcaeplb=
cioakkpcpgfkobkghlhen/src/images/6d54743316c1f3d5/emoji-disheartening.svg")=
; }

.sp8vS .eH6DL.BS_8d, .sp8vS .eH6DL.DhaWh { width: 20px; height: 20px; backg=
round-size: 20px 20px; background-repeat: no-repeat; }

.sp8vS .eH6DL.BS_8d { background-image: url("chrome-extension://kbfnbcaeplb=
cioakkpcpgfkobkghlhen/src/images/117e7a1dc0d9b3d3/emoji-neutral.svg"); }

.sp8vS .eH6DL.dUZNd { width: 20px; height: 20px; background-size: 20px 20px=
; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhe=
n/src/images/6b2d9e1aae62a6fc/emoji-smiling.svg"); background-repeat: no-re=
peat; }

.KAzfW { width: 100%; height: 100%; }

.KAzfW, .KAzfW .WkjDU { display: flex; align-items: center; justify-content=
: center; }

.KAzfW .WkjDU { font-family: Inter, sans-serif; font-style: normal; font-we=
ight: 400; color: rgb(14, 16, 26); font-size: 12px; line-height: 18px; flex=
-direction: column; width: 80px; height: 80px; cursor: pointer; margin-righ=
t: 4px; }

.KAzfW .WkjDU:focus, .KAzfW .WkjDU:hover { background: rgb(240, 242, 252); =
border-radius: 8px; }

.KAzfW .WkjDU.onilo { background: rgb(237, 245, 255); border: 1px solid rgb=
(74, 110, 224); box-sizing: border-box; border-radius: 8px; }

@keyframes tww6q {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.Te37e { display: grid; align-items: center; grid-template-columns: 24px au=
to; }

.Te37e .mFHkX { background: rgb(249, 250, 255); border: 1.5px solid rgb(159=
, 166, 191); box-sizing: border-box; border-radius: 2px; width: 16px; heigh=
t: 16px; }

.Te37e .mFHkX.DdH2q { background: rgb(255, 255, 255); border: 1px solid rgb=
(100, 107, 129); }

.Te37e .mFHkX.JhHnz { display: flex; align-items: flex-end; background: rgb=
(74, 110, 224); border: none; }

.Te37e .mFHkX.JhHnz .zShXt { width: 16px; height: 13px; background-size: 16=
px 13px; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfko=
bkghlhen/src/images/8fe508c1e8d5882e/checkmark.svg"); background-repeat: no=
-repeat; }

.PhVhU { position: absolute; bottom: 0px; width: 500px; pointer-events: non=
e; display: flex; z-index: 10; }

.Fq4Vh { left: 163px; }

.CIeiA { right: 163px; flex-direction: row-reverse; }

.qD0vI, .XFcFy { display: flex; justify-content: flex-start; flex-direction=
: column-reverse; position: relative; pointer-events: none; z-index: 10000;=
 }

.XFcFy { margin-bottom: -0.5rem; }

.jy8qk, .vEzpC { display: none; }

.CFl7s { pointer-events: all; }

.p7tSh { margin-right: 16px; }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/designSystem.styles.css

@charset "utf-8";

:root { --blue-0: #f3f6ff; --blue-10: #d1dbfe; --blue-20: #adbff9; --blue-3=
0: #7d99f0; --blue-40: #5d7fe9; --blue-60: #2551da; --blue-80: #02379e; --b=
lue-90: #000a62; --blue-100: #000a26; --blue-gray-0: #f4f4f6; --blue-gray-5=
: #e2e4e9; --blue-gray-10: #cdd1dc; --blue-gray-20: #c2c6d4; --blue-gray-30=
: #adb2c3; --blue-gray-35: #99a0b3; --blue-gray-40: #878da2; --blue-gray-50=
: #798096; --blue-gray-60: #646b81; --blue-gray-70: #565b6c; --blue-gray-80=
: #474b58; --blue-gray-90: #27282e; --blue-gray-100: #161719; --gold-0: #ff=
f6e0; --gold-10: #ffebb8; --gold-20: #ffdc85; --gold-30: #ffbf47; --gold-40=
: #ffa10a; --gold-60: #e57300; --gold-80: #bd5200; --gold-90: #7a3500; --go=
ld-100: #1a0b00; --green-0: #eafaf9; --green-10: #b1f0e8; --green-20: #73e1=
d4; --green-30: #2cc9b6; --green-40: #16ac9a; --green-60: #027e6f; --green-=
80: #016a5e; --green-90: #014c43; --green-100: #00231f; --light-green: #00e=
0ac; --magenta-0: #ffe5f0; --magenta-10: #fec8dd; --magenta-20: #faaccb; --=
magenta-30: #f079a8; --magenta-40: #e14683; --magenta-60: #d21861; --magent=
a-80: #990c43; --magenta-90: #600428; --magenta-100: #26000f; --neutral-gra=
y-0: #f5f5f5; --neutral-gray-5: #e6e6e6; --neutral-gray-10: #ebebeb; --neut=
ral-gray-20: #d9d9d9; --neutral-gray-30: #bcbcbc; --neutral-gray-35: #a9a9a=
9; --neutral-gray-40: #a8a8a8; --neutral-gray-50: #858585; --neutral-gray-6=
0: #707070; --neutral-gray-70: #616161; --neutral-gray-80: #545454; --neutr=
al-gray-90: #2e2e2e; --neutral-gray-100: #1c1c1c; --purple-0: #f7f6fe; --pu=
rple-10: #ddd9f9; --purple-20: #cac3f7; --purple-30: #a598f0; --purple-40: =
#8675eb; --purple-60: #5e47e5; --purple-80: #3d27c0; --purple-90: #1b0d6f; =
--purple-100: #0e073b; --red-0: #ffeae9; --red-10: #ffd1d0; --red-20: #ffa8=
a8; --red-30: #ff7a74; --red-40: #ff4d45; --red-60: #eb0a00; --red-80: #cd0=
800; --red-90: #8f0600; --red-100: #510300; --teal-0: #e6fdfd; --teal-10: #=
ccfafa; --teal-20: #b3f8f8; --teal-30: #80f3f3; --teal-40: #00e6e6; --teal-=
60: #00c4c4; --teal-80: #027d7d; --teal-90: #005c5c; --teal-100: #001f1f; -=
-transparent: hsla(0,0%,100%,0); --white: #fff; --yellow-green: #d5ff00; --=
elevation100-border: 1px solid var(--color-elevation-outline-default-1); --=
elevation100-shadow: 0px 1px 4px 0.5px var(--color-border-base-default-f3);=
 --elevation200-border: 1px solid var(--color-elevation-outline-default-1);=
 --elevation200-shadow: 0px 1px 8px 0.5px var(--color-border-base-default-f=
5); --elevation300-border: 1px solid var(--color-elevation-outline-default-=
1); --elevation300-shadow: 0px 2px 12px 0.5px var(--color-border-base-defau=
lt-f5); --elevation-low-border: 1px solid var(--color-elevation-outline-def=
ault-1); --elevation-low-shadow: 0px 1px 4px 0.5px var(--color-elevation-ba=
se-default-f5); --elevation-medium-border: 1px solid var(--color-elevation-=
outline-default-1); --elevation-medium-shadow: 0px 1px 8px 0.5px var(--colo=
r-elevation-base-default-f4); --elevation-high-border: 1px solid var(--colo=
r-elevation-outline-default-1); --elevation-high-shadow: 0px 2px 12px 0.5px=
 var(--color-elevation-base-default-f3); --radius-half: calc(0.125px*var(--=
rem, 16)); --radius-0: calc(0px*var(--rem, 16)); --radius-1: calc(0.25px*va=
r(--rem, 16)); --radius-2: calc(0.5px*var(--rem, 16)); --radius-3: calc(0.7=
5px*var(--rem, 16)); }

:root, [data-gds-theme=3D"light"] { --color-background-addition-default: #0=
16a5e; --color-background-addition-subdued: #eafaf9; --color-background-bas=
e-default: #fff; --color-background-base-subdued: #f5f5f5; --color-backgrou=
nd-base-inverse: #1c1c1c; --color-background-brand-default: #027e6f; --colo=
r-background-brand-subdued: #eafaf9; --color-background-business-default: #=
707070; --color-background-business-subdued: #f5f5f5; --color-background-cl=
arity-default: #2551da; --color-background-clarity-subdued: #f3f6ff; --colo=
r-background-correctness-default: #eb0a00; --color-background-correctness-s=
ubdued: #ffeae9; --color-background-critical-default: #eb0a00; --color-back=
ground-critical-subdued: #ffeae9; --color-background-deletion-default: #eb0=
a00; --color-background-deletion-subdued: #ffeae9; --color-background-deliv=
ery-default: #5e47e5; --color-background-delivery-subdued: #f7f6fe; --color=
-background-engagement-default: #016a5e; --color-background-engagement-subd=
ued: #eafaf9; --color-background-enterprise-default: #1b0d6f; --color-backg=
round-neutral-default: #707070; --color-background-plagiarism-default: #027=
d7d; --color-background-plagiarism-subdued: #e6fdfd; --color-background-pre=
mium-default: #ffbf47; --color-background-premium-subdued: #fff6e0; --color=
-background-pro-default: #00e0ac; --color-background-success-default: #016a=
5e; --color-background-success-subdued: #eafaf9; --color-background-warning=
-default: #bd5200; --color-background-warning-subdued: #fff6e0; --color-bor=
der-addition-default: #016a5e; --color-border-addition-subdued: #73e1d4; --=
color-border-base-default: #707070; --color-border-base-subdued: #d9d9d9; -=
-color-border-base-inverse: #fff; --color-border-brand-default: #027e6f; --=
color-border-brand-subdued: #73e1d4; --color-border-business-default: #7070=
70; --color-border-business-subdued: #d9d9d9; --color-border-clarity-defaul=
t: #2551da; --color-border-correctness-default: #eb0a00; --color-border-cri=
tical-default: #eb0a00; --color-border-critical-subdued: #ffa8a8; --color-b=
order-deletion-default: #eb0a00; --color-border-deletion-subdued: #ffa8a8; =
--color-border-delivery-default: #5e47e5; --color-border-elevated-default: =
hsla(0,0%,100%,0); --color-border-engagement-default: #016a5e; --color-bord=
er-plagiarism-default: #027d7d; --color-border-premium-default: #ffbf47; --=
color-border-premium-subdued: #ffa10a; --color-border-pro-default: #00e0ac;=
 --color-border-success-default: #016a5e; --color-border-success-subdued: #=
73e1d4; --color-border-warning-default: #bd5200; --color-border-warning-sub=
dued: #ffdc85; --color-elevation-base-default: #707070; --color-elevation-o=
utline-default: #d9d9d9; --color-icon-addition-default: #016a5e; --color-ic=
on-addition-inverse: #2cc9b6; --color-icon-base-default: #707070; --color-i=
con-base-subdued: #bcbcbc; --color-icon-base-inverse: #fff; --color-icon-br=
and-default: #027e6f; --color-icon-business-default: #707070; --color-icon-=
critical-default: #cd0800; --color-icon-critical-inverse: #ff7a74; --color-=
icon-deletion-default: #cd0800; --color-icon-delivery-default: #5e47e5; --c=
olor-icon-delivery-inverse: #a598f0; --color-icon-premium-default: #7a3500;=
 --color-icon-pro-default: #1c1c1c; --color-icon-success-default: #016a5e; =
--color-icon-warning-default: #e57300; --color-icon-warning-inverse: #ffbf4=
7; --color-text-addition-default: #016a5e; --color-text-base-default: #1c1c=
1c; --color-text-base-subdued: #707070; --color-text-base-inverse: #fff; --=
color-text-brand-default: #027e6f; --color-text-business-default: #545454; =
--color-text-clarity-default: #02379e; --color-text-correctness-default: #c=
d0800; --color-text-critical-default: #cd0800; --color-text-dark-default: #=
1c1c1c; --color-text-deletion-default: #cd0800; --color-text-delivery-defau=
lt: #3d27c0; --color-text-engagement-default: #016a5e; --color-text-enterpr=
ise-default: #fff; --color-text-light-default: #fff; --color-text-plagiaris=
m-default: #027d7d; --color-text-premium-default: #7a3500; --color-text-pro=
-default: #1c1c1c; --color-text-success-default: #016a5e; --color-text-warn=
ing-default: #7a3500; --color-elevation-outline-default-1: #d9d9d9; --color=
-border-base-default-f3: hsla(0,0%,43.9%,0.3); --color-border-base-default-=
f5: hsla(0,0%,43.9%,0.5); --color-elevation-base-default-f5: hsla(0,0%,43.9=
%,0.5); --color-elevation-base-default-f4: hsla(0,0%,43.9%,0.4); --color-el=
evation-base-default-f3: hsla(0,0%,43.9%,0.3); }

[data-gds-theme=3D"dark"] { --color-background-addition-default: #2cc9b6; -=
-color-background-addition-subdued: #014c43; --color-background-base-defaul=
t: #1c1c1c; --color-background-base-subdued: #2e2e2e; --color-background-ba=
se-inverse: #fff; --color-background-brand-default: #2cc9b6; --color-backgr=
ound-brand-subdued: #014c43; --color-background-business-default: #bcbcbc; =
--color-background-business-subdued: #2e2e2e; --color-background-clarity-de=
fault: #7d99f0; --color-background-clarity-subdued: #000a62; --color-backgr=
ound-correctness-default: #ff7a74; --color-background-correctness-subdued: =
#510300; --color-background-critical-default: #ff7a74; --color-background-c=
ritical-subdued: #510300; --color-background-deletion-default: #ff7a74; --c=
olor-background-deletion-subdued: #510300; --color-background-delivery-defa=
ult: #a598f0; --color-background-delivery-subdued: #1b0d6f; --color-backgro=
und-engagement-default: #2cc9b6; --color-background-engagement-subdued: #01=
4c43; --color-background-enterprise-default: #fff; --color-background-neutr=
al-default: #bcbcbc; --color-background-plagiarism-default: #80f3f3; --colo=
r-background-plagiarism-subdued: #005c5c; --color-background-premium-defaul=
t: #ffbf47; --color-background-premium-subdued: #ffdc85; --color-background=
-pro-default: #00e0ac; --color-background-success-default: #2cc9b6; --color=
-background-success-subdued: #014c43; --color-background-warning-default: #=
ffbf47; --color-background-warning-subdued: #7a3500; --color-border-additio=
n-default: #2cc9b6; --color-border-addition-subdued: #016a5e; --color-borde=
r-base-default: #707070; --color-border-base-subdued: #545454; --color-bord=
er-base-inverse: #fff; --color-border-brand-default: #2cc9b6; --color-borde=
r-brand-subdued: #016a5e; --color-border-business-default: #bcbcbc; --color=
-border-business-subdued: #707070; --color-border-clarity-default: #7d99f0;=
 --color-border-correctness-default: #ff7a74; --color-border-critical-defau=
lt: #ff7a74; --color-border-critical-subdued: #cd0800; --color-border-delet=
ion-default: #ff7a74; --color-border-deletion-subdued: #cd0800; --color-bor=
der-delivery-default: #a598f0; --color-border-elevated-default: #545454; --=
color-border-engagement-default: #2cc9b6; --color-border-plagiarism-default=
: #80f3f3; --color-border-premium-default: #ffbf47; --color-border-premium-=
subdued: #ffdc85; --color-border-pro-default: #00e0ac; --color-border-succe=
ss-default: #2cc9b6; --color-border-success-subdued: #016a5e; --color-borde=
r-warning-default: #ffbf47; --color-border-warning-subdued: #bd5200; --colo=
r-elevation-base-default: #1c1c1c; --color-elevation-outline-default: #5454=
54; --color-icon-addition-default: #2cc9b6; --color-icon-addition-inverse: =
#016a5e; --color-icon-base-default: #d9d9d9; --color-icon-base-subdued: #70=
7070; --color-icon-base-inverse: #1c1c1c; --color-icon-brand-default: #2cc9=
b6; --color-icon-business-default: #bcbcbc; --color-icon-critical-default: =
#ff7a74; --color-icon-critical-inverse: #cd0800; --color-icon-deletion-defa=
ult: #ff7a74; --color-icon-delivery-default: #a598f0; --color-icon-delivery=
-inverse: #5e47e5; --color-icon-premium-default: #7a3500; --color-icon-pro-=
default: #1c1c1c; --color-icon-success-default: #2cc9b6; --color-icon-warni=
ng-default: #ffbf47; --color-icon-warning-inverse: #e57300; --color-text-ad=
dition-default: #2cc9b6; --color-text-base-default: #fff; --color-text-base=
-subdued: #bcbcbc; --color-text-base-inverse: #1c1c1c; --color-text-brand-d=
efault: #2cc9b6; --color-text-business-default: #bcbcbc; --color-text-clari=
ty-default: #7d99f0; --color-text-correctness-default: #ff7a74; --color-tex=
t-critical-default: #ff7a74; --color-text-deletion-default: #ff7a74; --colo=
r-text-delivery-default: #a598f0; --color-text-engagement-default: #2cc9b6;=
 --color-text-enterprise-default: #1b0d6f; --color-text-plagiarism-default:=
 #00e6e6; --color-text-premium-default: #7a3500; --color-text-pro-default: =
#1c1c1c; --color-text-success-default: #2cc9b6; --color-text-warning-defaul=
t: #ffbf47; --color-elevation-outline-default-1: #545454; --color-elevation=
-base-default-1: #1c1c1c; --elevation-low-border: 1px solid var(--color-ele=
vation-outline-default-1); --elevation-low-shadow: 0px 1px 4px 0.5px var(--=
color-elevation-base-default-1); --elevation-medium-border: 1px solid var(-=
-color-elevation-outline-default-1); --elevation-medium-shadow: 0px 1px 8px=
 0.5px var(--color-elevation-base-default-1); --elevation-high-border: 1px =
solid var(--color-elevation-outline-default-1); --elevation-high-shadow: 0p=
x 2px 12px 0.5px var(--color-elevation-base-default-1); --button-primary-ba=
ckground-default: var(--green-30); --button-primary-background-hover: var(-=
-green-20); --button-primary-background-active: var(--green-10); --button-p=
rimary-text-default: var(--neutral-gray-100); --button-primary-text-hover: =
var(--neutral-gray-100); --button-primary-text-active: var(--neutral-gray-1=
00); --button-primary-shortcut-background-default: var(--green-20); --butto=
n-primary-shortcut-background-hover: var(--green-10); --button-primary-shor=
tcut-background-active: var(--green-20); --button-primary-shortcut-text-def=
ault: var(--neutral-gray-100); --button-primary-shortcut-text-hover: var(--=
neutral-gray-100); --button-primary-shortcut-text-active: var(--neutral-gra=
y-100); --button-secondary-background-default: transparent; --button-second=
ary-background-hover: var(--green-90); --button-secondary-background-active=
: var(--green-80); --button-secondary-border-default: var(--green-30); --bu=
tton-secondary-border-hover: var(--green-30); --button-secondary-border-act=
ive: var(--green-30); --button-secondary-text-default: var(--green-30); --b=
utton-secondary-text-hover: var(--green-30); --button-secondary-text-active=
: var(--green-0); --button-secondary-shortcut-border-default: var(--green-3=
0); --button-secondary-shortcut-border-hover: var(--green-30); --button-sec=
ondary-shortcut-border-active: var(--green-0); --button-secondary-shortcut-=
text-default: var(--green-30); --button-secondary-shortcut-text-hover: var(=
--green-30); --button-secondary-shortcut-text-active: var(--green-0); --but=
ton-tertiary-background-default: transparent; --button-tertiary-background-=
hover: var(--neutral-gray-90); --button-tertiary-background-active: var(--n=
eutral-gray-80); --button-tertiary-border-default: transparent; --button-te=
rtiary-border-hover: var(--neutral-gray-10); --button-tertiary-border-activ=
e: var(--neutral-gray-10); --button-tertiary-text-default: var(--neutral-gr=
ay-10); --button-tertiary-text-hover: var(--neutral-gray-10); --button-tert=
iary-text-active: var(--neutral-gray-10); --button-tertiary-shortcut-border=
-default: var(--neutral-gray-10); --button-tertiary-shortcut-border-hover: =
var(--neutral-gray-10); --button-tertiary-shortcut-border-active: var(--neu=
tral-gray-10); --button-tertiary-shortcut-text-default: var(--neutral-gray-=
10); --button-tertiary-shortcut-text-hover: var(--neutral-gray-10); --butto=
n-tertiary-shortcut-text-active: var(--neutral-gray-10); --button-ghost-bac=
kground-default: transparent; --button-ghost-background-hover: var(--green-=
20); --button-ghost-background-active: var(--green-10); --button-ghost-text=
-default: var(--green-30); --button-ghost-text-hover: var(--neutral-gray-10=
0); --button-ghost-text-active: var(--neutral-gray-100); --button-ghost-sho=
rtcut-background-default: var(--green-30); --button-ghost-shortcut-backgrou=
nd-hover: var(--green-10); --button-ghost-shortcut-background-active: var(-=
-green-20); --button-ghost-shortcut-text-default: var(--neutral-gray-100); =
--button-ghost-shortcut-text-hover: var(--neutral-gray-100); --button-ghost=
-shortcut-text-active: var(--neutral-gray-100); --button-critical-backgroun=
d-default: var(--red-30); --button-critical-background-hover: var(--red-20)=
; --button-critical-background-active: var(--red-10); --button-critical-tex=
t-default: var(--neutral-gray-100); --button-enterprise-text-default: var(-=
-color-text-enterprise-default); --button-enterprise-background-default: va=
r(--color-background-enterprise-default); --button-enterprise-background-ho=
ver: var(--purple-20); --button-enterprise-background-active: var(--purple-=
10); }

:root { --space-quarter: calc(0.0625px*var(--rem, 16)); --space-half: calc(=
0.125px*var(--rem, 16)); --space-0: calc(0px*var(--rem, 16)); --space-1: ca=
lc(0.25px*var(--rem, 16)); --space-2: calc(0.5px*var(--rem, 16)); --space-3=
: calc(0.75px*var(--rem, 16)); --space-4: calc(1px*var(--rem, 16)); --space=
-5: calc(1.25px*var(--rem, 16)); --space-6: calc(1.5px*var(--rem, 16)); --s=
pace-8: calc(2px*var(--rem, 16)); --space-10: calc(2.5px*var(--rem, 16)); -=
-space-12: calc(3px*var(--rem, 16)); --space-14: calc(3.5px*var(--rem, 16))=
; --space-16: calc(4px*var(--rem, 16)); --space-18: calc(4.5px*var(--rem, 1=
6)); --space-20: calc(5px*var(--rem, 16)); }

:host, :root { --rem: 16; --font-stack-inter: Inter,-apple-system,BlinkMacS=
ystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Helvetica Neue",sans-s=
erif; --font-stack-matter: Matter,Inter,-apple-system,BlinkMacSystemFont,"S=
egoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; }

.gds-token-typography-heading-large, .gds-token-typography-heading-medium, =
.gds-token-typography-heading-small, .gds-token-typography-heading-x-small,=
 .gds-token-typography-heading-xx-small, .gds-token-typography-text-large, =
.gds-token-typography-text-medium, .gds-token-typography-text-small, .gds-t=
oken-typography-text-x-small { color-scheme: unset; forced-color-adjust: un=
set; mask: unset; math-depth: unset; position: unset; position-anchor: unse=
t; text-size-adjust: unset; appearance: unset; color: unset; font-family: u=
nset; font-feature-settings: "ss03", "ss01"; font-kerning: unset; font-opti=
cal-sizing: unset; font-palette: unset; font-size: unset; font-size-adjust:=
 unset; font-stretch: unset; font-style: unset; font-synthesis: unset; font=
-variant: unset; font-variation-settings: unset; font-weight: 400; position=
-area: unset; text-orientation: unset; text-rendering: unset; text-spacing-=
trim: unset; -webkit-font-smoothing: antialiased; -webkit-locale: unset; -w=
ebkit-text-orientation: unset; -webkit-writing-mode: unset; writing-mode: u=
nset; zoom: unset; accent-color: unset; place-content: unset; place-items: =
unset; place-self: unset; alignment-baseline: unset; anchor-name: unset; an=
chor-scope: unset; animation-composition: unset; animation: unset; app-regi=
on: unset; aspect-ratio: unset; backdrop-filter: unset; backface-visibility=
: unset; background: unset; background-blend-mode: unset; baseline-shift: u=
nset; baseline-source: unset; block-size: unset; border-block: unset; borde=
r: unset; border-radius: unset; border-collapse: unset; border-end-end-radi=
us: unset; border-end-start-radius: unset; border-inline: unset; border-sta=
rt-end-radius: unset; border-start-start-radius: unset; inset: unset; box-d=
ecoration-break: unset; box-shadow: unset; box-sizing: unset; break-after: =
unset; break-before: unset; break-inside: unset; buffered-rendering: unset;=
 caption-side: unset; caret-color: unset; clear: unset; clip: unset; clip-p=
ath: unset; clip-rule: unset; color-interpolation: unset; color-interpolati=
on-filters: unset; color-rendering: unset; columns: unset; column-fill: uns=
et; gap: unset; column-rule: unset; column-span: unset; contain: unset; con=
tain-intrinsic-block-size: unset; contain-intrinsic-size: unset; contain-in=
trinsic-inline-size: unset; container: unset; content: unset; content-visib=
ility: unset; counter-increment: unset; counter-reset: unset; counter-set: =
unset; cursor: unset; cx: unset; cy: unset; d: unset; display: unset; domin=
ant-baseline: unset; empty-cells: unset; field-sizing: unset; fill: unset; =
fill-opacity: unset; fill-rule: unset; filter: unset; flex: unset; flex-flo=
w: unset; float: unset; flood-color: unset; flood-opacity: unset; grid: uns=
et; grid-area: unset; height: unset; hyphenate-character: unset; hyphenate-=
limit-chars: unset; hyphens: unset; image-orientation: unset; image-renderi=
ng: unset; initial-letter: unset; inline-size: unset; inset-block: unset; i=
nset-inline: unset; interpolate-size: unset; isolation: unset; letter-spaci=
ng: normal; lighting-color: unset; line-break: unset; line-height: unset; l=
ist-style: unset; margin-block: unset; margin: 0px; margin-inline: unset; m=
arker: unset; mask-type: unset; math-shift: unset; math-style: unset; max-b=
lock-size: unset; max-height: unset; max-inline-size: unset; max-width: uns=
et; min-block-size: unset; min-height: unset; min-inline-size: unset; min-w=
idth: unset; mix-blend-mode: unset; object-fit: unset; object-position: uns=
et; object-view-box: unset; offset: unset; opacity: unset; order: unset; or=
phans: unset; outline: unset; outline-offset: unset; overflow-anchor: unset=
; overflow-clip-margin: unset; overflow-wrap: unset; overflow: unset; overl=
ay: unset; overscroll-behavior-block: unset; overscroll-behavior-inline: un=
set; overscroll-behavior: unset; padding-block: unset; padding: 0px; paddin=
g-inline: unset; page: unset; page-orientation: unset; paint-order: unset; =
perspective: unset; perspective-origin: unset; pointer-events: unset; posit=
ion-try: unset; position-visibility: unset; quotes: unset; r: unset; resize=
: unset; rotate: unset; ruby-align: unset; ruby-position: unset; rx: unset;=
 ry: unset; scale: unset; scroll-behavior: unset; scroll-margin-block: unse=
t; scroll-margin: unset; scroll-margin-inline: unset; scroll-padding-block:=
 unset; scroll-padding: unset; scroll-padding-inline: unset; scroll-snap-al=
ign: unset; scroll-snap-stop: unset; scroll-snap-type: unset; scroll-timeli=
ne: unset; scrollbar-color: unset; scrollbar-gutter: unset; scrollbar-width=
: unset; shape-image-threshold: unset; shape-margin: unset; shape-outside: =
unset; shape-rendering: unset; size: unset; speak: unset; stop-color: unset=
; stop-opacity: unset; stroke: unset; stroke-dasharray: unset; stroke-dasho=
ffset: unset; stroke-linecap: unset; stroke-linejoin: unset; stroke-miterli=
mit: unset; stroke-opacity: unset; stroke-width: unset; tab-size: unset; ta=
ble-layout: unset; text-align: unset; text-align-last: unset; text-anchor: =
unset; text-combine-upright: unset; text-decoration: unset; text-decoration=
-skip-ink: unset; text-emphasis: unset; text-emphasis-position: unset; text=
-indent: unset; text-overflow: unset; text-shadow: unset; text-transform: u=
nset; text-underline-offset: unset; text-underline-position: unset; text-wr=
ap: unset; timeline-scope: unset; touch-action: unset; transform: unset; tr=
ansform-box: unset; transform-origin: unset; transform-style: unset; transi=
tion: unset; translate: unset; user-select: unset; vector-effect: unset; ve=
rtical-align: unset; view-timeline: unset; view-transition-class: unset; vi=
ew-transition-name: unset; visibility: unset; border-spacing: unset; -webki=
t-box-align: unset; -webkit-box-decoration-break: unset; -webkit-box-direct=
ion: unset; -webkit-box-flex: unset; -webkit-box-ordinal-group: unset; -web=
kit-box-orient: unset; -webkit-box-pack: unset; -webkit-box-reflect: unset;=
 -webkit-line-break: unset; -webkit-line-clamp: unset; -webkit-mask-box-ima=
ge: unset; -webkit-print-color-adjust: unset; -webkit-rtl-ordering: unset; =
-webkit-ruby-position: unset; -webkit-tap-highlight-color: unset; -webkit-t=
ext-combine: unset; -webkit-text-decorations-in-effect: unset; -webkit-text=
-fill-color: unset; -webkit-text-security: unset; -webkit-text-stroke: unse=
t; -webkit-user-drag: unset; white-space-collapse: unset; widows: unset; wi=
dth: unset; will-change: unset; word-break: unset; word-spacing: unset; x: =
unset; y: unset; z-index: unset; }

.gds-token-typography-heading-large { font-size: calc(2px*(var(--rem) - 2))=
; letter-spacing: -0.0025em; }

.gds-token-typography-heading-large, .gds-token-typography-heading-medium {=
 font-family: var(--font-stack-matter); line-height: calc(2.286px*(var(--re=
m) - 2)); font-weight: 700; }

.gds-token-typography-heading-medium { font-size: calc(1.714px*(var(--rem) =
- 2)); letter-spacing: -0.002em; }

.gds-token-typography-heading-small { font-size: calc(1.429px*(var(--rem) -=
 2)); }

.gds-token-typography-heading-small, .gds-token-typography-heading-x-small =
{ font-family: var(--font-stack-matter); line-height: calc(1.7144px*(var(--=
rem) - 2)); font-weight: 600; }

.gds-token-typography-heading-x-small { font-size: calc(1.143px*(var(--rem)=
 - 2)); }

.gds-token-typography-heading-xx-small { font-family: var(--font-stack-matt=
er); font-size: calc(1px*(var(--rem) - 2)); line-height: calc(1.5px*(var(--=
rem) - 2)); font-weight: 600; }

.gds-token-typography-text-large { font-family: var(--font-stack-inter); fo=
nt-size: calc(1.286px*(var(--rem) - 2)); line-height: calc(2.2862px*(var(--=
rem) - 2)); }

.gds-token-typography-text-medium { font-family: var(--font-stack-inter); f=
ont-size: calc(1.143px*(var(--rem) - 2)); line-height: calc(1.714px*(var(--=
rem) - 2)); }

.gds-token-typography-text-small { font-family: var(--font-stack-inter); fo=
nt-size: calc(1px*(var(--rem) - 2)); line-height: calc(1.51px*(var(--rem) -=
 2)); }

.gds-token-typography-text-x-small { font-family: var(--font-stack-inter); =
font-size: calc(0.86px*(var(--rem) - 2)); line-height: calc(1.2868px*(var(-=
-rem) - 2)); }

.gds-typography { margin: 0px; padding: 0px; text-align: inherit; font-fami=
ly: var(--font-stack-inter); font-feature-settings: "ss01", "cv08"; -webkit=
-font-smoothing: antialiased; }

.gds-text-large { font-size: calc(1.286px*(var(--rem) - 2)); line-height: c=
alc(2.2862px*(var(--rem) - 2)); }

.gds-text-medium { font-size: calc(1.143px*(var(--rem) - 2)); line-height: =
calc(1.714px*(var(--rem) - 2)); }

.gds-text-small { font-size: calc(1px*(var(--rem) - 2)); line-height: calc(=
1.51px*(var(--rem) - 2)); }

.gds-text-xsmall { font-size: calc(0.86px*(var(--rem) - 2)); line-height: c=
alc(1.2868px*(var(--rem) - 2)); }

.gds-heading { font-weight: 700; font-family: var(--font-stack-matter); fon=
t-feature-settings: normal; }

.gds-heading-large { font-size: calc(2px*(var(--rem) - 2)); letter-spacing:=
 -0.0025em; }

.gds-heading-large, .gds-heading-medium { line-height: calc(2.286px*(var(--=
rem) - 2)); }

.gds-heading-medium { font-size: calc(1.714px*(var(--rem) - 2)); letter-spa=
cing: -0.002em; }

.gds-heading-small { font-size: calc(1.429px*(var(--rem) - 2)); }

.gds-heading-small, .gds-heading-xsmall { font-weight: 600; line-height: ca=
lc(1.7144px*(var(--rem) - 2)); }

.gds-heading-xsmall { font-size: calc(1.143px*(var(--rem) - 2)); }

.gds-heading-xxsmall { font-weight: 600; font-size: calc(1px*(var(--rem) - =
2)); line-height: calc(1.5px*(var(--rem) - 2)); }

:host, :root { --z-index-modal: 1000; --z-index-popover: 1010; --z-index-to=
oltip: 1020; }

.gds-badge { box-sizing: border-box; padding: 0px 6px; color: var(--color-t=
ext-base-inverse); border: 1px solid var(--white); border-radius: var(--rad=
ius-3); display: inline-flex; justify-content: center; min-width: 18px; hei=
ght: fit-content; }

.gds-badge:focus-visible { outline: 2px solid var(--color-border-brand-defa=
ult); }

.gds-badge-tooltip { cursor: pointer; }

.gds-sr-only { position: absolute; width: 1px; height: 1px; margin: -1px; p=
adding: 0px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); clip-path: i=
nset(50%); border: 0px; white-space: nowrap; user-select: none; }

.gds-sr-only::after, .gds-sr-only::before { content: "=C2=A0"; }

.gds-tooltip { color: var(--color-text-light-default); border: 1px solid va=
r(--color-border-elevated-default); border-radius: var(--radius-1); box-siz=
ing: border-box; width: max-content; max-width: 200px; transition-property:=
 opacity, transform; z-index: var(--z-index-tooltip); }

.gds-tooltip-content { background-color: var(--color-background-base-subdue=
d); border-radius: var(--radius-1); display: flex; justify-content: space-b=
etween; gap: var(--space-2); padding: var(--space-1) var(--space-2); }

.gds-tooltip-content-annotation { color: var(--color-text-base-subdued); bo=
rder: 1px solid var(--color-border-base-subdued); border-radius: var(--radi=
us-1); height: fit-content; padding: 0 var(--space-1); }

.gds-arrow { fill: var(--neutral-gray-90); width: 14px; }

.gds-tooltip[data-status=3D"close"], .gds-tooltip[data-status=3D"open"] { t=
ransition-duration: 0.2s; }

.gds-tooltip[data-status=3D"close"], .gds-tooltip[data-status=3D"initial"] =
{ opacity: 0; }

.gds-tooltip[data-status=3D"close"][data-placement^=3D"top"], .gds-tooltip[=
data-status=3D"initial"][data-placement^=3D"top"] { transform: translateY(5=
px); }

.gds-tooltip[data-status=3D"close"][data-placement^=3D"bottom"], .gds-toolt=
ip[data-status=3D"initial"][data-placement^=3D"bottom"] { transform: transl=
ateY(-5px); }

.gds-tooltip[data-status=3D"close"][data-placement^=3D"left"], .gds-tooltip=
[data-status=3D"initial"][data-placement^=3D"left"] { transform: translateX=
(5px); }

.gds-tooltip[data-status=3D"close"][data-placement^=3D"right"], .gds-toolti=
p[data-status=3D"initial"][data-placement^=3D"right"] { transform: translat=
eX(-5px); }

@media (prefers-reduced-motion) {
  .gds-tooltip[data-status=3D"close"], .gds-tooltip[data-status=3D"open"] {=
 transition-duration: 0ms; }
}

.gds-box { display: block; box-sizing: border-box; }

.gds-box-elevation-low { border: var(--elevation-low-border); box-shadow: v=
ar(--elevation-low-shadow); }

.gds-box-elevation-medium { border: var(--elevation-medium-border); box-sha=
dow: var(--elevation-medium-shadow); }

.gds-box-elevation-high { border: var(--elevation-high-border); box-shadow:=
 var(--elevation-high-shadow); }

.gds-icon { fill: transparent; box-sizing: border-box; overflow-clip-margin=
: border-box; overflow: auto; }

.gds-icon-default [stroke] { stroke: var(--color-icon-base-default); }

.gds-icon-default [fill] { fill: var(--color-icon-base-default); }

.gds-icon-business [stroke] { stroke: var(--color-icon-business-default); }

.gds-icon-business [fill] { fill: var(--color-icon-business-default); }

.gds-icon-addition [stroke] { stroke: var(--color-icon-addition-default); }

.gds-icon-addition [fill] { fill: var(--color-icon-addition-default); }

.gds-icon-critical [stroke] { stroke: var(--color-icon-critical-default); }

.gds-icon-critical [fill] { fill: var(--color-icon-critical-default); }

.gds-icon-deletion [stroke] { stroke: var(--color-icon-deletion-default); }

.gds-icon-deletion [fill] { fill: var(--color-icon-deletion-default); }

.gds-icon-premium [stroke] { stroke: var(--color-icon-premium-default); }

.gds-icon-premium [fill] { fill: var(--color-icon-premium-default); }

.gds-icon-success [stroke] { stroke: var(--color-icon-success-default); }

.gds-icon-success [fill] { fill: var(--color-icon-success-default); }

.gds-icon-warning [stroke] { stroke: var(--color-icon-warning-default); }

.gds-icon-warning [fill] { fill: var(--color-icon-warning-default); }

.gds-icon-inverse [stroke] { stroke: var(--color-icon-base-inverse); }

.gds-icon-inverse [fill] { fill: var(--color-icon-base-inverse); }

.gds-icon-brand [stroke] { stroke: var(--color-icon-brand-default); }

.gds-icon-brand [fill] { fill: var(--color-icon-brand-default); }

.gds-icon-inherit [stroke] { stroke: currentcolor; }

.gds-icon-inherit [fill], [data-icon=3D"InterfaceError"] [fill], [data-icon=
=3D"InterfaceMinus"] [fill], [data-icon=3D"InterfaceOk"] [fill], [data-icon=
=3D"InterfaceSuicidePrevention"] [fill], [data-icon=3D"InterfaceWarning"] [=
fill] { fill: currentcolor; }

[data-icon=3D"InterfaceMinus"] { color: var(--color-icon-critical-default);=
 }

[data-icon=3D"InterfaceMinus"].gds-icon-inverse { color: var(--color-icon-c=
ritical-inverse); }

[data-icon=3D"InterfaceOk"] { color: var(--color-icon-addition-default); }

[data-icon=3D"InterfaceOk"].gds-icon-inverse { color: var(--color-icon-addi=
tion-inverse); }

[data-icon=3D"InterfaceError"] { color: var(--color-icon-critical-default);=
 }

[data-icon=3D"InterfaceError"].gds-icon-inverse { color: var(--color-icon-c=
ritical-inverse); }

[data-icon=3D"InterfaceWarning"] { color: var(--color-icon-warning-default)=
; }

[data-icon=3D"InterfaceWarning"].gds-icon-inverse { color: var(--color-icon=
-warning-inverse); }

[data-icon=3D"InterfaceSuicidePrevention"] { color: var(--color-icon-delive=
ry-default); }

[data-icon=3D"InterfaceSuicidePrevention"].gds-icon-inverse { color: var(--=
color-icon-delivery-inverse); }

.gds-button { align-items: center; align-self: start; appearance: none; bor=
der-radius: var(--radius-1); border: none; box-sizing: border-box; cursor: =
pointer; display: inline-flex; flex-direction: row; gap: var(--space-1); ju=
stify-content: center; outline: none; padding: 0 var(--space-2); text-align=
: start; transition: background-color 0.1s; white-space: nowrap; position: =
relative; }

:host, :root, [data-gds-theme=3D"light"] { --button-primary-background-defa=
ult: var(--green-60); --button-primary-background-hover: var(--green-80); -=
-button-primary-background-active: var(--green-90); --button-primary-text-d=
efault: var(--white); --button-primary-text-hover: var(--white); --button-p=
rimary-text-active: var(--white); --button-primary-shortcut-background-defa=
ult: var(--green-90); --button-primary-shortcut-background-hover: var(--gre=
en-90); --button-primary-shortcut-background-active: var(--green-60); --but=
ton-primary-shortcut-text-default: var(--white); --button-primary-shortcut-=
text-hover: var(--white); --button-primary-shortcut-text-active: var(--whit=
e); --button-secondary-background-default: transparent; --button-secondary-=
background-hover: var(--green-0); --button-secondary-background-active: var=
(--green-10); --button-secondary-border-default: var(--green-60); --button-=
secondary-border-hover: var(--green-60); --button-secondary-border-active: =
var(--green-60); --button-secondary-text-default: var(--green-60); --button=
-secondary-text-hover: var(--green-90); --button-secondary-text-active: var=
(--green-90); --button-secondary-shortcut-border-default: var(--green-60); =
--button-secondary-shortcut-border-hover: var(--green-90); --button-seconda=
ry-shortcut-border-active: var(--green-90); --button-secondary-shortcut-tex=
t-default: var(--green-60); --button-secondary-shortcut-text-hover: var(--g=
reen-90); --button-secondary-shortcut-text-active: var(--green-90); --butto=
n-tertiary-background-default: transparent; --button-tertiary-background-ho=
ver: var(--neutral-gray-10); --button-tertiary-background-active: var(--neu=
tral-gray-20); --button-tertiary-border-default: transparent; --button-tert=
iary-border-hover: var(--neutral-gray-40); --button-tertiary-border-active:=
 var(--neutral-gray-40); --button-tertiary-text-default: var(--neutral-gray=
-60); --button-tertiary-text-hover: var(--neutral-gray-80); --button-tertia=
ry-text-active: var(--neutral-gray-80); --button-tertiary-shortcut-border-d=
efault: var(--neutral-gray-60); --button-tertiary-shortcut-border-hover: va=
r(--neutral-gray-80); --button-tertiary-shortcut-border-active: var(--neutr=
al-gray-80); --button-tertiary-shortcut-text-default: var(--neutral-gray-60=
); --button-tertiary-shortcut-text-hover: var(--neutral-gray-80); --button-=
tertiary-shortcut-text-active: var(--neutral-gray-80); --button-ghost-backg=
round-default: transparent; --button-ghost-background-hover: var(--green-80=
); --button-ghost-background-active: var(--green-90); --button-ghost-text-d=
efault: var(--green-60); --button-ghost-text-hover: var(--white); --button-=
ghost-text-active: var(--white); --button-ghost-shortcut-background-default=
: var(--green-60); --button-ghost-shortcut-background-hover: var(--green-90=
); --button-ghost-shortcut-background-active: var(--green-60); --button-gho=
st-shortcut-text-default: var(--white); --button-ghost-shortcut-text-hover:=
 var(--white); --button-ghost-shortcut-text-active: var(--white); --button-=
premium-background-default: var(--gold-30); --button-premium-background-hov=
er: var(--gold-20); --button-premium-background-active: var(--gold-10); --b=
utton-premium-text-default: var(--gold-90); --button-premium-text-hover: va=
r(--gold-90); --button-premium-text-active: var(--gold-90); --button-critic=
al-background-default: var(--red-60); --button-critical-background-hover: v=
ar(--red-80); --button-critical-background-active: var(--red-90); --button-=
critical-text-default: var(--white); --button-pro-text-default: var(--color=
-text-pro-default); --button-pro-text-hover: var(--light-green); --button-p=
ro-text-active: var(--neutral-gray-20); --button-pro-background-default: va=
r(--color-background-pro-default); --button-pro-background-hover: var(--neu=
tral-gray-100); --button-pro-background-active: var(--neutral-gray-100); --=
button-enterprise-text-default: var(--color-text-enterprise-default); --but=
ton-enterprise-background-default: var(--color-background-enterprise-defaul=
t); --button-enterprise-background-hover: var(--purple-80); --button-enterp=
rise-background-active: var(--purple-60); }

.gds-button-medium { height: 32px; }

.gds-button-small { height: 24px; }

.gds-icon-button-medium { width: 32px; }

.gds-icon-button-small { width: 24px; }

.gds-button .gds-icon:first-child { margin-inline-start: calc(var(--space-1=
)*-1); }

.gds-button .gds-icon:last-child { margin-inline-end: calc(var(--space-1)*-=
1); }

a.gds-button:hover { text-decoration: none; }

.gds-button-focus-visible { outline: 2px solid var(--color-border-brand-def=
ault); outline-offset: 2px; }

.gds-button-disabled { cursor: not-allowed; opacity: 0.4; }

.gds-button-full { width: 100%; }

.gds-button-pressed { background-color: var(--gds-button-background-color-a=
ctive); color: var(--gds-button-color-active); }

.gds-button-shortcut { border-radius: var(--radius-1); padding-inline: var(=
--space-1); margin-inline-start: var(--space-1); box-shadow: none; border: =
none; }

.gds-button-primary { color: var(--button-primary-text-default); background=
-color: var(--button-primary-background-default); }

.gds-button-primary:hover:not(.gds-button-disabled, .gds-button-pressed), .=
gds-button-primary[data-simulate=3D"hover"]:not(.gds-button-disabled, .gds-=
button-pressed) { color: var(--button-primary-text-default); background-col=
or: var(--button-primary-background-hover); }

.gds-button-primary:hover:not(.gds-button-disabled, .gds-button-pressed) .g=
ds-button-shortcut, .gds-button-primary[data-simulate=3D"hover"]:not(.gds-b=
utton-disabled, .gds-button-pressed) .gds-button-shortcut { background-colo=
r: var(--button-primary-shortcut-background-hover); }

.gds-button-primary.gds-button-pressed { background-color: var(--button-pri=
mary-background-active); }

.gds-button-primary .gds-button-shortcut { color: var(--button-primary-shor=
tcut-text-default); background-color: var(--button-primary-shortcut-backgro=
und-default); }

.gds-button-primary.gds-button-pressed .gds-button-shortcut { background-co=
lor: var(--button-primary-shortcut-background-active); }

.gds-button-secondary { color: var(--button-secondary-text-default); backgr=
ound-color: var(--button-secondary-background-default); box-shadow: inset 0=
 0 0 1px var(--button-secondary-border-default); }

.gds-button-secondary:hover:not(.gds-button-disabled, .gds-button-pressed),=
 .gds-button-secondary[data-simulate=3D"hover"]:not(.gds-button-disabled, .=
gds-button-pressed) { color: var(--button-secondary-text-hover); background=
-color: var(--button-secondary-background-hover); }

.gds-button-secondary:hover:not(.gds-button-disabled, .gds-button-pressed) =
.gds-button-shortcut, .gds-button-secondary[data-simulate=3D"hover"]:not(.g=
ds-button-disabled, .gds-button-pressed) .gds-button-shortcut { background-=
color: transparent; border-color: var(--button-secondary-shortcut-border-ho=
ver); color: var(--button-secondary-shortcut-text-hover); }

.gds-button-secondary.gds-button-pressed { background-color: var(--button-s=
econdary-background-active); color: var(--button-secondary-text-active); }

.gds-button-secondary.gds-button-pressed .gds-button-shortcut { border-colo=
r: var(--button-secondary-shortcut-border-active); }

.gds-button-secondary .gds-button-shortcut { background-color: transparent;=
 border: 1px solid var(--button-secondary-shortcut-border-default); border-=
radius: var(--radius-1); }

.gds-button-tertiary { color: var(--button-tertiary-text-default); backgrou=
nd-color: transparent; border-color: transparent; }

.gds-button-tertiary:hover:not(.gds-button-disabled, .gds-button-pressed), =
.gds-button-tertiary[data-simulate=3D"hover"]:not(.gds-button-disabled, .gd=
s-button-pressed) { box-shadow: inset 0 0 0 1px var(--button-tertiary-borde=
r-hover); background-color: var(--button-tertiary-background-hover); color:=
 var(--button-tertiary-text-hover); }

.gds-button-tertiary:hover:not(.gds-button-disabled, .gds-button-pressed) .=
gds-button-shortcut, .gds-button-tertiary[data-simulate=3D"hover"]:not(.gds=
-button-disabled, .gds-button-pressed) .gds-button-shortcut { background-co=
lor: transparent; border: 1px solid var(--button-tertiary-shortcut-border-h=
over); color: var(--button-tertiary-shortcut-text-hover); }

.gds-button-tertiary.gds-button-pressed { box-shadow: inset 0 0 0 1px var(-=
-button-tertiary-border-active); background-color: var(--button-tertiary-ba=
ckground-active); color: var(--button-tertiary-text-active); }

.gds-button-tertiary .gds-button-shortcut { background-color: transparent; =
border: 1px solid var(--button-tertiary-shortcut-border-default); border-ra=
dius: var(--radius-1); color: var(--button-tertiary-shortcut-text-default);=
 }

.gds-button-tertiary.gds-button-pressed .gds-button-shortcut { background-c=
olor: var(--button-tertiary-shortcut-background-active); border: 1px solid =
var(--button-tertiary-shortcut-border-active); color: var(--button-tertiary=
-shortcut-text-active); }

.gds-button-ghost { color: var(--button-ghost-text-default); background-col=
or: var(--button-ghost-background-default); border-color: transparent; }

.gds-button-ghost:hover:not(.gds-button-disabled, .gds-button-pressed), .gd=
s-button-ghost[data-simulate=3D"hover"]:not(.gds-button-disabled, .gds-butt=
on-pressed) { background-color: var(--button-ghost-background-hover); color=
: var(--button-ghost-text-hover); }

.gds-button-ghost:hover:not(.gds-button-disabled, .gds-button-pressed) .gds=
-button-shortcut, .gds-button-ghost[data-simulate=3D"hover"]:not(.gds-butto=
n-disabled, .gds-button-pressed) .gds-button-shortcut { background-color: v=
ar(--button-ghost-shortcut-background-hover); }

.gds-button-ghost.gds-button-pressed { background-color: var(--button-ghost=
-background-active); color: var(--button-ghost-text-active); }

.gds-button-ghost .gds-button-shortcut { background-color: var(--button-gho=
st-shortcut-background-default); border: 1px solid transparent; color: var(=
--button-ghost-shortcut-text-default); }

.gds-button-premium { color: var(--button-premium-text-default); background=
-color: var(--button-premium-background-default); }

.gds-button-premium:hover:not(.gds-button-disabled, .gds-button-pressed), .=
gds-button-premium[data-simulate=3D"hover"]:not(.gds-button-disabled, .gds-=
button-pressed) { background-color: var(--button-premium-background-hover);=
 }

.gds-button-premium.gds-button-pressed { background-color: var(--button-pre=
mium-background-active); }

.gds-button-critical { color: var(--button-critical-text-default); backgrou=
nd-color: var(--button-critical-background-default); }

.gds-button-critical:hover:not(.gds-button-disabled, .gds-button-pressed), =
.gds-button-critical[data-simulate=3D"hover"]:not(.gds-button-disabled, .gd=
s-button-pressed) { background-color: var(--button-critical-background-hove=
r); }

.gds-button-critical.gds-button-pressed { background-color: var(--button-cr=
itical-background-active); }

.gds-button-pro { color: var(--button-pro-text-default); background-color: =
var(--button-pro-background-default); }

.gds-button-pro:hover:not(.gds-button-disabled, .gds-button-pressed), .gds-=
button-pro[data-simulate=3D"hover"]:not(.gds-button-disabled, .gds-button-p=
ressed) { color: var(--button-pro-text-hover); background-color: var(--butt=
on-pro-background-hover); }

.gds-button-pro.gds-button-pressed { color: var(--button-pro-text-active); =
background-color: var(--button-pro-background-hover); }

.gds-button-enterprise { color: var(--button-enterprise-text-default); back=
ground-color: var(--button-enterprise-background-default); }

.gds-button-enterprise:hover:not(.gds-button-disabled, .gds-button-pressed)=
, .gds-button-enterprise[data-simulate=3D"hover"]:not(.gds-button-disabled,=
 .gds-button-pressed) { color: var(--button-enterprise-text-default); backg=
round-color: var(--button-enterprise-background-hover); }

.gds-button-enterprise.gds-button-pressed { background-color: var(--button-=
enterprise-background-active); }

.gds-button-loader { stroke: currentcolor; position: absolute; top: 50%; le=
ft: 50%; transform: translate(-50%, -50%); }

.gds-button-loading .gds-text { color: transparent !important; }

.gds-button-loading .gds-button-shortcut { visibility: hidden; }

.gds-button-loading .gds-icon [stroke] { stroke: transparent; }

.gds-button-loading .gds-icon [fill] { fill: transparent; }

.gds-button-as-link { text-decoration: none; }

.gds-circular-loader-container { display: flex; align-items: center; }

.gds-circular-loader-container-size-small { width: var(--space-4); height: =
var(--space-4); }

.gds-circular-loader-container-size-medium { width: var(--space-5); height:=
 var(--space-5); }

.gds-circular-loader-container-size-large { width: var(--space-6); height: =
var(--space-6); }

.gds-circular-loader { animation: 1.5s ease-in-out 0s infinite normal none =
running spinner, 2s linear 0s infinite normal none running rotate; stroke-d=
asharray: 1px, 200px; stroke-dashoffset: 1px; stroke-linecap: round; transf=
orm-box: fill-box; transform-origin: center center; }

@keyframes spinner {=20
  0% { stroke-dasharray: 1px, 200px; stroke-dashoffset: 1px; }
  50% { stroke-dasharray: 89px, 200px; stroke-dashoffset: -35px; }
  100% { stroke-dasharray: 89px, 200px; stroke-dashoffset: -124px; }
}

@keyframes rotate {=20
  100% { transform: rotate(1turn); }
}

.gds-circular-loader-variant-default { stroke: var(--color-icon-base-defaul=
t); }

.gds-circular-loader-variant-inverse { stroke: var(--color-icon-base-invers=
e); }

.gds-circular-loader-variant-inherit { stroke: currentcolor; }

.gds-circular-loader-small { stroke-width: 5px; }

.gds-circular-loader-medium { stroke-width: 5.5px; }

.gds-circular-loader-large { stroke-width: 6px; }

@media (prefers-reduced-motion: reduce) {
  .gds-circular-loader { animation: auto ease 0s 1 normal none running none=
; stroke-dasharray: 89px, 200px; stroke-dashoffset: -35px; }
}

.gds-branded-loader-container-size-small { width: 24px; height: 24px; }

.gds-branded-loader-container-size-medium { width: 64px; height: 64px; }

.gds-branded-loader-bobble { transform-origin: 50% 50%; transform: scale(0)=
; animation: 2.5s ease-in-out 0s infinite normal forwards running show-puls=
e-hide; }

.gds-branded-loader-bottom-right { animation-delay: 0s; }

.gds-branded-loader-top-left { animation-delay: 0.2s; }

.gds-branded-loader-top-right { animation-delay: 0.4s; }

.gds-branded-loader-bottom-left { animation-delay: 0.6s; }

@media (prefers-reduced-motion: reduce) {
  .gds-branded-loader-bobble { animation: 6.5s ease-in-out 0s infinite norm=
al forwards running show-pulse-hide-5-sec-pause; }
  .gds-branded-loader-bottom-right { animation-delay: 0s; }
  .gds-branded-loader-top-left { animation-delay: 0.2s; }
  .gds-branded-loader-top-right { animation-delay: 0.4s; }
  .gds-branded-loader-bottom-left { animation-delay: 0.6s; }
}

@keyframes show-pulse-hide {=20
  0% { transform: scale(0); }
  18.75% { transform: scale(0.9); }
  37.5% { transform: scale(0.7); }
  56% { transform: scale(0.9); }
  75% { transform: scale(0); }
  100% { transform: scale(0); }
}

@keyframes show-pulse-hide-5-sec-pause {=20
  0% { transform: scale(0); }
  6.25% { transform: scale(0.9); }
  12.5% { transform: scale(0.7); }
  18.75% { transform: scale(0.9); }
  95% { transform: scale(0.9); }
  100% { transform: scale(0); }
}

.simulate-reduced-motion path[class^=3D"gds-branded-loader"] { transform: s=
cale(0.9); animation: auto ease 0s 1 normal none running none !important; }

.gds-checkbox { --gds-checkbox-size: 16px; width: fit-content; border-radiu=
s: var(--space-half); display: flex; flex-direction: column; gap: var(--spa=
ce-1); position: relative; }

.gds-checkbox-input { position: absolute; left: 0px; top: 2px; margin: 0px;=
 width: var(--gds-checkbox-size); height: var(--gds-checkbox-size); }

.gds-checkbox-icon, .gds-checkbox .gds-input-label { cursor: pointer; }

.gds-checkbox-icon { box-sizing: border-box; min-width: var(--gds-checkbox-=
size); width: var(--gds-checkbox-size); height: var(--gds-checkbox-size); b=
order-radius: var(--radius-half); transition-timing-function: cubic-bezier(=
0.4, 0, 0.2, 1); transition-duration: 0.15s; transition-property: color, ba=
ckground-color, border-color, text-decoration-color, fill, stroke, opacity,=
 box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-co=
lor, -webkit-backdrop-filter; }

.gds-checkbox-focus-visible { outline: 2px solid var(--color-background-bra=
nd-default); outline-offset: 2px; }

.gds-checkbox-disabled .gds-input-label { cursor: not-allowed; }

.gds-checkbox-element-disabled { background: var(--color-background-base-su=
bdued); cursor: not-allowed; opacity: 0.4; }

.gds-checkbox-group { all: unset; }

.gds-checkbox-group legend { padding: 0px; }

.gds-checkbox-group-columns { display: grid; grid-template-columns: 1fr aut=
o; column-gap: var(--space-4); row-gap: var(--space-3); margin-top: var(--s=
pace-1); border-radius: var(--space-1); border: 1px solid transparent; padd=
ing: var(--space-1); }

.gds-checkbox-column-1 { grid-template-columns: 1fr; }

.gds-checkbox-column-2 { grid-template-columns: 1fr auto; column-gap: var(-=
-space-4); }

.gds-checkbox-group-row { display: flex; }

.gds-checkbox-group-error { border-radius: var(--space-1); border: 1px soli=
d var(--color-border-critical-default); padding: var(--space-1); }

.gds-checkbox-label-margin, .gds-checkbox .gds-input-label-helper { margin-=
inline-start: calc(var(--space-2) + var(--gds-checkbox-size)); box-decorati=
on-break: clone; -webkit-box-decoration-break: clone; }

.gds-flex { display: flex; flex-flow: row; }

.gds-flex-direction-column { flex-direction: column; }

.gds-flex-wrap { flex-wrap: wrap; }

.gds-flex-elevation-low { border: var(--elevation-low-border); box-shadow: =
var(--elevation-low-shadow); }

.gds-flex-elevation-medium { border: var(--elevation-medium-border); box-sh=
adow: var(--elevation-medium-shadow); }

.gds-flex-elevation-high { border: var(--elevation-high-border); box-shadow=
: var(--elevation-high-shadow); }

.gds-input-error { display: grid; grid-template-columns: 24px 1fr; column-g=
ap: var(--space-1); }

.gds-input-error-message { color: var(--color-text-critical-default); paddi=
ng-top: var(--space-1); }

[data-gds-theme] { color: var(--color-text-base-default); }

.gds-combobox { display: flex; flex-direction: column; flex: 1 1 0%; positi=
on: relative; }

.gds-combobox-icon-button { border: none; background: transparent; top: 32p=
x; }

.gds-combobox-icon-button-content { align-self: center; }

.gds-combobox-listbox { border: 1px solid var(--color-border-base-default);=
 border-radius: var(--radius-1); list-style: none; background-color: var(--=
color-background-base-default); margin-right: 0px; margin-bottom: 0px; marg=
in-left: 0px; margin-top: var(--space-1); padding: var(--space-2); cursor: =
pointer; max-height: 165px; overflow: auto; }

.gds-combobox-listbox-item { --combobox-item-hover: var(--neutral-gray-60);=
 display: flex; align-items: center; justify-content: space-between; gap: v=
ar(--space-1); min-height: 32px; padding: var(--space-half) var(--space-2);=
 border-radius: var(--radius-1); }

.gds-combobox-listbox-item[aria-disabled=3D"true"] { opacity: 0.4; cursor: =
not-allowed; }

.gds-combobox-listbox-item-focused { background-color: var(--combobox-item-=
hover); color: var(--color-text-base-inverse); }

.gds-combobox-listbox-item-focused p, .gds-combobox-listbox-item-focused sp=
an { color: var(--color-text-base-inverse) !important; }

.gds-combobox-listbox-item-focused .gds-icon path { stroke: var(--color-ico=
n-base-inverse); }

.gds-combobox .gds-input-decoration { width: 24px; height: 24px; position: =
absolute; left: 8px; display: flex; align-items: center; justify-content: c=
enter; }

.gds-combobox .gds-input-decoration + .gds-text-field-input { padding-left:=
 40px; }

.gds-form { --form-row-spacing: var(--space-2); --form-footer-margin-top: v=
ar(--space-2); --form-fieldset-margin-top: var(--space-1); --form-header-ma=
rgin-bottom: var(--space-0); display: flex; flex-direction: column; gap: va=
r(--form-row-spacing); }

.gds-form.gds-form-standard { --form-row-spacing: var(--space-3); --form-fo=
oter-margin-top: var(--space-3); --form-fieldset-margin-top: var(--space-3)=
; --form-header-margin-bottom: var(--space-1); }

.gds-form.gds-form-spacious { --form-row-spacing: var(--space-4); --form-fo=
oter-margin-top: var(--space-6); --form-fieldset-margin-top: var(--space-8)=
; --form-header-margin-bottom: var(--space-4); }

.gds-form-header { gap: var(--space-half); flex-direction: column; margin-b=
ottom: var(--form-header-margin-bottom); }

.gds-form-header, .gds-form-row { display: flex; }

.gds-form-row { gap: var(--space-3); flex-flow: wrap; }

.gds-form-fieldset { border: none; gap: var(--form-row-spacing); margin: va=
r(--form-fieldset-margin-top) 0; }

.gds-form-fieldset, .gds-form-fieldset legend { padding: 0px; display: flex=
; flex-direction: column; }

.gds-form-fieldset legend { margin-bottom: var(--form-row-spacing); }

.gds-form-fieldset .gds-form-legend-indicator { color: var(--color-text-bas=
e-subdued); padding-inline-start: var(--space-2); }

.gds-form-footer { margin-top: var(--form-footer-margin-top); display: flex=
; gap: var(--space-2); }

.gds-link { --link-underline-thickness: max(1.5px,0.0625rem); appearance: n=
one; display: inline; text-decoration-line: underline; text-decoration-styl=
e: initial; text-decoration-color: initial; text-decoration-thickness: var(=
--link-underline-thickness); text-underline-offset: 0.2em; text-decoration-=
skip-ink: none; }

.gds-link-block { display: block; width: fit-content; }

.gds-link-inline-block { display: inline-block; }

.gds-link-bold { font-weight: 700; }

.gds-link-underline-hover { text-decoration-line: none; }

.gds-link:hover, .gds-link[data-simulate=3D"hover"] { text-decoration-line:=
 underline; text-decoration-thickness: max(3px, 0.1875rem, 0.12em); }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
}

.gds-link-primary { color: var(--color-text-brand-default); text-decoration=
-color: var(--color-border-brand-default); }

.gds-link-secondary { color: var(--color-text-base-subdued); text-decoratio=
n-color: var(--color-text-base-subdued); }

.gds-link-inherit { color: inherit; text-decoration-color: inherit; }

.gds-link-focus-visible { outline: 2px solid var(--color-border-brand-defau=
lt); outline-offset: 2px; border-radius: var(--radius-half); }

.gds-menu-container { position: relative; display: inline-block; }

.gds-menu-dropdown { border-radius: var(--radius-1); border: var(--elevatio=
n-low-border); box-shadow: var(--elevation-low-shadow); z-index: var(--z-in=
dex-popover); --color-menu-background-hover: var(--neutral-gray-10); --colo=
r-menu-background-active: var(--neutral-gray-20); --color-menu-icon-hover: =
var(--neutral-gray-100); }

[data-gds-theme=3D"dark"] .gds-menu-dropdown { --color-menu-background-hove=
r: var(--neutral-gray-80); --color-menu-background-active: var(--neutral-gr=
ay-60); --color-menu-icon-hover: var(--white); }

.gds-menu-list { list-style: none; margin: 0px; padding: var(--space-2); fl=
ex-direction: column; gap: var(--space-1); border-radius: var(--radius-1); =
background-color: var(--color-background-base-default); }

.gds-menu-item, .gds-menu-list { display: flex; }

.gds-menu-item { box-sizing: border-box; min-height: 32px; padding: 0 var(-=
-space-2); color: var(--color-text-base-default); gap: var(--space-2); alig=
n-items: center; cursor: pointer; border-radius: var(--radius-0); width: ma=
x-content; min-width: 100%; }

.gds-menu-item:hover:not(.gds-menu-item-disabled) { background: var(--color=
-menu-background-hover); border-radius: var(--radius-1); }

.gds-menu-item:hover:not(.gds-menu-item-disabled) .gds-icon [stroke] { stro=
ke: var(--color-menu-icon-hover); }

.gds-menu-item:hover:not(.gds-menu-item-disabled) .gds-icon [fill] { fill: =
var(--color-menu-icon-hover); }

.gds-menu-item:active:not(.gds-menu-item-disabled) { background-color: var(=
--color-menu-background-active); }

.gds-menu-group li { padding: var(--space-1) var(--space-2); }

.gds-menu-item-pressed li:focus { border-radius: var(--radius-1); outline: =
2px solid var(--color-border-brand-default); outline-offset: 2px; position:=
 relative; z-index: 10; opacity: 1; }

.gds-menu-item-container li:focus { border-radius: var(--radius-1); outline=
: none; background-color: var(--color-menu-background-active); }

.gds-menu-item-disabled { cursor: not-allowed; }

.gds-menu-item-disabled span, .gds-menu-item-disabled svg { opacity: 0.4; }

.gds-menu-separator { margin: var(--space-1) calc(var(--space-2)*-1); borde=
r-radius: var(--radius-0); border-top: 1px solid var(--color-border-base-su=
bdued); }

.gds-menu-section { display: flex; flex-direction: column; gap: var(--space=
-1); }

.gds-menu-section-label { display: block; padding: var(--space-1) var(--spa=
ce-2); }

.gds-menu-item-link { text-decoration: none; background: none; color: inher=
it; }

.gds-menu-group { padding: var(--space-0); display: flex; flex-direction: c=
olumn; gap: var(--space-1); }

.gds-modal-backdrop { display: none; position: fixed; overflow-y: auto; ins=
et: 0px; z-index: 1; }

.gds-modal-backdrop-active { display: block; }

:host, :root { --animation-duration: 0.2s; }

.gds-modal-container { align-items: center; animation: fade-in var(--animat=
ion-duration) ease-in-out forwards; background-color: rgba(71, 75, 88, 0.6)=
; display: flex; height: 100%; justify-content: center; position: fixed; to=
p: 0px; width: 100%; z-index: var(--z-index-modal); }

.gds-modal-container.hide { animation: fade-out var(--animation-duration) e=
ase-in-out forwards; }

.gds-modal-overlay { animation: fade-in var(--animation-duration) ease-in-o=
ut forwards,scale-in var(--animation-duration) ease-in-out forwards; backgr=
ound-color: var(--color-background-base-default); border-radius: var(--radi=
us-2); border: 1px solid var(--color-border-base-subdued); box-shadow: var(=
--elevation300-shadow); position: relative; }

.gds-modal-overlay.hide { animation: fade-out var(--animation-duration) eas=
e-in-out forwards,scale-out var(--animation-duration) ease-in-out forwards;=
 }

.gds-modal-content { display: flex; flex-direction: column; max-height: 75v=
h; min-width: 320px; position: relative; overflow-wrap: break-word; }

.gds-modal-small { width: 480px; }

.gds-modal-medium { width: 640px; }

.gds-modal-header { padding: var(--space-4) var(--space-20) var(--space-4) =
var(--space-8); overflow-wrap: break-word; }

.gds-modal-header-description { margin-top: var(--space-3); }

.gds-modal-close-button { padding: var(--space-4); position: absolute; righ=
t: 0px; z-index: 10; }

.gds-modal-body { flex-grow: 1; padding: var(--space-2) var(--space-8) var(=
--space-8); overflow: auto; }

.gds-modal-body-border-top { border-top: 1px solid var(--color-border-base-=
subdued); }

.gds-modal-footer { align-items: center; background-color: var(--color-back=
ground-base-subdued); border-bottom-left-radius: var(--radius-2); border-bo=
ttom-right-radius: var(--radius-2); box-sizing: content-box; display: flex;=
 min-height: var(--space-8); max-height: var(--space-8); padding: var(--spa=
ce-3) var(--space-8); }

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fade-out {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes scale-in {=20
  0% { transform: scale(0.8); }
  100% { transform: scale(1); }
}

@keyframes scale-out {=20
  0% { transform: scale(1); }
  100% { transform: scale(0.8); }
}

.gds-modal-overlay .gds-button:focus { outline: 2px solid var(--color-borde=
r-brand-default); outline-offset: 2px; }

@media (prefers-reduced-motion: reduce) {
  .gds-modal-container, .gds-modal-container.hide, .gds-modal-overlay, .gds=
-modal-overlay.hide { animation: auto ease 0s 1 normal none running none; }
}

.gds-plan-tag { height: var(--plan-tag-height); width: fit-content; }

.gds-plan-tag svg { height: 100%; width: auto; }

.gds-plan-tag-xsmall { --plan-tag-height: 22px; }

.gds-plan-tag-small { --plan-tag-height: 32px; }

.gds-plan-tag-medium { --plan-tag-height: 48px; }

.gds-plan-tag-large { --plan-tag-height: 72px; }

.gds-popover { border: 1px solid var(--color-border-elevated-default); bord=
er-radius: var(--radius-2); min-width: 225px; max-width: calc(480px - var(-=
-space-4)*2); z-index: var(--z-index-popover); }

.gds-popover .gds-arrow { fill: var(--neutral-gray-90); width: 14px; height=
: 14px; }

.gds-popover-content { background: var(--color-background-base-subdued); bo=
rder-radius: var(--radius-2); color: var(--color-text-light-default); paddi=
ng: var(--space-4); position: relative; }

.gds-popover-close-button { padding: var(--space-2); position: absolute; ri=
ght: 0px; top: 0px; }

.gds-radio-group { color-scheme: unset; forced-color-adjust: unset; mask: u=
nset; math-depth: unset; position: unset; position-anchor: unset; text-size=
-adjust: unset; appearance: unset; color: var(--color-text-base-default); f=
ont: unset; font-palette: unset; font-synthesis: unset; position-area: unse=
t; text-orientation: unset; text-rendering: unset; text-spacing-trim: unset=
; -webkit-font-smoothing: unset; -webkit-locale: unset; -webkit-text-orient=
ation: unset; -webkit-writing-mode: unset; writing-mode: unset; zoom: unset=
; accent-color: unset; place-content: unset; place-items: unset; place-self=
: unset; alignment-baseline: unset; anchor-name: unset; anchor-scope: unset=
; animation-composition: unset; animation: unset; app-region: unset; aspect=
-ratio: unset; backdrop-filter: unset; backface-visibility: unset; backgrou=
nd: unset; background-blend-mode: unset; baseline-shift: unset; baseline-so=
urce: unset; block-size: unset; border-block: unset; border-color: unset; b=
order-radius: unset; border-style: unset; border-width: 0px; border-collaps=
e: unset; border-end-end-radius: unset; border-end-start-radius: unset; bor=
der-image: unset; border-inline: unset; border-start-end-radius: unset; bor=
der-start-start-radius: unset; inset: unset; box-decoration-break: unset; b=
ox-shadow: unset; box-sizing: unset; break-after: unset; break-before: unse=
t; break-inside: unset; buffered-rendering: unset; caption-side: unset; car=
et-color: unset; clear: unset; clip: unset; clip-path: unset; clip-rule: un=
set; color-interpolation: unset; color-interpolation-filters: unset; color-=
rendering: unset; columns: unset; column-fill: unset; gap: unset; column-ru=
le: unset; column-span: unset; contain: unset; contain-intrinsic-block-size=
: unset; contain-intrinsic-size: unset; contain-intrinsic-inline-size: unse=
t; container: unset; content: unset; content-visibility: unset; counter-inc=
rement: unset; counter-reset: unset; counter-set: unset; cursor: unset; cx:=
 unset; cy: unset; d: unset; display: block; dominant-baseline: unset; empt=
y-cells: unset; field-sizing: unset; fill: unset; fill-opacity: unset; fill=
-rule: unset; filter: unset; flex: unset; flex-flow: unset; float: unset; f=
lood-color: unset; flood-opacity: unset; grid: unset; grid-area: unset; hei=
ght: unset; hyphenate-character: unset; hyphenate-limit-chars: unset; hyphe=
ns: unset; image-orientation: unset; image-rendering: unset; initial-letter=
: unset; inline-size: unset; inset-block: unset; inset-inline: unset; inter=
polate-size: unset; isolation: unset; letter-spacing: unset; lighting-color=
: unset; line-break: unset; list-style: unset; margin-block: unset; margin:=
 0px; margin-inline: unset; marker: unset; mask-type: unset; math-shift: un=
set; math-style: unset; max-block-size: unset; max-height: unset; max-inlin=
e-size: unset; max-width: unset; min-block-size: unset; min-height: unset; =
min-inline-size: unset; min-width: 0px; mix-blend-mode: unset; object-fit: =
unset; object-position: unset; object-view-box: unset; offset: unset; opaci=
ty: unset; order: unset; orphans: unset; outline: unset; outline-offset: un=
set; overflow-anchor: unset; overflow-clip-margin: unset; overflow-wrap: un=
set; overflow: unset; overlay: unset; overscroll-behavior-block: unset; ove=
rscroll-behavior-inline: unset; overscroll-behavior: unset; padding-block: =
unset; padding: 0px; padding-inline: unset; page: unset; page-orientation: =
unset; paint-order: unset; perspective: unset; perspective-origin: unset; p=
ointer-events: unset; position-try: unset; position-visibility: unset; quot=
es: unset; r: unset; resize: unset; rotate: unset; ruby-align: unset; ruby-=
position: unset; rx: unset; ry: unset; scale: unset; scroll-behavior: unset=
; scroll-margin-block: unset; scroll-margin: unset; scroll-margin-inline: u=
nset; scroll-padding-block: unset; scroll-padding: unset; scroll-padding-in=
line: unset; scroll-snap-align: unset; scroll-snap-stop: unset; scroll-snap=
-type: unset; scroll-timeline: unset; scrollbar-color: unset; scrollbar-gut=
ter: unset; scrollbar-width: unset; shape-image-threshold: unset; shape-mar=
gin: unset; shape-outside: unset; shape-rendering: unset; size: unset; spea=
k: unset; stop-color: unset; stop-opacity: unset; stroke: unset; stroke-das=
harray: unset; stroke-dashoffset: unset; stroke-linecap: unset; stroke-line=
join: unset; stroke-miterlimit: unset; stroke-opacity: unset; stroke-width:=
 unset; tab-size: unset; table-layout: unset; text-align: unset; text-align=
-last: unset; text-anchor: unset; text-combine-upright: unset; text-decorat=
ion: unset; text-decoration-skip-ink: unset; text-emphasis: unset; text-emp=
hasis-position: unset; text-indent: unset; text-overflow: unset; text-shado=
w: unset; text-transform: unset; text-underline-offset: unset; text-underli=
ne-position: unset; text-wrap: unset; timeline-scope: unset; touch-action: =
unset; transform: unset; transform-box: unset; transform-origin: unset; tra=
nsform-style: unset; transition: unset; translate: unset; user-select: unse=
t; vector-effect: unset; vertical-align: unset; view-timeline: unset; view-=
transition-class: unset; view-transition-name: unset; visibility: unset; bo=
rder-spacing: unset; -webkit-box-align: unset; -webkit-box-decoration-break=
: unset; -webkit-box-direction: unset; -webkit-box-flex: unset; -webkit-box=
-ordinal-group: unset; -webkit-box-orient: unset; -webkit-box-pack: unset; =
-webkit-box-reflect: unset; -webkit-line-break: unset; -webkit-line-clamp: =
unset; -webkit-mask-box-image: unset; -webkit-print-color-adjust: unset; -w=
ebkit-rtl-ordering: unset; -webkit-ruby-position: unset; -webkit-tap-highli=
ght-color: unset; -webkit-text-combine: unset; -webkit-text-decorations-in-=
effect: unset; -webkit-text-fill-color: unset; -webkit-text-security: unset=
; -webkit-text-stroke: unset; -webkit-user-drag: unset; white-space-collaps=
e: unset; widows: unset; width: unset; will-change: unset; word-break: unse=
t; word-spacing: unset; x: unset; y: unset; z-index: unset; }

.gds-radio-group, .gds-radio-group * { box-sizing: border-box; }

.gds-radio-group legend { padding: 0px; }

.gds-radio-group-border-error { border: 1px solid var(--color-border-critic=
al-default); border-radius: var(--radius-1); }

.gds-radio-button-container { width: fit-content; min-width: 150px; margin-=
top: var(--space-1); row-gap: var(--space-3); margin-inline-start: calc(var=
(--space-half)*-1); }

.gds-radio-button-container + .gds-input-error { margin-top: var(--space-1)=
; }

.gds-radio-button-container-column-1 { display: grid; grid-template-columns=
: 1fr; }

.gds-radio-button-container-column-2 { display: grid; grid-template-columns=
: 1fr 1fr; column-gap: var(--space-5); }

.gds-radio-button-container-single-row { display: flex; column-gap: var(--s=
pace-3); flex-wrap: wrap; }

.gds-radio-button { border: 2px solid transparent; border-radius: var(--rad=
ius-1); padding: var(--space-half); margin: -1px; }

.gds-radio-button-label { display: flex; align-items: flex-start; cursor: p=
ointer; }

.gds-radio-button-label-disabled { cursor: not-allowed; }

.gds-radio-button .gds-radio-button-input { margin-inline-end: var(--space-=
2); position: relative; background-color: var(--color-background-base-defau=
lt); border-radius: 50%; width: var(--space-4); height: var(--space-4); min=
-width: var(--space-4); border: var(--space-quarter) solid var(--color-bord=
er-base-default); margin-top: var(--space-half); }

.gds-radio-button-input.gds-radio-button-input-disabled { background-color:=
 var(--color-background-base-subdued); opacity: 0.4; }

.gds-radio-button input { cursor: pointer; opacity: 0; width: var(--space-4=
); height: var(--space-4); position: absolute; top: -2px; left: -2px; margi=
n: 1px; }

.gds-radio-button-input-disabled, .gds-radio-button-input-disabled input { =
cursor: not-allowed; }

.gds-radio-button-input.gds-radio-button-input-checked { border-color: var(=
--color-background-brand-default); border-width: 5px; background-color: var=
(--color-background-base-default); }

.gds-radio-button-input-checked input { top: -6px; left: -6px; }

.gds-radio-button-focus-visible { outline: 2px solid var(--color-background=
-brand-default); outline-offset: -2px; }

.gds-radio-button-helper-message { display: inline; margin-inline-start: va=
r(--space-6); box-decoration-break: clone; -webkit-box-decoration-break: cl=
one; }

.gds-text-field { display: flex; flex-direction: column; flex: 1 1 0%; gap:=
 var(--space-1); text-align: start; min-width: 130px; }

.gds-text-field .gds-text-field-input { color-scheme: unset; forced-color-a=
djust: unset; mask: unset; math-depth: unset; position: unset; position-anc=
hor: unset; text-size-adjust: unset; appearance: unset; color: var(--color-=
text-base-default); font-family: unset; font-feature-settings: unset; font-=
kerning: unset; font-optical-sizing: unset; font-palette: unset; font-size:=
 14px; font-size-adjust: unset; font-stretch: unset; font-style: unset; fon=
t-synthesis: unset; font-variant: unset; font-variation-settings: unset; fo=
nt-weight: unset; position-area: unset; text-orientation: unset; text-rende=
ring: unset; text-spacing-trim: unset; -webkit-font-smoothing: unset; -webk=
it-locale: unset; -webkit-text-orientation: unset; -webkit-writing-mode: un=
set; writing-mode: unset; zoom: unset; accent-color: unset; place-content: =
unset; place-items: unset; place-self: unset; alignment-baseline: unset; an=
chor-name: unset; anchor-scope: unset; animation-composition: unset; animat=
ion: unset; app-region: unset; aspect-ratio: unset; backdrop-filter: unset;=
 backface-visibility: unset; background: unset; background-blend-mode: unse=
t; baseline-shift: unset; baseline-source: unset; block-size: unset; border=
-block: unset; border: 1px solid var(--color-border-base-default); border-r=
adius: var(--radius-1); border-collapse: unset; border-end-end-radius: unse=
t; border-end-start-radius: unset; border-inline: unset; border-start-end-r=
adius: unset; border-start-start-radius: unset; inset: unset; box-decoratio=
n-break: unset; box-shadow: unset; box-sizing: border-box; break-after: uns=
et; break-before: unset; break-inside: unset; buffered-rendering: unset; ca=
ption-side: unset; caret-color: unset; clear: unset; clip: unset; clip-path=
: unset; clip-rule: unset; color-interpolation: unset; color-interpolation-=
filters: unset; color-rendering: unset; columns: unset; column-fill: unset;=
 gap: unset; column-rule: unset; column-span: unset; contain: unset; contai=
n-intrinsic-block-size: unset; contain-intrinsic-size: unset; contain-intri=
nsic-inline-size: unset; container: unset; content: unset; content-visibili=
ty: unset; counter-increment: unset; counter-reset: unset; counter-set: uns=
et; cursor: unset; cx: unset; cy: unset; d: unset; display: unset; dominant=
-baseline: unset; empty-cells: unset; field-sizing: unset; fill: unset; fil=
l-opacity: unset; fill-rule: unset; filter: unset; flex: unset; flex-flow: =
unset; float: unset; flood-color: unset; flood-opacity: unset; grid: unset;=
 grid-area: unset; height: 32px; hyphenate-character: unset; hyphenate-limi=
t-chars: unset; hyphens: unset; image-orientation: unset; image-rendering: =
unset; initial-letter: unset; inline-size: unset; inset-block: unset; inset=
-inline: unset; interpolate-size: unset; isolation: unset; letter-spacing: =
unset; lighting-color: unset; line-break: unset; line-height: unset; list-s=
tyle: unset; margin-block: unset; margin: unset; margin-inline: unset; mark=
er: unset; mask-type: unset; math-shift: unset; math-style: unset; max-bloc=
k-size: unset; max-height: unset; max-inline-size: unset; max-width: unset;=
 min-block-size: unset; min-height: unset; min-inline-size: unset; min-widt=
h: unset; mix-blend-mode: unset; object-fit: unset; object-position: unset;=
 object-view-box: unset; offset: unset; opacity: unset; order: unset; orpha=
ns: unset; outline: unset; outline-offset: unset; overflow-anchor: unset; o=
verflow-clip-margin: unset; overflow-wrap: unset; overflow: unset; overlay:=
 unset; overscroll-behavior-block: unset; overscroll-behavior-inline: unset=
; overscroll-behavior: unset; padding-block: unset; padding: var(--space-1)=
 var(--space-3); padding-inline: unset; page: unset; page-orientation: unse=
t; paint-order: unset; perspective: unset; perspective-origin: unset; point=
er-events: unset; position-try: unset; position-visibility: unset; quotes: =
unset; r: unset; resize: unset; rotate: unset; ruby-align: unset; ruby-posi=
tion: unset; rx: unset; ry: unset; scale: unset; scroll-behavior: unset; sc=
roll-margin-block: unset; scroll-margin: unset; scroll-margin-inline: unset=
; scroll-padding-block: unset; scroll-padding: unset; scroll-padding-inline=
: unset; scroll-snap-align: unset; scroll-snap-stop: unset; scroll-snap-typ=
e: unset; scroll-timeline: unset; scrollbar-color: unset; scrollbar-gutter:=
 unset; scrollbar-width: unset; shape-image-threshold: unset; shape-margin:=
 unset; shape-outside: unset; shape-rendering: unset; size: unset; speak: u=
nset; stop-color: unset; stop-opacity: unset; stroke: unset; stroke-dasharr=
ay: unset; stroke-dashoffset: unset; stroke-linecap: unset; stroke-linejoin=
: unset; stroke-miterlimit: unset; stroke-opacity: unset; stroke-width: uns=
et; tab-size: unset; table-layout: unset; text-align: unset; text-align-las=
t: unset; text-anchor: unset; text-combine-upright: unset; text-decoration:=
 unset; text-decoration-skip-ink: unset; text-emphasis: unset; text-emphasi=
s-position: unset; text-indent: unset; text-overflow: unset; text-shadow: u=
nset; text-transform: unset; text-underline-offset: unset; text-underline-p=
osition: unset; text-wrap: unset; timeline-scope: unset; touch-action: unse=
t; transform: unset; transform-box: unset; transform-origin: unset; transfo=
rm-style: unset; transition: unset; translate: unset; user-select: unset; v=
ector-effect: unset; vertical-align: unset; view-timeline: unset; view-tran=
sition-class: unset; view-transition-name: unset; visibility: unset; border=
-spacing: unset; -webkit-box-align: unset; -webkit-box-decoration-break: un=
set; -webkit-box-direction: unset; -webkit-box-flex: unset; -webkit-box-ord=
inal-group: unset; -webkit-box-orient: unset; -webkit-box-pack: unset; -web=
kit-box-reflect: unset; -webkit-line-break: unset; -webkit-line-clamp: unse=
t; -webkit-mask-box-image: unset; -webkit-print-color-adjust: unset; -webki=
t-rtl-ordering: unset; -webkit-ruby-position: unset; -webkit-tap-highlight-=
color: unset; -webkit-text-combine: unset; -webkit-text-decorations-in-effe=
ct: unset; -webkit-text-fill-color: unset; -webkit-text-security: unset; -w=
ebkit-text-stroke: unset; -webkit-user-drag: unset; white-space-collapse: u=
nset; widows: unset; width: 100%; will-change: unset; word-break: unset; wo=
rd-spacing: unset; x: unset; y: unset; z-index: unset; }

.gds-text-field-input[type=3D"number"]::-webkit-inner-spin-button, .gds-tex=
t-field-input[type=3D"number"]::-webkit-outer-spin-button { opacity: 0; }

.gds-text-field-input[type=3D"number"] { }

.gds-text-field-icon-start { display: flex; position: absolute; padding: 0 =
var(--space-3); pointer-events: none; }

.gds-text-field-input[aria-invalid=3D"true"] { border-color: var(--color-bo=
rder-critical-default); }

.gds-text-field-icon-start + .gds-text-field-input { padding-inline-start: =
calc(var(--space-3) + 20px + var(--space-3)); }

.gds-text-field-container-password .gds-text-field-input { padding-inline-e=
nd: var(--space-8); }

.gds-text-field-input::placeholder { color: var(--color-text-base-subdued);=
 opacity: 1; }

.gds-text-field-input:disabled { border-color: var(--color-border-base-subd=
ued); cursor: not-allowed; }

.gds-text-field-input:active:not([disabled]), .gds-text-field-input[data-si=
mulate=3D"active"] { border-color: var(--color-border-brand-default); }

.gds-text-field-container { position: relative; border-radius: var(--radius=
-1); display: flex; align-items: center; }

.gds-text-field-container:focus-within, .gds-text-field-container:has([data=
-simulate=3D"focus"]) { outline: 2px solid var(--color-border-brand-default=
); outline-offset: 2px; }

.gds-text-field button { color-scheme: unset; forced-color-adjust: unset; m=
ask: unset; math-depth: unset; position: absolute; position-anchor: unset; =
text-size-adjust: unset; appearance: unset; color: unset; font: unset; font=
-palette: unset; font-synthesis: unset; position-area: unset; text-orientat=
ion: unset; text-rendering: unset; text-spacing-trim: unset; -webkit-font-s=
moothing: unset; -webkit-locale: unset; -webkit-text-orientation: unset; -w=
ebkit-writing-mode: unset; writing-mode: unset; zoom: unset; accent-color: =
unset; align-content: unset; align-items: center; place-self: unset; alignm=
ent-baseline: unset; anchor-name: unset; anchor-scope: unset; animation-com=
position: unset; animation: unset; app-region: unset; aspect-ratio: unset; =
backdrop-filter: unset; backface-visibility: unset; background: 0px 0px; ba=
ckground-blend-mode: unset; baseline-shift: unset; baseline-source: unset; =
block-size: unset; border-block: unset; border: 1px solid transparent; bord=
er-radius: var(--radius-1); border-collapse: unset; border-end-end-radius: =
unset; border-end-start-radius: unset; border-inline: unset; border-start-e=
nd-radius: unset; border-start-start-radius: unset; bottom: unset; box-deco=
ration-break: unset; box-shadow: unset; box-sizing: unset; break-after: uns=
et; break-before: unset; break-inside: unset; buffered-rendering: unset; ca=
ption-side: unset; caret-color: unset; clear: unset; clip: unset; clip-path=
: unset; clip-rule: unset; color-interpolation: unset; color-interpolation-=
filters: unset; color-rendering: unset; columns: unset; column-fill: unset;=
 gap: unset; column-rule: unset; column-span: unset; contain: unset; contai=
n-intrinsic-block-size: unset; contain-intrinsic-size: unset; contain-intri=
nsic-inline-size: unset; container: unset; content: unset; content-visibili=
ty: unset; counter-increment: unset; counter-reset: unset; counter-set: uns=
et; cursor: pointer; cx: unset; cy: unset; d: unset; display: flex; dominan=
t-baseline: unset; empty-cells: unset; field-sizing: unset; fill: unset; fi=
ll-opacity: unset; fill-rule: unset; filter: unset; flex: unset; flex-flow:=
 unset; float: unset; flood-color: unset; flood-opacity: unset; grid: unset=
; grid-area: unset; height: 24px; hyphenate-character: unset; hyphenate-lim=
it-chars: unset; hyphens: unset; image-orientation: unset; image-rendering:=
 unset; initial-letter: unset; inline-size: unset; inset-block: unset; inse=
t-inline: unset; interpolate-size: unset; isolation: unset; justify-content=
: center; justify-items: unset; left: unset; letter-spacing: unset; lightin=
g-color: unset; line-break: unset; list-style: unset; margin-block: unset; =
margin: unset; margin-inline-end: var(--space-2); margin-inline-start: unse=
t; marker: unset; mask-type: unset; math-shift: unset; math-style: unset; m=
ax-block-size: unset; max-height: unset; max-inline-size: unset; max-width:=
 unset; min-block-size: unset; min-height: unset; min-inline-size: unset; m=
in-width: unset; mix-blend-mode: unset; object-fit: unset; object-position:=
 unset; object-view-box: unset; offset: unset; opacity: unset; order: unset=
; orphans: unset; outline: none; outline-offset: unset; overflow-anchor: un=
set; overflow-clip-margin: unset; overflow-wrap: unset; overflow: unset; ov=
erlay: unset; overscroll-behavior-block: unset; overscroll-behavior-inline:=
 unset; overscroll-behavior: unset; padding-block: unset; padding: 0px; pad=
ding-inline: unset; page: unset; page-orientation: unset; paint-order: unse=
t; perspective: unset; perspective-origin: unset; pointer-events: unset; po=
sition-try: unset; position-visibility: unset; quotes: unset; r: unset; res=
ize: unset; right: 0px; rotate: unset; ruby-align: unset; ruby-position: un=
set; rx: unset; ry: unset; scale: unset; scroll-behavior: unset; scroll-mar=
gin-block: unset; scroll-margin: unset; scroll-margin-inline: unset; scroll=
-padding-block: unset; scroll-padding: unset; scroll-padding-inline: unset;=
 scroll-snap-align: unset; scroll-snap-stop: unset; scroll-snap-type: unset=
; scroll-timeline: unset; scrollbar-color: unset; scrollbar-gutter: unset; =
scrollbar-width: unset; shape-image-threshold: unset; shape-margin: unset; =
shape-outside: unset; shape-rendering: unset; size: unset; speak: unset; st=
op-color: unset; stop-opacity: unset; stroke: unset; stroke-dasharray: unse=
t; stroke-dashoffset: unset; stroke-linecap: unset; stroke-linejoin: unset;=
 stroke-miterlimit: unset; stroke-opacity: unset; stroke-width: unset; tab-=
size: unset; table-layout: unset; text-align: unset; text-align-last: unset=
; text-anchor: unset; text-combine-upright: unset; text-decoration: unset; =
text-decoration-skip-ink: unset; text-emphasis: unset; text-emphasis-positi=
on: unset; text-indent: unset; text-overflow: unset; text-shadow: unset; te=
xt-transform: unset; text-underline-offset: unset; text-underline-position:=
 unset; text-wrap: unset; timeline-scope: unset; top: unset; touch-action: =
unset; transform: unset; transform-box: unset; transform-origin: unset; tra=
nsform-style: unset; transition: unset; translate: unset; user-select: unse=
t; vector-effect: unset; vertical-align: unset; view-timeline: unset; view-=
transition-class: unset; view-transition-name: unset; visibility: unset; bo=
rder-spacing: unset; -webkit-box-align: unset; -webkit-box-decoration-break=
: unset; -webkit-box-direction: unset; -webkit-box-flex: unset; -webkit-box=
-ordinal-group: unset; -webkit-box-orient: unset; -webkit-box-pack: unset; =
-webkit-box-reflect: unset; -webkit-line-break: unset; -webkit-line-clamp: =
unset; -webkit-mask-box-image: unset; -webkit-print-color-adjust: unset; -w=
ebkit-rtl-ordering: unset; -webkit-ruby-position: unset; -webkit-tap-highli=
ght-color: unset; -webkit-text-combine: unset; -webkit-text-decorations-in-=
effect: unset; -webkit-text-fill-color: unset; -webkit-text-security: unset=
; -webkit-text-stroke: unset; -webkit-user-drag: unset; white-space-collaps=
e: unset; widows: unset; width: 24px; will-change: unset; word-break: unset=
; word-spacing: unset; x: unset; y: unset; z-index: unset; }

.gds-text-field button:focus-visible, .gds-text-field button[data-simulate=
=3D"focus"] { border-color: var(--color-border-brand-default); }

.gds-text-field-input::-webkit-search-cancel-button { display: none; }

.gds-text-field-input::-webkit-textfield-decoration-container { margin-inli=
ne-end: var(--space-4); }

.gds-select { display: flex; flex-direction: column; flex: 1 1 0%; gap: var=
(--space-1); text-align: start; }

.gds-select .gds-select-inner { box-sizing: border-box; background-color: u=
nset; border-radius: var(--radius-1); border: 1px solid var(--color-border-=
base-default); padding: var(--space-1) var(--space-8) var(--space-1) var(--=
space-3); margin: 0px; color: var(--color-text-base-default); appearance: n=
one; font-family: inherit; font-size: 14px; height: 32px; line-height: 1.5;=
 width: 100%; }

.gds-select-inner[aria-invalid=3D"true"] { border-color: var(--color-border=
-critical-default); }

.gds-select-inner:focus-visible { outline: none; }

.gds-select-inner:disabled { border-color: var(--color-border-base-subdued)=
; cursor: not-allowed; resize: none; }

.gds-select-inner:active:not([disabled]), .gds-select-inner[data-simulate=
=3D"active"]:not([disabled]) { border-color: var(--color-border-brand-defau=
lt); }

.gds-select-container { border: 1px solid transparent; border-radius: var(-=
-radius-1); margin-inline-start: calc(var(--space-half)*-1); display: flex;=
 align-items: center; position: relative; }

.gds-select-container .gds-icon { position: absolute; right: var(--space-3)=
; }

.gds-select-container:focus-within, .gds-select-container:has([data-simulat=
e=3D"focus"]) { outline: 2px solid var(--color-border-brand-default); outli=
ne-offset: 1px; }

.gds-select-icon { pointer-events: none; }

.gds-skeleton-circle { border-radius: 50%; aspect-ratio: 1 / 1; height: 100=
%; overflow: hidden; flex: 0 0 auto; }

.gds-skeleton-rectangle { border-radius: var(--space-half); }

.gds-skeleton-frame { width: auto; position: relative; }

.gds-skeleton-label { position: absolute; top: 0px; left: 0px; right: 0px; =
width: fit-content; margin: 0px auto; z-index: 1; user-select: none; text-a=
lign: center; padding: 0 var(--space-2) var(--space-half); border-radius: v=
ar(--radius-3); background: var(--color-background-base-default); border-to=
p-style: ; border-top-width: ; border-right-style: ; border-right-width: ; =
border-bottom-style: ; border-bottom-width: ; border-left-style: ; border-l=
eft-width: ; border-image-source: ; border-image-slice: ; border-image-widt=
h: ; border-image-outset: ; border-image-repeat: ; border-color: var(--colo=
r-border-base-subdued); box-shadow: var(--elevation100-shadow); animation: =
0.3s ease-in-out 0s 1 normal none running fade-in-down; }

[data-gds-theme=3D"dark"] .gds-skeleton-label { box-shadow: none; }

@keyframes fade-in-down {=20
  0% { transform: translateY(-10px); opacity: 0; }
  100% { transform: translateY(0px); opacity: 1; }
}

.gds-skeleton-item { width: 100%; }

.gds-skeleton-item-inner { --skeleton-shimmer: var(--neutral-gray-20); --sk=
eleton-bg: var(--neutral-gray-10); display: block; border-radius: var(--rad=
ius-1); background-color: var(--skeleton-bg); position: relative; overflow:=
 hidden; mix-blend-mode: multiply; }

.gds-skeleton-item-inner::after { content: ""; position: absolute; top: 0px=
; left: 0px; width: 100%; height: 100%; background-image: linear-gradient(9=
0deg,transparent,var(--skeleton-shimmer) 50%,transparent); transform: trans=
lateX(-100%); animation: 2s ease-in-out 0s infinite normal none running shi=
mmer; }

@keyframes shimmer {=20
  100% { transform: translateX(100%); }
}

.gds-skeleton-item-circle { border-radius: 50%; aspect-ratio: 1 / 1; }

[data-gds-theme=3D"dark"] .gds-skeleton-item-inner { --skeleton-bg: var(--c=
olor-background-base-subdued); --skeleton-shimmer: var(--neutral-gray-80); =
mix-blend-mode: screen; }

@media (prefers-reduced-motion: reduce) {
  .gds-skeleton-item-inner::after, .gds-skeleton-label { animation: auto ea=
se 0s 1 normal none running none; }
}

.gds-sticker { background-size: contain; font-weight: 600; position: relati=
ve; font-family: var(--font-stack-matter); }

.gds-sticker, .gds-sticker-discount { display: flex; height: var(--sticker-=
size); width: var(--sticker-size); }

.gds-sticker-discount { align-items: center; flex-direction: column; color:=
 var(--color-text-pro-default); justify-content: center; line-height: norma=
l; z-index: 1; }

.gds-sticker-discount p { margin: 0px; }

.gds-sticker-flap { z-index: 10; }

.gds-sticker-background { position: absolute; width: var(--sticker-size); h=
eight: var(--sticker-size); }

.gds-sticker-discount .gds-sticker-discount-text { font-size: var(--sticker=
-discount-text-size); }

.gds-sticker-discount .gds-sticker-percent-text { font-size: var(--sticker-=
percent-text-size); }

.gds-sticker-discount .gds-sticker-off-text { font-size: var(--sticker-off-=
text-size); line-height: var(--sticker-off-line-height); text-transform: up=
percase; }

.gds-sticker-discount .gds-sticker-plan-text { font-size: var(--sticker-pla=
n-text-size); }

.gds-sticker-small { --sticker-size: 96px; --sticker-discount-text-size: 35=
px; --sticker-percent-text-size: 21px; --sticker-off-text-size: 9px; --stic=
ker-off-line-height: 9px; --sticker-plan-text-size: 9px; }

.gds-sticker-medium { --sticker-size: 120px; --sticker-discount-text-size: =
44px; --sticker-off-text-size: 11px; --sticker-off-line-height: 11px; --sti=
cker-plan-text-size: 11px; --sticker-percent-text-size: 26px; }

.gds-sticker-large { --sticker-size: 144px; --sticker-discount-text-size: 5=
3px; --sticker-off-text-size: 13px; --sticker-off-line-height: 13px; --stic=
ker-plan-text-size: 13px; --sticker-percent-text-size: 31px; }

.gds-switch { display: block; max-width: 480px; position: relative; }

.gds-switch-input { position: absolute; width: 40px; height: 21px; margin: =
2px; }

.gds-switch-animation { transition: 0.3s ease-out; }

.gds-switch-check-animation-turning-on { transition: opacity 0.2s 0.2s; }

.gds-switch-check-animation-turning-off { transition: opacity 0.1s; }

.gds-switch-hidden-label { width: fit-content; }

.gds-switch-focus-visible { outline: 2px solid var(--color-border-brand-def=
ault); outline-offset: 2px; border-radius: var(--radius-half); }

.gds-switch-disabled { opacity: 0.4; }

.gds-switch-label-disabled { cursor: not-allowed; }

.gds-switch-label-enabled { cursor: pointer; }

.gds-tabs { display: block; width: 100%; }

.gds-tabs-list { border-bottom: 1px solid var(--color-border-base-subdued);=
 }

.gds-tabs-list.gds-tabs-border-none { border-bottom: 0px; }

.gds-tabs-tab-container { background-color: transparent; border: none; colo=
r: var(--color-text-base-subdued); cursor: pointer; padding: 0px; }

.gds-tabs-tab-container:focus-visible { border-radius: var(--radius-1); out=
line: 2px solid var(--color-border-brand-default); outline-offset: -2px; }

.gds-tabs-tab { display: flex; flex-direction: column; padding: var(--space=
-2) var(--space-1); border-bottom: 3px solid transparent; }

.gds-tabs-tab-container[aria-selected=3D"true"] .gds-tabs-tab { border-bott=
om: 3px solid var(--color-border-brand-default); color: var(--color-text-br=
and-default); }

.gds-tabs-tab .gds-text-small { line-height: 18px; }

.gds-tabs-tab::after { content: attr(data-text); height: 0px; visibility: h=
idden; overflow: hidden; user-select: none; pointer-events: none; font-weig=
ht: 700; font-size: 16px; }

@media speech {
  .gds-tabs-tab:hover { border-bottom: 3px solid var(--neutral-gray-40); }
  .gds-tabs-tab::after { display: none; }
}

.gds-tabs-panel { padding: var(--space-6) var(--space-12) var(--space-0) va=
r(--space-1); }

.gds-tag { color-scheme: unset; forced-color-adjust: unset; mask: unset; ma=
th-depth: unset; position: unset; position-anchor: unset; text-size-adjust:=
 unset; appearance: unset; color: unset; font-family: unset; font-feature-s=
ettings: unset; font-kerning: unset; font-optical-sizing: unset; font-palet=
te: unset; font-size: unset; font-size-adjust: unset; font-stretch: unset; =
font-style: unset; font-synthesis: unset; font-variant: unset; font-variati=
on-settings: unset; font-weight: 400; position-area: unset; text-orientatio=
n: unset; text-rendering: unset; text-spacing-trim: unset; -webkit-font-smo=
othing: unset; -webkit-locale: unset; -webkit-text-orientation: unset; -web=
kit-writing-mode: unset; writing-mode: unset; zoom: unset; accent-color: un=
set; place-content: unset; align-items: center; place-self: unset; alignmen=
t-baseline: unset; anchor-name: unset; anchor-scope: unset; animation-compo=
sition: unset; animation: unset; app-region: unset; aspect-ratio: unset; ba=
ckdrop-filter: unset; backface-visibility: unset; background: unset; backgr=
ound-blend-mode: unset; baseline-shift: unset; baseline-source: unset; bloc=
k-size: unset; border-block: unset; border: unset; border-radius: var(--rad=
ius-1); border-collapse: unset; border-end-end-radius: unset; border-end-st=
art-radius: unset; border-inline: unset; border-start-end-radius: unset; bo=
rder-start-start-radius: unset; inset: unset; box-decoration-break: unset; =
box-shadow: unset; box-sizing: border-box; break-after: unset; break-before=
: unset; break-inside: unset; buffered-rendering: unset; caption-side: unse=
t; caret-color: unset; clear: unset; clip: unset; clip-path: unset; clip-ru=
le: unset; color-interpolation: unset; color-interpolation-filters: unset; =
color-rendering: unset; columns: unset; column-fill: unset; gap: unset; col=
umn-rule: unset; column-span: unset; contain: unset; contain-intrinsic-bloc=
k-size: unset; contain-intrinsic-size: unset; contain-intrinsic-inline-size=
: unset; container: unset; content: unset; content-visibility: unset; count=
er-increment: unset; counter-reset: unset; counter-set: unset; cursor: unse=
t; cx: unset; cy: unset; d: unset; display: flex; dominant-baseline: unset;=
 empty-cells: unset; field-sizing: unset; fill: unset; fill-opacity: unset;=
 fill-rule: unset; filter: unset; flex: unset; flex-flow: unset; float: uns=
et; flood-color: unset; flood-opacity: unset; grid: unset; grid-area: unset=
; height: unset; hyphenate-character: unset; hyphenate-limit-chars: unset; =
hyphens: unset; image-orientation: unset; image-rendering: unset; initial-l=
etter: unset; inline-size: unset; inset-block: unset; inset-inline: unset; =
interpolate-size: unset; isolation: unset; justify-items: unset; letter-spa=
cing: unset; lighting-color: unset; line-break: unset; line-height: unset; =
list-style: unset; margin-block: unset; margin: unset; margin-inline: unset=
; marker: unset; mask-type: unset; math-shift: unset; math-style: unset; ma=
x-block-size: unset; max-height: unset; max-inline-size: unset; max-width: =
unset; min-block-size: unset; min-height: unset; min-inline-size: unset; mi=
n-width: unset; mix-blend-mode: unset; object-fit: unset; object-position: =
unset; object-view-box: unset; offset: unset; opacity: unset; order: unset;=
 orphans: unset; outline: unset; outline-offset: unset; overflow-anchor: un=
set; overflow-clip-margin: unset; overflow-wrap: unset; overflow: unset; ov=
erlay: unset; overscroll-behavior-block: unset; overscroll-behavior-inline:=
 unset; overscroll-behavior: unset; padding-block: unset; padding: 0 var(--=
space-1); padding-inline: unset; page: unset; page-orientation: unset; pain=
t-order: unset; perspective: unset; perspective-origin: unset; pointer-even=
ts: unset; position-try: unset; position-visibility: unset; quotes: unset; =
r: unset; resize: unset; rotate: unset; ruby-align: unset; ruby-position: u=
nset; rx: unset; ry: unset; scale: unset; scroll-behavior: unset; scroll-ma=
rgin-block: unset; scroll-margin: unset; scroll-margin-inline: unset; scrol=
l-padding-block: unset; scroll-padding: unset; scroll-padding-inline: unset=
; scroll-snap-align: unset; scroll-snap-stop: unset; scroll-snap-type: unse=
t; scroll-timeline: unset; scrollbar-color: unset; scrollbar-gutter: unset;=
 scrollbar-width: unset; shape-image-threshold: unset; shape-margin: unset;=
 shape-outside: unset; shape-rendering: unset; size: unset; speak: unset; s=
top-color: unset; stop-opacity: unset; stroke: unset; stroke-dasharray: uns=
et; stroke-dashoffset: unset; stroke-linecap: unset; stroke-linejoin: unset=
; stroke-miterlimit: unset; stroke-opacity: unset; stroke-width: unset; tab=
-size: unset; table-layout: unset; text-align: unset; text-align-last: unse=
t; text-anchor: unset; text-combine-upright: unset; text-decoration: unset;=
 text-decoration-skip-ink: unset; text-emphasis: unset; text-emphasis-posit=
ion: unset; text-indent: unset; text-overflow: unset; text-shadow: unset; t=
ext-transform: unset; text-underline-offset: unset; text-underline-position=
: unset; white-space: nowrap; text-wrap-style: unset; timeline-scope: unset=
; touch-action: unset; transform: unset; transform-box: unset; transform-or=
igin: unset; transform-style: unset; transition: unset; translate: unset; u=
ser-select: unset; vector-effect: unset; vertical-align: middle; view-timel=
ine: unset; view-transition-class: unset; view-transition-name: unset; visi=
bility: unset; border-spacing: unset; -webkit-box-align: unset; -webkit-box=
-decoration-break: unset; -webkit-box-direction: unset; -webkit-box-flex: u=
nset; -webkit-box-ordinal-group: unset; -webkit-box-orient: unset; -webkit-=
box-pack: unset; -webkit-box-reflect: unset; -webkit-line-break: unset; -we=
bkit-line-clamp: unset; -webkit-mask-box-image: unset; -webkit-print-color-=
adjust: unset; -webkit-rtl-ordering: unset; -webkit-ruby-position: unset; -=
webkit-tap-highlight-color: unset; -webkit-text-combine: unset; -webkit-tex=
t-decorations-in-effect: unset; -webkit-text-fill-color: unset; -webkit-tex=
t-security: unset; -webkit-text-stroke: unset; -webkit-user-drag: unset; wi=
dows: unset; width: fit-content; will-change: unset; word-break: unset; wor=
d-spacing: unset; x: unset; y: unset; z-index: unset; }

.gds-tag-inline { display: inline-flex; }

.gds-tag-neutral { background-color: var(--color-background-base-subdued); =
border: 1px solid var(--color-border-base-subdued); color: var(--color-text=
-base-subdued); }

.gds-tag-business { background-color: var(--color-background-business-subdu=
ed); border: 1px solid var(--color-border-business-subdued); color: var(--c=
olor-text-business-default); }

.gds-tag-addition { background-color: var(--color-background-addition-subdu=
ed); border: 1px solid var(--color-border-addition-subdued); color: var(--c=
olor-text-addition-default); }

.gds-tag-critical { background-color: var(--color-background-critical-subdu=
ed); border: 1px solid var(--color-border-critical-subdued); color: var(--c=
olor-text-critical-default); }

.gds-tag-deletion { background-color: var(--color-background-deletion-subdu=
ed); border: 1px solid var(--color-border-deletion-subdued); color: var(--c=
olor-text-deletion-default); }

.gds-tag-premium, .gds-tag-premium-with-icon { background-color: var(--colo=
r-background-premium-default); border: 1px solid var(--color-border-premium=
-subdued); color: var(--color-text-premium-default); }

.gds-tag-pro, .gds-tag-pro-with-icon { background-color: var(--color-backgr=
ound-pro-default); border: 1px solid var(--color-border-pro-default); color=
: var(--color-text-pro-default); }

.gds-tag-icon { margin-right: var(--space-1); }

.gds-tag-success { background-color: var(--color-background-success-subdued=
); border: 1px solid var(--color-border-success-subdued); color: var(--colo=
r-text-success-default); }

.gds-tag-tip { background-color: var(--blue-0); border: 1px solid var(--blu=
e-10); color: var(--blue-60); }

.gds-tag-tip [fill] { fill: currentcolor; }

.gds-tag-warning { background-color: var(--color-background-warning-subdued=
); border: 1px solid var(--color-border-warning-subdued); color: var(--colo=
r-text-warning-default); }

[data-gds-theme=3D"dark"] .gds-tag-tip { background-color: var(--blue-80); =
border: 1px solid var(--blue-40); color: var(--blue-10); }

.gds-text-area { --g-text-area-border: var(--color-border-base-default); di=
splay: flex; flex-direction: column; flex: 1 1 0%; gap: var(--space-1); tex=
t-align: start; }

.gds-text-area .gds-text-area-input { box-sizing: border-box; background-co=
lor: unset; border-radius: var(--radius-1); border: 1px solid var(--g-text-=
area-border); padding: var(--space-1) var(--space-3); margin: 0px; color: v=
ar(--color-text-base-default); appearance: none; font-family: inherit; font=
-size: 14px; line-height: 1.5; width: 100%; }

.gds-text-area-resize-on { resize: both; }

.gds-text-area-resize-off { resize: none; }

.gds-text-area-resize-horizontal { resize: horizontal; }

.gds-text-area-resize-vertical { resize: vertical; }

.gds-text-area-input[aria-invalid=3D"true"] { --g-text-area-border: var(--c=
olor-border-critical-default); }

.gds-text-area-input::placeholder { color: var(--color-text-base-subdued); =
opacity: 1; }

.gds-text-area-input:disabled { --g-text-area-border: var(--color-border-ba=
se-subdued); cursor: not-allowed; resize: none; }

.gds-text-area-input:focus-visible, .gds-text-area-input[data-simulate=3D"f=
ocus"] { outline: none; }

.gds-text-area-input:active:not([disabled]), .gds-text-area-input[data-simu=
late=3D"active"] { --g-text-area-border: var(--color-border-brand-default);=
 }

.gds-text-area-container { position: relative; border: 1px solid transparen=
t; border-radius: var(--radius-1); display: flex; align-items: center; marg=
in-inline-start: calc(var(--space-half)*-1); }

.gds-text-area-container:focus-within, .gds-text-area-container:has([data-s=
imulate=3D"focus"]) { outline: 2px solid var(--color-border-brand-default);=
 outline-offset: 1px; }

.gds-toast { border-radius: var(--radius-1); border: 1px solid var(--color-=
border-elevated-default); color: var(--color-text-base-inverse); display: i=
nline-block; max-width: 400px; min-width: 210px; }

.gds-toast-success.inverse .gds-toast-icon-success path { fill: var(--color=
-icon-success-default); }

.gds-toast-warning.inverse .gds-toast-icon-warning path { fill: var(--color=
-icon-warning-default); }

.gds-toast-critical.inverse .gds-toast-icon-critical path { fill: var(--col=
or-icon-critical-default); }

.gds-toast-loading.inverse .gds-toast-icon-loading path { stroke: var(--col=
or-icon-base-default); }

.gds-toast-icon { line-height: 0; }

.gds-toast-text { display: block; }

.gds-verification-code { display: flex; flex-direction: column; border: non=
e; padding: var(--space-2) 0; margin: 0px; }

.gds-verification-code-large { --verification-code-height: 56px; --verifica=
tion-code-width: 48px; --verification-code-font-size: 28px; --verification-=
code-border-radius: var(--space-1); }

.gds-verification-code-medium { --verification-code-height: 48px; --verific=
ation-code-width: 40px; --verification-code-font-size: 24px; --verification=
-code-border-radius: 3.29px; }

.gds-verification-code-small { --verification-code-height: 40px; --verifica=
tion-code-width: 32px; --verification-code-font-size: 18px; --verification-=
code-border-radius: 2.74px; }

.gds-verification-code-input { background-color: var(--color-background-bas=
e-default); border-radius: var(--verification-code-border-radius); border: =
1px solid var(--color-border-base-default); color: var(--color-text-base-de=
fault); box-sizing: border-box; padding: var(--space-1); height: var(--veri=
fication-code-height); width: var(--verification-code-width); font-size: va=
r(--verification-code-font-size); text-align: center; }

.gds-verification-code-input:focus-within, .gds-verification-code-input:has=
([data-simulate=3D"focus"]) { outline: 2px solid var(--color-border-brand-d=
efault); outline-offset: 2px; }

.gds-verification-code-input[aria-invalid=3D"true"] { border-color: var(--c=
olor-border-critical-default); }

.gds-verification-code-input:disabled { border-color: var(--color-border-ba=
se-subdued); cursor: not-allowed; color: var(--color-text-base-subdued); }

.gds-verification-code-input[type=3D"number"]::-webkit-inner-spin-button, .=
gds-verification-code-input[type=3D"number"]::-webkit-outer-spin-button { d=
isplay: none; }

.gds-verification-code-input[type=3D"number"] { }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/css/g2.styles.css

@charset "utf-8";

.G2vdT { position: relative; appearance: none; border: transparent; box-sha=
dow: transparent 0px 0px 0px 0px; background: transparent; box-sizing: bord=
er-box; display: flex; flex-direction: column; align-items: center; padding=
: 0px; border-radius: var(--radius-2); transition: box-shadow 0.2s, border-=
color 0.2s, transform 0.2s, background-color 0.2s; }

.G2vdT.tw3gA { cursor: pointer; box-shadow: var(--elevation100-shadow); bor=
der: var(--elevation100-border); background-color: var(--color-background-b=
ase-default); }

.G2vdT.tw3gA:focus, .G2vdT.tw3gA:hover { transform: scaleX(1.13); }

.G2vdT.tw3gA.ikZS7 { background-color: var(--blue-40); }

.G2vdT:not(.gtUhG) { justify-content: center; }

.G2vdT .Pdlcn { width: 3px; height: 100%; border-radius: var(--radius-half)=
; transition: margin 0.2s, height 0.2s; }

.G2vdT .Pdlcn.ZhtAx { background-color: var(--blue-gray-40); animation: 1s =
ease 0s infinite normal none running PEPt4; }

.G2vdT .Pdlcn.xQocX { background-color: var(--red-40); }

.G2vdT .Pdlcn._mi1U { margin-top: var(--space-1); margin-bottom: calc(var(-=
-space-3) + var(--space-half)); }

.G2vdT .Pdlcn.BNKg6 { width: 0px; height: 0px; position: absolute; }

.G2vdT .Ihuz1 { opacity: 0; width: 7px; pointer-events: none; transition: o=
pacity 0.2s; stroke-width: 3px; }

.G2vdT .Ihuz1.gtlTF { opacity: 1; }

.G2vdT .Ihuz1.PPzfY { position: absolute; bottom: 0px; }

@keyframes PEPt4 {=20
  0% { opacity: 0; }
  50% { opacity: 0.5; }
  100% { opacity: 0; }
}

.xCgoK { position: fixed; pointer-events: none; background-color: var(--neu=
tral-gray-10); border-radius: var(--radius-3); opacity: 0; transition: opac=
ity 0.5s; }

.xCgoK.Jjjhn { opacity: 0.5; }

.UPQQM { position: fixed; }

.SaFEm, .tVNua, .XCGgr { animation-iteration-count: infinite; animation-tim=
ing-function: ease-out; animation-duration: 2s; animation-fill-mode: both; =
animation-delay: 1s; animation-direction: normal; border-radius: 100px; }

.XCGgr { animation-name: QgX9s; }

@keyframes QgX9s {=20
  0% { box-shadow: 0 0 0 0 var(--red-40); }
  50% { box-shadow: transparent 0px 0px 2px 10px; }
  100% { box-shadow: transparent 0px 0px 2px 10px; }
}

.tVNua { animation-name: BHEmJ; }

@keyframes BHEmJ {=20
  0% { box-shadow: 0 0 0 0 var(--green-60); }
  50% { box-shadow: transparent 0px 0px 2px 10px; }
  100% { box-shadow: transparent 0px 0px 2px 10px; }
}

.SaFEm { animation-name: WHKCH; }

@keyframes WHKCH {=20
  0% { box-shadow: 0 0 0 0 var(--blue-40); }
  50% { box-shadow: transparent 0px 0px 2px 10px; }
  100% { box-shadow: transparent 0px 0px 2px 10px; }
}

.m2vlI { width: 600px; }

.KetZV { box-shadow: var(--elevation100-shadow); border: .5px solid var(--b=
lue-gray-40); background-color: var(--color-background-base-default); borde=
r-radius: var(--radius-3); flex: 1 1 auto; }

.KetZV .d96oB { border: .5px solid var(--color-border-base-subdued); }

.KetZV div[role=3D"tablist"] { position: relative; padding: var(--space-2) =
var(--space-3) var(--space-2) var(--space-2); }

.KetZV div[role=3D"tablist"] > div { gap: var(--space-2) !important; overfl=
ow: visible !important; }

.KetZV div[role=3D"tablist"] button[role=3D"tab"] { line-height: 1.125rem; =
padding: 3px var(--space-2); }

.KetZV div[role=3D"tablist"] button[role=3D"tab"]:hover > div { color: var(=
--color-text-base-default); }

.KetZV div[role=3D"tablist"] button[role=3D"tab"] > div { border-bottom: no=
ne; padding: 0px; }

.KetZV div[role=3D"tablist"] button[role=3D"tab"] > div::after { width: 0px=
; }

.KetZV div[role=3D"tablist"] button[role=3D"tab"] > div > span { display: i=
nline-block; width: fit-content; font-size: 12px; font-weight: 500 !importa=
nt; }

.KetZV div[role=3D"tablist"] button[role=3D"tab"][aria-selected=3D"true"] >=
 div { color: var(--color-text-base-default); }

.KetZV div[role=3D"tablist"] button[role=3D"tab"][aria-selected=3D"true"] >=
 div > span { font-weight: 700 !important; }

.KetZV div[role=3D"tablist"] .USGAc { margin-left: auto; align-self: center=
; border-radius: var(--radius-3); background-color: var(--neutral-gray-0); =
color: var(--neutral-gray-60); font-size: 12px; }

.KetZV div[role=3D"tabpanel"] { padding: 0px; }

.qFbmx { border: 1px solid var(--neutral-gray-20); border-radius: 0.375rem;=
 height: 1.5rem; color: var(--color-text-base-default); }

.qFbmx:hover { background: var(--button-tertiary-background-hover) !importa=
nt; box-shadow: none !important; }

.qFbmx span { font-weight: 500 !important; }

.qFbmx kbd { height: 1rem !important; border: none !important; background-c=
olor: var(--color-background-base-subdued) !important; color: var(--neutral=
-gray-40) !important; font-size: 10px !important; line-height: 15px !import=
ant; }

.SbBwe { box-sizing: border-box; }

.PA1jn { box-shadow: inset 0 4px 4px -4px var(--color-elevation-base-defaul=
t-f5); }

.vhiR2 { box-shadow: inset 0 -4px 4px -4px var(--color-elevation-base-defau=
lt-f5); }

.PA1jn.vhiR2 { box-shadow: inset 0 4px 4px -4px var(--color-elevation-base-=
default-f5),inset 0 -4px 4px -4px var(--color-elevation-base-default-f5); }

.o53qS { animation: 0.5s ease-in-out 0s 1 normal none running OpP5u; mask-r=
epeat: no-repeat; }

@keyframes OpP5u {=20
  0% { opacity: 0; mask-size: 0px; mask-image: linear-gradient(90deg, rgb(0=
, 0, 0), transparent); }
  100% { opacity: 1; mask-size: 100%; mask-image: linear-gradient(90deg, rg=
b(0, 0, 0), transparent); }
}

.zv_Ws { min-width: 0.1875rem; border-radius: var(--radius-half); }

.zv_Ws.oimfv { background-color: var(--red-40); }

.zv_Ws.GGpaV { background-color: var(--green-40); }

.ANoVu { overflow-y: auto; }

.ANoVu > * { word-break: break-word; }

.ANoVu.M7jcz:not(.SDH6l) { box-shadow: inset 0 4px 4px -4px var(--color-ele=
vation-base-default-f5); }

.ANoVu.SDH6l:not(.M7jcz) { box-shadow: inset 0 -4px 4px -4px var(--color-el=
evation-base-default-f5); }

.ANoVu.M7jcz.SDH6l { box-shadow: inset 0 4px 4px -4px var(--color-elevation=
-base-default-f5),inset 0 -4px 4px -4px var(--color-elevation-base-default-=
f5); }

.ANoVu .JruGr { font-weight: 500; display: block; margin-bottom: var(--spac=
e-2); }

.ANoVu .JruGr.ncGgB { color: var(--red-60); }

.ANoVu .JruGr.FKJEV { color: var(--color-text-brand-default); }

.As2d2 { position: relative; }

.HQ1NZ { margin: 0px; }

.e99eq { width: 1.25rem; }

.e99eq path:first-child { fill: var(--color-icon-base-subdued); }

._kIwY { position: relative; }

._kIwY .eH5TV { position: absolute; right: calc(100% + var(--space-20) + va=
r(--space-2)); top: 50%; translate: 0px -50%; z-index: 1; }

.qCfRi { position: relative; }

.qCfRi .KYYEg { font-weight: 500; }

.qCfRi .PWfBY { position: absolute; right: 0px; bottom: 0px; }

.LfX1e .RoTP_ { border-bottom: 1px solid var(--color-border-business-subdue=
d); }

.LfX1e .RoTP_ .B0peX { flex-grow: 1; }

.LfX1e .RoTP_ .B0peX .SLnHC { width: 100%; border: none; outline: none; col=
or: var(--color-text-base-default); }

.LfX1e .o_ldN .eezEJ { padding-left: var(--space-10); }

.LfX1e .o_ldN .FmvTD { width: 100%; justify-content: start; padding-left: v=
ar(--space-3); border: none; }

.XLKBt { background: var(--color-background-base-inverse); padding: var(--s=
pace-1); border-radius: var(--radius-3); }

.XLKBt .Mrvu1 { --color-icon-premium-default: var(--color-border-premium-de=
fault); }

.XLKBt .vLnAx { padding: var(--space-1); color: var(--color-text-base-inver=
se); }

.XLKBt ._owGm { width: 0.4rem; height: 0.4rem; }

.M7dj3 { box-shadow: var(--elevation100-shadow); border: .5px solid var(--b=
lue-gray-40); background-color: var(--color-background-base-default); borde=
r-radius: var(--radius-3); }

@keyframes Vv6WG {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.kjElf { display: flex; flex-direction: column; min-width: 248px; width: 10=
0%; height: 100%; }

.kjElf.hkEx2, .kjElf.hkEx2 .Ua5wJ { align-items: center; }

.kjElf.hkEx2 .Ua5wJ .GnQ_a, .kjElf.hkEx2 .Ua5wJ .kWEW0 { text-align: center=
; }

.kjElf .Ua5wJ { display: flex; flex-direction: column; flex-grow: 1; flex-s=
hrink: 0; width: 100%; }

.kjElf .Ua5wJ .osGQI { min-height: 32px; margin-bottom: 16px; }

.kjElf .Ua5wJ .GnQ_a { font-size: 20px; width: 100%; margin-bottom: 16px; }

.kjElf .Ua5wJ .GnQ_a, .kjElf .Ua5wJ .GnQ_a.b7yYp { font-family: Inter, sans=
-serif; font-style: normal; font-weight: 700; color: rgb(14, 16, 26); line-=
height: 24px; }

.kjElf .Ua5wJ .GnQ_a.b7yYp { font-size: 16px; margin-bottom: 8px; }

.kjElf .Ua5wJ .ZOSRK { width: 100%; }

.kjElf .Ua5wJ .ZOSRK.b7yYp { margin-bottom: 8px; }

.kjElf .Ua5wJ .ZOSRK:not(.b7yYp) { margin-bottom: 16px; }

.kjElf .Ua5wJ .kWEW0 { font-family: Inter, sans-serif; font-style: normal; =
font-weight: 700; color: rgb(14, 16, 26); font-size: 16px; line-height: 24p=
x; width: 100%; margin-bottom: 16px; }

.kjElf .Ua5wJ .l8New { width: 100%; min-height: 96px; flex-grow: 1; }

.kjElf .Ua5wJ .l8New.b7yYp { max-height: 128px; margin-bottom: 8px; }

.kjElf .Ua5wJ .l8New:not(.b7yYp) { margin-bottom: 16px; }

.kjElf .Ua5wJ .Qbnj_ { margin-bottom: 8px; }

.kjElf .Ua5wJ .Qbnj_, .kjElf .Ua5wJ .VBCx1 { font-family: Inter, sans-serif=
; font-style: normal; font-weight: 400; color: rgb(14, 16, 26); font-size: =
12px; line-height: 18px; width: 100%; }

.kjElf .Ua5wJ .VBCx1 { margin-bottom: 16px; }

.kjElf .Opd8X, .kjElf .tYYGU { width: 100%; }

.kjElf .Opd8X .QKLT7 { height: 12px; }

.kjElf .ARBzt { display: flex; flex-direction: column; align-items: center;=
 justify-content: center; flex-grow: 1; }

.kjElf .ARBzt .kJIzg { width: 64px; height: 64px; background-size: 64px 64p=
x; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlh=
en/src/images/b2e3b5bed5de724a/notification-ok-variant-large.svg"); backgro=
und-repeat: no-repeat; margin-bottom: 16px; }

.kjElf .ARBzt .iXQnf { font-weight: 700; font-size: 20px; line-height: 24px=
; margin-bottom: 8px; }

.kjElf .ARBzt .iXQnf, .kjElf .ARBzt .Ydufo { font-family: Inter, sans-serif=
; font-style: normal; color: rgb(14, 16, 26); }

.kjElf .ARBzt .Ydufo { font-weight: 400; font-size: 14px; line-height: 21px=
; font-feature-settings: "ss03"; margin-bottom: 16px; }

@keyframes uouSO {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.sp8vS { display: flex; flex-direction: column; align-items: center; }

.sp8vS .eH6DL { margin-bottom: 6px; }

.sp8vS .eH6DL.DhaWh { background-image: url("chrome-extension://kbfnbcaeplb=
cioakkpcpgfkobkghlhen/src/images/6d54743316c1f3d5/emoji-disheartening.svg")=
; }

.sp8vS .eH6DL.BS_8d, .sp8vS .eH6DL.DhaWh { width: 20px; height: 20px; backg=
round-size: 20px 20px; background-repeat: no-repeat; }

.sp8vS .eH6DL.BS_8d { background-image: url("chrome-extension://kbfnbcaeplb=
cioakkpcpgfkobkghlhen/src/images/117e7a1dc0d9b3d3/emoji-neutral.svg"); }

.sp8vS .eH6DL.dUZNd { width: 20px; height: 20px; background-size: 20px 20px=
; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhe=
n/src/images/6b2d9e1aae62a6fc/emoji-smiling.svg"); background-repeat: no-re=
peat; }

.KAzfW { width: 100%; height: 100%; }

.KAzfW, .KAzfW .WkjDU { display: flex; align-items: center; justify-content=
: center; }

.KAzfW .WkjDU { font-family: Inter, sans-serif; font-style: normal; font-we=
ight: 400; color: rgb(14, 16, 26); font-size: 12px; line-height: 18px; flex=
-direction: column; width: 80px; height: 80px; cursor: pointer; margin-righ=
t: 4px; }

.KAzfW .WkjDU:focus, .KAzfW .WkjDU:hover { background: rgb(240, 242, 252); =
border-radius: 8px; }

.KAzfW .WkjDU.onilo { background: rgb(237, 245, 255); border: 1px solid rgb=
(74, 110, 224); box-sizing: border-box; border-radius: 8px; }

@keyframes tww6q {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.Te37e { display: grid; align-items: center; grid-template-columns: 24px au=
to; }

.Te37e .mFHkX { background: rgb(249, 250, 255); border: 1.5px solid rgb(159=
, 166, 191); box-sizing: border-box; border-radius: 2px; width: 16px; heigh=
t: 16px; }

.Te37e .mFHkX.DdH2q { background: rgb(255, 255, 255); border: 1px solid rgb=
(100, 107, 129); }

.Te37e .mFHkX.JhHnz { display: flex; align-items: flex-end; background: rgb=
(74, 110, 224); border: none; }

.Te37e .mFHkX.JhHnz .zShXt { width: 16px; height: 13px; background-size: 16=
px 13px; background-image: url("chrome-extension://kbfnbcaeplbcioakkpcpgfko=
bkghlhen/src/images/8fe508c1e8d5882e/checkmark.svg"); background-repeat: no=
-repeat; }
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k----
Content-Type: text/html
Content-ID: <frame-62598D59EB7B235DE361CF6E85011D17@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body data-new-gr-c-s-check-loaded=3D"14.1207.0" data-gr-e=
xt-installed=3D""></body><grammarly-desktop-integration data-grammarly-shad=
ow-root=3D"true"><template shadowmode=3D"open"><div aria-label=3D"grammarly=
-integration" role=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-int=
egration" data-content=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive=
&quot;:true,&quot;isUserDisabled&quot;:false}"></div></template></grammarly=
-desktop-integration></html>
------MultipartBoundary--IxDlJHDqpCuKgzLVogcamkIE1XMcehs15Zlx7Ph28k------
